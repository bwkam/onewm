@:pure
extern class Math {

	static var PI(default,null):Float;

	static var NEGATIVE_INFINITY(default,null):Float;

	static var POSITIVE_INFINITY(default,null):Float;

	static var NaN(default,null):Float;

	@:pure(inferredPure)
	static function abs(v:Float):Float;

	@:pure(inferredPure)
	static function min(a:Float, b:Float):Float;

	@:pure(inferredPure)
	static function max(a:Float, b:Float):Float;

	@:pure(inferredPure)
	static function sin(v:Float):Float;

	@:pure(inferredPure)
	static function cos(v:Float):Float;

	@:pure(inferredPure)
	static function tan(v:Float):Float;

	@:pure(inferredPure)
	static function asin(v:Float):Float;

	@:pure(inferredPure)
	static function acos(v:Float):Float;

	@:pure(inferredPure)
	static function atan(v:Float):Float;

	@:pure(inferredPure)
	static function atan2(y:Float, x:Float):Float;

	@:pure(inferredPure)
	static function exp(v:Float):Float;

	@:pure(inferredPure)
	static function log(v:Float):Float;

	@:pure(inferredPure)
	static function pow(v:Float, exp:Float):Float;

	@:pure(inferredPure)
	static function sqrt(v:Float):Float;

	@:pure(inferredPure)
	static function round(v:Float):Int;

	@:pure(inferredPure)
	static function floor(v:Float):Int;

	@:pure(inferredPure)
	static function ceil(v:Float):Int;

	@:pure(inferredPure)
	static function random():Float;

	@:pure(inferredPure)
	static function ffloor(v:Float):Float;

	@:pure(inferredPure)
	static function fceil(v:Float):Float;

	@:pure(inferredPure)
	static function fround(v:Float):Float;

	@:pure(inferredPure)
	static function isFinite(f:Float):Bool;

	@:pure(inferredPure)
	static function isNaN(f:Float):Bool;
}