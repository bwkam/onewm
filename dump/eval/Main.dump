@:used @:build(wms.bspwm.macros.Macro.gen_config())
class Main {

	@:keep
	static function main() {
		Main.build_json();
		Main.setup();
		Main.inject();
	}

	@:pure(inferredPure)
	public static function extra() {
		return "echo \"hi\"";
	}

	public static function inject() {
		sys.io.File.append("config", null).writeString(Main.extra() + "\n", null);
	}

	public static function build_json() {
		var block = [];
		var rules = new JsonParser_1(null, null, null).fromJson(haxe.format.JsonPrinter.print(cast {workspaces : ["1", "2", "3", "4", "5"], config : {global : {window_gap : "3", border_width : "10"}}, rules : [{Photoshop : {manage : "off", app : "Photoshop", state : "tiling"}, Gimp : {manage : "on", app : "Gimp", state : "floating"}}]}, null, null), "config.json").rules;
		{
			var ` = 0;
			while ((` < rules.length)) {
				var expr = cast {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : {file : "src/Main.hx", min : 934, max : 938}};
				{
					var i = rules[` ++].iterator();
					while ((i.hasNext())) {
						var expr = haxe.macro.Context.makeExpr(i.next(), haxe.macro.Context.makePosition({file : "src/Main.hx", min : 994, max : 997}));
						expr = cast {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("Rule")), pos : {file : "src/Main.hx", min : 978, max : 982}}, "add_rule"), pos : {file : "src/Main.hx", min : 978, max : 991}}, [expr]), pos : {file : "src/Main.hx", min : 978, max : 998}};
						block.push(expr);
					};
				};
			};
		};
		return cast {expr : haxe.macro.ExprDef.EBlock(block), pos : {file : "src/Main.hx", min : 1136, max : 1143}};
	}

	public static function setup() {
		sys.io.File.append("config", false).writeString("", null);
		sys.io.File.append("config", false).writeString("", null);
		sys.io.File.append("config", false).writeString("", null);
		sys.io.File.append("config", false).writeString("", null);
		sys.io.File.append("config", false).writeString("", null);
	}
}