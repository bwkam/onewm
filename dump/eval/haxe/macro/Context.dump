@:keep @:directlyUsed @:used
class haxe.macro.Context {

	public static function makeExpr(v:Dynamic, pos:haxe.macro.Position) {
		return haxe.macro.Context.load("make_expr", 2)(v, pos);
	}

	public static function makePosition(inf:{ min : Int, max : Int, file : String }) {
		return haxe.macro.Context.load("make_position", 3)(inf.min, inf.max, inf.file);
	}

	@:allow(haxe.macro.TypeTools) @:allow(haxe.macro.MacroStringTools) @:allow(haxe.macro.TypedExprTools) @:allow(haxe.macro.PositionTools)
	static function load(f:String, nargs:Int) {
		return eval.vm.Context.callMacroApi(f);
	}
}