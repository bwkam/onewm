class utils.Utils {

	@:has_untyped
	public static macro function load(path:String) {
		return try {
			var json = {
				var text = sys.io.File.getContent(path);
				new haxe.format.JsonParser(text).doParse();
			};
			cast haxe.macro.Context.makeExpr(json, $__mk_pos__("src/utils/Utils.hx", 207, 213));
		} catch (`:Dynamic) {
			var ` = haxe.Exception.caught(`);
			{};
			if (true) {
				var e = cast `;
				{
					haxe.macro.Context.error("Failed to load json: " + Std.string(e), haxe.macro.Context.currentPos());
				};
			} else throw `;
		};
	}

	public static macro function return_expr(expr:haxe.macro.Expr) {
		return cast expr;
	}
}