class json2object.reader.DataBuilder {

	@:value(0) @:persistent
	static var counter:Int = 0;

	@:value(new Map<String,Type>())
	static var parsers:haxe.ds.Map<String, haxe.macro.Type> = {
		{};
		new haxe.ds.StringMap();
	};

	@:value(null)
	static var callPosition:Null<haxe.macro.Position> = null;

	@:value(":jcustomparse")
	static var jcustom:String = ":jcustomparse";

	static function notNull(type:haxe.macro.Type) {
		return @:ast(switch (type) {
	case TAbstract(_.get() => t, p):
		(t.name == "Null") ? notNull(p[0]) : type;	
	case TType(_.get() => t, p):
		(t.name == "Null") ? notNull(type.follow()) : type;	
	default:
		type;	
}) switch (enumIndex type) {
			case 3: {
				var `2 = type[0];
				var `3 = type[1];
				{
					var _hx_tmp;
					{
						var t = (_hx_tmp = `2.get());
						var p = `3;
						{
							if ((t.name == "Null")) {
								json2object.reader.DataBuilder.notNull({
									var once = null;
									haxe.macro.Context.follow(type, once);
								});
							} else {
								type;
							};
						};
					};
				};
			};
			case 8: {
				var ` = type[0];
				var `1 = type[1];
				{
					var _hx_tmp;
					{
						var t = (_hx_tmp = `.get());
						var p = `1;
						{
							if ((t.name == "Null")) {
								json2object.reader.DataBuilder.notNull(p[0]);
							} else {
								type;
							};
						};
					};
				};
			};
			default: {
				type;
			}
		};
	}

	static function isNullable(type:haxe.macro.Type) {
		if (json2object.reader.DataBuilder.notNull(type) != type) {
			return true;
		};
		return @:ast(switch (type.followWithAbstracts()) {
	case TAbstract(_.get() => t, _):
		!t.meta.has(":notNull");	
	default:
		true;	
}) {
			var ` = {
				var once = false;
				if ((once == null)) once = false;
				haxe.macro.Context.followWithAbstracts(type, once);
			};
			if (enumIndex ` == 8) {
				var `1 = `[0];
				var `2 = `[1];
				{
					var _hx_tmp;
					{
						var t = (_hx_tmp = `1.get());
						{
							! t.meta.has(":notNull");
						};
					};
				};
			} else {
				true;
			};
		};
	}

	static function isBaseType(type:haxe.macro.Type) {
		return @:ast(switch (type.followWithAbstracts()) {
	case TInst(_.get() => t, p):
		(t.module == "String" || (t.module == "Array" && isBaseType(p[0])));	
	case TAbstract(_.get() => t, p):
		(t.module == "StdTypes" && (t.name == "Int" || t.name == "Float" || t.name == "Bool"));	
	default:
		false;	
}) {
			var ` = {
				var once = false;
				if ((once == null)) once = false;
				haxe.macro.Context.followWithAbstracts(type, once);
			};
			switch (enumIndex `) {
				case 2: {
					var `3 = `[0];
					var `4 = `[1];
					{
						var _hx_tmp;
						{
							var t = (_hx_tmp = `3.get());
							var p = `4;
							{
								(t.module == "String" || (t.module == "Array" && json2object.reader.DataBuilder.isBaseType(p[0])));
							};
						};
					};
				};
				case 8: {
					var `1 = `[0];
					var `2 = `[1];
					{
						var _hx_tmp;
						{
							var t = (_hx_tmp = `1.get());
							var p = `2;
							{
								(t.module == "StdTypes" && (t.name == "Int" || t.name == "Float" || t.name == "Bool"));
							};
						};
					};
				};
				default: {
					false;
				}
			};
		};
	}

	static function changeExprOf(field:haxe.macro.Field, e:haxe.macro.Expr) {
		@:ast(switch (field.kind) {
	case FFun(f):
		f.expr = e;	
	default:
		return;	
}) {
			var ` = field.kind;
			if (enumIndex ` == 1) {
				var `1 = `[0];
				{
					var f = `1;
					{
						f.expr = e;
					};
				};
			} else {
				return;
			};
		};
	}

	static function changeFunction(name:String, of:haxe.macro.TypeDefinition, to:haxe.macro.Expr) {
		{
			var ` = 0;
			var `1 = of.fields;
			while (` < `1.length) {
				var field = `1[`];
				++ `;
				if (field.name == name) {
					json2object.reader.DataBuilder.changeExprOf(field, to);
				};
			};
		};
	}

	@:has_untyped
	public static function makeStringParser(parser:haxe.macro.TypeDefinition) {
		json2object.reader.DataBuilder.changeFunction("loadJsonString", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3142, 3147)}, {expr : haxe.macro.ExprDef.ECast({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("s")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3155, 3156)}, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3150, 3156)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3142, 3156)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3141, 3158)});
		json2object.reader.DataBuilder.changeFunction("loadJsonNull", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3209, 3214)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3217, 3221)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3209, 3221)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3208, 3223)});
	}

	@:has_untyped @:value({ base : null })
	public static function makeIntParser(parser:haxe.macro.TypeDefinition, base:Null<haxe.macro.Type> = null) {
		var e = cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3331, 3336)}, {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("loadJsonInt")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3339, 3350)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("f")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3351, 3352)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3354, 3357)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3359, 3367)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3369, 3374)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3339, 3375)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3331, 3375)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3326, 3380)};
		json2object.reader.DataBuilder.changeFunction("loadJsonNumber", parser, e);
		if (base != null && json2object.reader.DataBuilder.isNullable(base)) {
			json2object.reader.DataBuilder.changeFunction("loadJsonNull", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3520, 3525)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3528, 3532)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3520, 3532)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3519, 3534)});
		};
	}

	@:has_untyped @:value({ base : null })
	public static function makeUIntParser(parser:haxe.macro.TypeDefinition, base:Null<haxe.macro.Type> = null) {
		var e = cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3647, 3652)}, {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("loadJsonUInt")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3655, 3667)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("f")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3668, 3669)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3671, 3674)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3676, 3684)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3686, 3691)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3655, 3692)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3647, 3692)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3642, 3697)};
		json2object.reader.DataBuilder.changeFunction("loadJsonNumber", parser, e);
		if (base != null && json2object.reader.DataBuilder.isNullable(base)) {
			json2object.reader.DataBuilder.changeFunction("loadJsonNull", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3837, 3842)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3845, 3849)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3837, 3849)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3836, 3851)});
		};
	}

	@:has_untyped @:value({ base : null })
	public static function makeFloatParser(parser:haxe.macro.TypeDefinition, base:Null<haxe.macro.Type> = null) {
		var e = cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3965, 3970)}, {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("loadJsonFloat")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3973, 3986)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("f")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3987, 3988)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3990, 3993)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3995, 4003)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4005, 4010)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3973, 4011)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3965, 4011)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 3960, 4016)};
		json2object.reader.DataBuilder.changeFunction("loadJsonNumber", parser, e);
		if (base != null && json2object.reader.DataBuilder.isNullable(base)) {
			json2object.reader.DataBuilder.changeFunction("loadJsonNull", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4156, 4161)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4164, 4168)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4156, 4168)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4155, 4170)});
		};
	}

	@:has_untyped @:value({ base : null })
	public static function makeBoolParser(parser:haxe.macro.TypeDefinition, base:Null<haxe.macro.Type> = null) {
		json2object.reader.DataBuilder.changeFunction("loadJsonBool", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4311, 4316)}, {expr : haxe.macro.ExprDef.ECast({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("b")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4324, 4325)}, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4319, 4325)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4311, 4325)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4309, 4328)});
		if (base != null && json2object.reader.DataBuilder.isNullable(base)) {
			json2object.reader.DataBuilder.changeFunction("loadJsonNull", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4422, 4427)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4430, 4434)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4422, 4434)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4421, 4436)});
		};
	}

	@:has_untyped
	public static function makeArrayParser(parser:haxe.macro.TypeDefinition, subType:haxe.macro.Type, baseParser:haxe.macro.BaseType) {
		var cls = {name : baseParser.name, pack : baseParser.pack, params : [haxe.macro.TypeParam.TPType({
			{};
			@:ast(switch (type) {
	case null:
		null;	
	case TEnum(_.get().isPrivate => true, _):
		direct();	
	case TInst(_.get().isPrivate => true, _):
		direct();	
	case TType(_.get().isPrivate => true, _):
		direct();	
	case TAbstract(_.get().isPrivate => true, _):
		direct();	
	case TMono(_):
		direct();	
	case TEnum(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TInst(_.get() => classType, params):
		switch (classType.kind) {
			case KTypeParameter(_):
				var ct = asComplexType(classType.name);
				switch toType(ct) {
					case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
						ct;					
					default:
						direct();					
				};			
			default:
				TPath(toTypePath(classType, params));			
		};	
	case TType(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TFun(args, ret):
		TFunction([for (a  in  args) a.opt ? nullable(toComplexType(a.t)) : toComplexType(a.t)], toComplexType(ret));	
	case TAnonymous(_.get() => { fields : fields }):
		TAnonymous([for (cf  in  fields) toField(cf)]);	
	case TDynamic(t):
		if (t == null) {
			(TPath({ pack : [], name : "Dynamic", params : [] }) : haxe.macro.Expr.ComplexType);
		} else {
			var ct = toComplexType(t);
			(TPath({ pack : [], name : "Dynamic", params : [TPType(ct)] }) : haxe.macro.Expr.ComplexType);
		};	
	case TLazy(f):
		toComplexType(f());	
	case TAbstract(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	default:
		throw "Invalid type";	
}) if (subType == null) {
				null;
			} else switch (@:exhaustive enumIndex subType) {
				case 0: {
					var `9 = subType[0];
					{
						haxe.macro.TypeTools.toComplexType(subType);
					};
				};
				case 1: {
					var `4 = subType[0];
					var `5 = subType[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `4.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(subType);
							};
						} else {
							var baseType = (_hx_tmp = `4.get());
							var params = `5;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
				case 2: {
					var `14 = subType[0];
					var `15 = subType[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `14.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(subType);
							};
						} else {
							var classType = (_hx_tmp = `14.get());
							var params = `15;
							{
								@:ast(switch (classType.kind) {
	case KTypeParameter(_):
		var ct = asComplexType(classType.name);
		switch toType(ct) {
			case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
				ct;			
			default:
				direct();			
		};	
	default:
		TPath(toTypePath(classType, params));	
}) {
									var ` = classType.kind;
									if (enumIndex ` == 1) {
										var `1 = `[0];
										{
											var ct = {
												var s = classType.name;
												var params = null;
												haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.asTypePath(s, params));
											};
											@:ast(switch toType(ct) {
	case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
		ct;	
	default:
		direct();	
}) {
												var ` = json2object.utils.TypeTools.toType(ct, null);
												if (enumIndex ` == 0) {
													var `1 = `[0];
													if (enumIndex `1 == 2) {
														var `2 = `1[0];
														var `3 = `1[1];
														{
															var _hx_tmp;
															{
																var cl = (_hx_tmp = `2.get());
																if ({
																	var ` = cl.kind;
																	if (enumIndex ` == 1) {
																		var `1 = `[0];
																		true;
																	} else false;
																} && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")) {
																	ct;
																} else {
																	haxe.macro.TypeTools.toComplexType(subType);
																};
															};
														};
													} else {
														haxe.macro.TypeTools.toComplexType(subType);
													};
												} else {
													haxe.macro.TypeTools.toComplexType(subType);
												};
											};
										};
									} else {
										haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(classType, params));
									};
								};
							};
						};
					};
				};
				case 3: {
					var `12 = subType[0];
					var `13 = subType[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `12.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(subType);
							};
						} else {
							var baseType = (_hx_tmp = `12.get());
							var params = `13;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
				case 4: {
					var `10 = subType[0];
					var `11 = subType[1];
					{
						var args = `10;
						var ret = `11;
						{
							haxe.macro.ComplexType.TFunction({
								var ` = [];
								{
									var `1 = 0;
									while (`1 < args.length) {
										var a = args[`1];
										++ `1;
										`.push(if (a.opt) {
											json2object.utils.TypeTools.nullable(json2object.utils.TypeTools.toComplexType(a.t));
										} else {
											json2object.utils.TypeTools.toComplexType(a.t);
										});
									};
								};
								`;
							}, json2object.utils.TypeTools.toComplexType(ret));
						};
					};
				};
				case 5: {
					var `6 = subType[0];
					{
						var _hx_tmp;
						{
							var `7 = (_hx_tmp = `6.get()).fields;
							var `8 = _hx_tmp.status;
							{
								var fields = `7;
								{
									haxe.macro.ComplexType.TAnonymous({
										var ` = [];
										{
											var `1 = 0;
											while (`1 < fields.length) {
												var cf = fields[`1];
												++ `1;
												`.push(json2object.utils.TypeTools.toField(cf));
											};
										};
										`;
									});
								};
							};
						};
					};
				};
				case 6: {
					var `2 = subType[0];
					{
						var t = `2;
						{
							if (t == null) {
								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : []});
							} else {
								var ct = json2object.utils.TypeTools.toComplexType(t);
								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(ct)]});
							};
						};
					};
				};
				case 7: {
					var `3 = subType[0];
					{
						var f = `3;
						{
							json2object.utils.TypeTools.toComplexType(f());
						};
					};
				};
				case 8: {
					var ` = subType[0];
					var `1 = subType[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(subType);
							};
						} else {
							var baseType = (_hx_tmp = `.get());
							var params = `1;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
			};
		})]};
		var e = if (haxe.macro.Context.defined("cs")) {
			cast {expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4769, 4774)}, {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EVars([{name : "parser", type : null, expr : {expr : haxe.macro.ExprDef.ENew(cls, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4805, 4811)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4813, 4819)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("THROW")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4821, 4826)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4796, 4827)}, isFinal : cast false, meta : []}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4783, 4828)}, {expr : haxe.macro.ExprDef.ECast({expr : haxe.macro.ExprDef.EArrayDecl([{expr : haxe.macro.ExprDef.EFor({expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpIn, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("j")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4850, 4851)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("a")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4855, 4856)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4850, 4856)}, {expr : haxe.macro.ExprDef.ETry({expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("parser")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4870, 4876)}, "loadJson"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4870, 4885)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("j")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4886, 4887)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4889, 4897)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4870, 4898)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4868, 4901)}, [{name : "e", type : haxe.macro.ComplexType.TPath({pack : ["json2object"], name : "Error", params : [], sub : "InternalError"}), expr : {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EIf({expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpNotEq, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("e")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4963, 4964)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("ParsingThrow")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4968, 4980)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4963, 4980)}, {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EThrow({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("e")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4998, 4999)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4992, 4997)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4982, 5009)}, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4959, 5009)}, {expr : haxe.macro.ExprDef.EContinue, pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5018, 5026)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4950, 5035)}}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4864, 5035)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4845, 5035)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4838, 5041)}, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4833, 5041)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4777, 5047)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 4769, 5047)};
		} else {
			cast {expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5068, 5073)}, {expr : haxe.macro.ExprDef.ECast({expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("loadJsonArrayValue")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5081, 5099)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("a")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5100, 5101)}, {expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.ENew(cls, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5112, 5118)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5120, 5126)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("THROW")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5128, 5133)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5103, 5134)}, "loadJson"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5103, 5143)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5145, 5153)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5081, 5154)}, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5076, 5154)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5068, 5154)};
		};
		json2object.reader.DataBuilder.changeFunction("loadJsonArray", parser, e);
		json2object.reader.DataBuilder.changeFunction("loadJsonNull", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5255, 5260)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5263, 5267)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5255, 5267)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5254, 5269)});
	}

	@:has_untyped
	public static function makeListParser(parser:haxe.macro.TypeDefinition, subType:haxe.macro.Type, baseParser:haxe.macro.BaseType) {
		var cls = {name : baseParser.name, pack : baseParser.pack, params : [haxe.macro.TypeParam.TPType({
			{};
			@:ast(switch (type) {
	case null:
		null;	
	case TEnum(_.get().isPrivate => true, _):
		direct();	
	case TInst(_.get().isPrivate => true, _):
		direct();	
	case TType(_.get().isPrivate => true, _):
		direct();	
	case TAbstract(_.get().isPrivate => true, _):
		direct();	
	case TMono(_):
		direct();	
	case TEnum(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TInst(_.get() => classType, params):
		switch (classType.kind) {
			case KTypeParameter(_):
				var ct = asComplexType(classType.name);
				switch toType(ct) {
					case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
						ct;					
					default:
						direct();					
				};			
			default:
				TPath(toTypePath(classType, params));			
		};	
	case TType(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TFun(args, ret):
		TFunction([for (a  in  args) a.opt ? nullable(toComplexType(a.t)) : toComplexType(a.t)], toComplexType(ret));	
	case TAnonymous(_.get() => { fields : fields }):
		TAnonymous([for (cf  in  fields) toField(cf)]);	
	case TDynamic(t):
		if (t == null) {
			(TPath({ pack : [], name : "Dynamic", params : [] }) : haxe.macro.Expr.ComplexType);
		} else {
			var ct = toComplexType(t);
			(TPath({ pack : [], name : "Dynamic", params : [TPType(ct)] }) : haxe.macro.Expr.ComplexType);
		};	
	case TLazy(f):
		toComplexType(f());	
	case TAbstract(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	default:
		throw "Invalid type";	
}) if (subType == null) {
				null;
			} else switch (@:exhaustive enumIndex subType) {
				case 0: {
					var `9 = subType[0];
					{
						haxe.macro.TypeTools.toComplexType(subType);
					};
				};
				case 1: {
					var `4 = subType[0];
					var `5 = subType[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `4.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(subType);
							};
						} else {
							var baseType = (_hx_tmp = `4.get());
							var params = `5;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
				case 2: {
					var `14 = subType[0];
					var `15 = subType[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `14.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(subType);
							};
						} else {
							var classType = (_hx_tmp = `14.get());
							var params = `15;
							{
								@:ast(switch (classType.kind) {
	case KTypeParameter(_):
		var ct = asComplexType(classType.name);
		switch toType(ct) {
			case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
				ct;			
			default:
				direct();			
		};	
	default:
		TPath(toTypePath(classType, params));	
}) {
									var ` = classType.kind;
									if (enumIndex ` == 1) {
										var `1 = `[0];
										{
											var ct = {
												var s = classType.name;
												var params = null;
												haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.asTypePath(s, params));
											};
											@:ast(switch toType(ct) {
	case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
		ct;	
	default:
		direct();	
}) {
												var ` = json2object.utils.TypeTools.toType(ct, null);
												if (enumIndex ` == 0) {
													var `1 = `[0];
													if (enumIndex `1 == 2) {
														var `2 = `1[0];
														var `3 = `1[1];
														{
															var _hx_tmp;
															{
																var cl = (_hx_tmp = `2.get());
																if ({
																	var ` = cl.kind;
																	if (enumIndex ` == 1) {
																		var `1 = `[0];
																		true;
																	} else false;
																} && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")) {
																	ct;
																} else {
																	haxe.macro.TypeTools.toComplexType(subType);
																};
															};
														};
													} else {
														haxe.macro.TypeTools.toComplexType(subType);
													};
												} else {
													haxe.macro.TypeTools.toComplexType(subType);
												};
											};
										};
									} else {
										haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(classType, params));
									};
								};
							};
						};
					};
				};
				case 3: {
					var `12 = subType[0];
					var `13 = subType[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `12.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(subType);
							};
						} else {
							var baseType = (_hx_tmp = `12.get());
							var params = `13;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
				case 4: {
					var `10 = subType[0];
					var `11 = subType[1];
					{
						var args = `10;
						var ret = `11;
						{
							haxe.macro.ComplexType.TFunction({
								var ` = [];
								{
									var `1 = 0;
									while (`1 < args.length) {
										var a = args[`1];
										++ `1;
										`.push(if (a.opt) {
											json2object.utils.TypeTools.nullable(json2object.utils.TypeTools.toComplexType(a.t));
										} else {
											json2object.utils.TypeTools.toComplexType(a.t);
										});
									};
								};
								`;
							}, json2object.utils.TypeTools.toComplexType(ret));
						};
					};
				};
				case 5: {
					var `6 = subType[0];
					{
						var _hx_tmp;
						{
							var `7 = (_hx_tmp = `6.get()).fields;
							var `8 = _hx_tmp.status;
							{
								var fields = `7;
								{
									haxe.macro.ComplexType.TAnonymous({
										var ` = [];
										{
											var `1 = 0;
											while (`1 < fields.length) {
												var cf = fields[`1];
												++ `1;
												`.push(json2object.utils.TypeTools.toField(cf));
											};
										};
										`;
									});
								};
							};
						};
					};
				};
				case 6: {
					var `2 = subType[0];
					{
						var t = `2;
						{
							if (t == null) {
								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : []});
							} else {
								var ct = json2object.utils.TypeTools.toComplexType(t);
								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(ct)]});
							};
						};
					};
				};
				case 7: {
					var `3 = subType[0];
					{
						var f = `3;
						{
							json2object.utils.TypeTools.toComplexType(f());
						};
					};
				};
				case 8: {
					var ` = subType[0];
					var `1 = subType[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(subType);
							};
						} else {
							var baseType = (_hx_tmp = `.get());
							var params = `1;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
			};
		})]};
		var list = {name : "List", pack : ["haxe", "ds"], params : [haxe.macro.TypeParam.TPType({
			{};
			@:ast(switch (type) {
	case null:
		null;	
	case TEnum(_.get().isPrivate => true, _):
		direct();	
	case TInst(_.get().isPrivate => true, _):
		direct();	
	case TType(_.get().isPrivate => true, _):
		direct();	
	case TAbstract(_.get().isPrivate => true, _):
		direct();	
	case TMono(_):
		direct();	
	case TEnum(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TInst(_.get() => classType, params):
		switch (classType.kind) {
			case KTypeParameter(_):
				var ct = asComplexType(classType.name);
				switch toType(ct) {
					case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
						ct;					
					default:
						direct();					
				};			
			default:
				TPath(toTypePath(classType, params));			
		};	
	case TType(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TFun(args, ret):
		TFunction([for (a  in  args) a.opt ? nullable(toComplexType(a.t)) : toComplexType(a.t)], toComplexType(ret));	
	case TAnonymous(_.get() => { fields : fields }):
		TAnonymous([for (cf  in  fields) toField(cf)]);	
	case TDynamic(t):
		if (t == null) {
			(TPath({ pack : [], name : "Dynamic", params : [] }) : haxe.macro.Expr.ComplexType);
		} else {
			var ct = toComplexType(t);
			(TPath({ pack : [], name : "Dynamic", params : [TPType(ct)] }) : haxe.macro.Expr.ComplexType);
		};	
	case TLazy(f):
		toComplexType(f());	
	case TAbstract(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	default:
		throw "Invalid type";	
}) if (subType == null) {
				null;
			} else switch (@:exhaustive enumIndex subType) {
				case 0: {
					var `9 = subType[0];
					{
						haxe.macro.TypeTools.toComplexType(subType);
					};
				};
				case 1: {
					var `4 = subType[0];
					var `5 = subType[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `4.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(subType);
							};
						} else {
							var baseType = (_hx_tmp = `4.get());
							var params = `5;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
				case 2: {
					var `14 = subType[0];
					var `15 = subType[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `14.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(subType);
							};
						} else {
							var classType = (_hx_tmp = `14.get());
							var params = `15;
							{
								@:ast(switch (classType.kind) {
	case KTypeParameter(_):
		var ct = asComplexType(classType.name);
		switch toType(ct) {
			case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
				ct;			
			default:
				direct();			
		};	
	default:
		TPath(toTypePath(classType, params));	
}) {
									var ` = classType.kind;
									if (enumIndex ` == 1) {
										var `1 = `[0];
										{
											var ct = {
												var s = classType.name;
												var params = null;
												haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.asTypePath(s, params));
											};
											@:ast(switch toType(ct) {
	case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
		ct;	
	default:
		direct();	
}) {
												var ` = json2object.utils.TypeTools.toType(ct, null);
												if (enumIndex ` == 0) {
													var `1 = `[0];
													if (enumIndex `1 == 2) {
														var `2 = `1[0];
														var `3 = `1[1];
														{
															var _hx_tmp;
															{
																var cl = (_hx_tmp = `2.get());
																if ({
																	var ` = cl.kind;
																	if (enumIndex ` == 1) {
																		var `1 = `[0];
																		true;
																	} else false;
																} && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")) {
																	ct;
																} else {
																	haxe.macro.TypeTools.toComplexType(subType);
																};
															};
														};
													} else {
														haxe.macro.TypeTools.toComplexType(subType);
													};
												} else {
													haxe.macro.TypeTools.toComplexType(subType);
												};
											};
										};
									} else {
										haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(classType, params));
									};
								};
							};
						};
					};
				};
				case 3: {
					var `12 = subType[0];
					var `13 = subType[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `12.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(subType);
							};
						} else {
							var baseType = (_hx_tmp = `12.get());
							var params = `13;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
				case 4: {
					var `10 = subType[0];
					var `11 = subType[1];
					{
						var args = `10;
						var ret = `11;
						{
							haxe.macro.ComplexType.TFunction({
								var ` = [];
								{
									var `1 = 0;
									while (`1 < args.length) {
										var a = args[`1];
										++ `1;
										`.push(if (a.opt) {
											json2object.utils.TypeTools.nullable(json2object.utils.TypeTools.toComplexType(a.t));
										} else {
											json2object.utils.TypeTools.toComplexType(a.t);
										});
									};
								};
								`;
							}, json2object.utils.TypeTools.toComplexType(ret));
						};
					};
				};
				case 5: {
					var `6 = subType[0];
					{
						var _hx_tmp;
						{
							var `7 = (_hx_tmp = `6.get()).fields;
							var `8 = _hx_tmp.status;
							{
								var fields = `7;
								{
									haxe.macro.ComplexType.TAnonymous({
										var ` = [];
										{
											var `1 = 0;
											while (`1 < fields.length) {
												var cf = fields[`1];
												++ `1;
												`.push(json2object.utils.TypeTools.toField(cf));
											};
										};
										`;
									});
								};
							};
						};
					};
				};
				case 6: {
					var `2 = subType[0];
					{
						var t = `2;
						{
							if (t == null) {
								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : []});
							} else {
								var ct = json2object.utils.TypeTools.toComplexType(t);
								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(ct)]});
							};
						};
					};
				};
				case 7: {
					var `3 = subType[0];
					{
						var f = `3;
						{
							json2object.utils.TypeTools.toComplexType(f());
						};
					};
				};
				case 8: {
					var ` = subType[0];
					var `1 = subType[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(subType);
							};
						} else {
							var baseType = (_hx_tmp = `.get());
							var params = `1;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
			};
		})]};
		var e = cast {expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5607, 5612)}, {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EVars([{name : "parser", type : null, expr : {expr : haxe.macro.ExprDef.ENew(cls, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5642, 5648)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5650, 5656)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("THROW")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5658, 5663)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5633, 5664)}, isFinal : cast false, meta : []}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5620, 5665)}, {expr : haxe.macro.ExprDef.EVars([{name : "res", type : null, expr : {expr : haxe.macro.ExprDef.ENew(list, []), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5679, 5690)}, isFinal : cast false, meta : []}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5669, 5691)}, {expr : haxe.macro.ExprDef.EFor({expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpIn, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("j")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5700, 5701)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("a")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5705, 5706)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5700, 5706)}, {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.ETry({expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("res")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5725, 5728)}, "add"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5725, 5732)}, [{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("parser")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5733, 5739)}, "loadJson"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5733, 5748)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("j")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5749, 5750)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5752, 5760)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5733, 5761)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5725, 5762)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5718, 5769)}, [{name : "e", type : haxe.macro.ComplexType.TPath({pack : ["json2object"], name : "Error", params : [], sub : "InternalError"}), expr : {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EIf({expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpNotEq, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("e")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5827, 5828)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("ParsingThrow")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5832, 5844)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5827, 5844)}, {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EThrow({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("e")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5860, 5861)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5854, 5859)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5846, 5869)}, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5823, 5869)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5816, 5875)}}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5714, 5875)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5708, 5880)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5695, 5880)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("res")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5884, 5887)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5615, 5892)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5607, 5892)};
		json2object.reader.DataBuilder.changeFunction("loadJsonArray", parser, e);
		json2object.reader.DataBuilder.changeFunction("loadJsonNull", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5988, 5993)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5996, 6000)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5988, 6000)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 5987, 6002)});
	}

	@:has_untyped
	public static function makeCustomParser(parser:haxe.macro.TypeDefinition, type:haxe.macro.Type, t:haxe.macro.ClassType) {
		var cexpr;
		try {
			cexpr = t.meta.extract(json2object.reader.DataBuilder.jcustom)[0].params[0];
			json2object.reader.DataBuilder.validateCustomParser(type, cexpr);
		} catch (`:Dynamic) {
			var ` = haxe.Exception.caught(`);
			var ` = `.unwrap();
			if (Std.isOfType(`, json2object.CustomFunctionError)) {
				var e = cast `;
				{
					haxe.macro.Context.fatalError(json2object.reader.DataBuilder.invalidParserErrorMessage(type, cexpr, e.message), haxe.macro.Context.currentPos());
				};
			} else throw `;
		};
		var e = cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EReturn({expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 6376, 6381)}, {expr : haxe.macro.ExprDef.ECall(cexpr, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("json")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 6393, 6397)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 6399, 6407)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 6385, 6408)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 6376, 6408)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 6369, 6408)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 6364, 6413)};
		var args = [{name : "json", type : cast haxe.macro.ComplexType.TPath({pack : ["hxjsonast"], name : "Json", params : []})}, {name : "variable", type : cast haxe.macro.ComplexType.TPath({pack : [], name : "String", params : []}), opt : cast true, value : cast {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CString("", haxe.macro.StringLiteralKind.DoubleQuotes)), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 6591, 6593)}}];
		var loadJ = {doc : null, kind : haxe.macro.FieldType.FFun({args : args, expr : e, params : null, ret : {
			{};
			@:ast(switch (type) {
	case null:
		null;	
	case TEnum(_.get().isPrivate => true, _):
		direct();	
	case TInst(_.get().isPrivate => true, _):
		direct();	
	case TType(_.get().isPrivate => true, _):
		direct();	
	case TAbstract(_.get().isPrivate => true, _):
		direct();	
	case TMono(_):
		direct();	
	case TEnum(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TInst(_.get() => classType, params):
		switch (classType.kind) {
			case KTypeParameter(_):
				var ct = asComplexType(classType.name);
				switch toType(ct) {
					case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
						ct;					
					default:
						direct();					
				};			
			default:
				TPath(toTypePath(classType, params));			
		};	
	case TType(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TFun(args, ret):
		TFunction([for (a  in  args) a.opt ? nullable(toComplexType(a.t)) : toComplexType(a.t)], toComplexType(ret));	
	case TAnonymous(_.get() => { fields : fields }):
		TAnonymous([for (cf  in  fields) toField(cf)]);	
	case TDynamic(t):
		if (t == null) {
			(TPath({ pack : [], name : "Dynamic", params : [] }) : haxe.macro.Expr.ComplexType);
		} else {
			var ct = toComplexType(t);
			(TPath({ pack : [], name : "Dynamic", params : [TPType(ct)] }) : haxe.macro.Expr.ComplexType);
		};	
	case TLazy(f):
		toComplexType(f());	
	case TAbstract(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	default:
		throw "Invalid type";	
}) if (type == null) {
				null;
			} else switch (@:exhaustive enumIndex type) {
				case 0: {
					var `9 = type[0];
					{
						haxe.macro.TypeTools.toComplexType(type);
					};
				};
				case 1: {
					var `4 = type[0];
					var `5 = type[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `4.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(type);
							};
						} else {
							var baseType = (_hx_tmp = `4.get());
							var params = `5;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
				case 2: {
					var `14 = type[0];
					var `15 = type[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `14.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(type);
							};
						} else {
							var classType = (_hx_tmp = `14.get());
							var params = `15;
							{
								@:ast(switch (classType.kind) {
	case KTypeParameter(_):
		var ct = asComplexType(classType.name);
		switch toType(ct) {
			case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
				ct;			
			default:
				direct();			
		};	
	default:
		TPath(toTypePath(classType, params));	
}) {
									var ` = classType.kind;
									if (enumIndex ` == 1) {
										var `1 = `[0];
										{
											var ct = {
												var s = classType.name;
												var params = null;
												haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.asTypePath(s, params));
											};
											@:ast(switch toType(ct) {
	case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
		ct;	
	default:
		direct();	
}) {
												var ` = json2object.utils.TypeTools.toType(ct, null);
												if (enumIndex ` == 0) {
													var `1 = `[0];
													if (enumIndex `1 == 2) {
														var `2 = `1[0];
														var `3 = `1[1];
														{
															var _hx_tmp;
															{
																var cl = (_hx_tmp = `2.get());
																if ({
																	var ` = cl.kind;
																	if (enumIndex ` == 1) {
																		var `1 = `[0];
																		true;
																	} else false;
																} && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")) {
																	ct;
																} else {
																	haxe.macro.TypeTools.toComplexType(type);
																};
															};
														};
													} else {
														haxe.macro.TypeTools.toComplexType(type);
													};
												} else {
													haxe.macro.TypeTools.toComplexType(type);
												};
											};
										};
									} else {
										haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(classType, params));
									};
								};
							};
						};
					};
				};
				case 3: {
					var `12 = type[0];
					var `13 = type[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `12.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(type);
							};
						} else {
							var baseType = (_hx_tmp = `12.get());
							var params = `13;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
				case 4: {
					var `10 = type[0];
					var `11 = type[1];
					{
						var args = `10;
						var ret = `11;
						{
							haxe.macro.ComplexType.TFunction({
								var ` = [];
								{
									var `1 = 0;
									while (`1 < args.length) {
										var a = args[`1];
										++ `1;
										`.push(if (a.opt) {
											json2object.utils.TypeTools.nullable(json2object.utils.TypeTools.toComplexType(a.t));
										} else {
											json2object.utils.TypeTools.toComplexType(a.t);
										});
									};
								};
								`;
							}, json2object.utils.TypeTools.toComplexType(ret));
						};
					};
				};
				case 5: {
					var `6 = type[0];
					{
						var _hx_tmp;
						{
							var `7 = (_hx_tmp = `6.get()).fields;
							var `8 = _hx_tmp.status;
							{
								var fields = `7;
								{
									haxe.macro.ComplexType.TAnonymous({
										var ` = [];
										{
											var `1 = 0;
											while (`1 < fields.length) {
												var cf = fields[`1];
												++ `1;
												`.push(json2object.utils.TypeTools.toField(cf));
											};
										};
										`;
									});
								};
							};
						};
					};
				};
				case 6: {
					var `2 = type[0];
					{
						var t = `2;
						{
							if (t == null) {
								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : []});
							} else {
								var ct = json2object.utils.TypeTools.toComplexType(t);
								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(ct)]});
							};
						};
					};
				};
				case 7: {
					var `3 = type[0];
					{
						var f = `3;
						{
							json2object.utils.TypeTools.toComplexType(f());
						};
					};
				};
				case 8: {
					var ` = type[0];
					var `1 = type[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(type);
							};
						} else {
							var baseType = (_hx_tmp = `.get());
							var params = `1;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
			};
		}}), access : [haxe.macro.Access.AOverride, haxe.macro.Access.APublic], name : "loadJson", pos : haxe.macro.Context.currentPos(), meta : null};
		parser.fields.push(loadJ);
	}

	static function invalidParserErrorMessage(t:haxe.macro.Type, e:haxe.macro.Expr, m:String) {
		var methodName = json2object.reader.DataBuilder.jcustom;
		if (e != null) {
			methodName = haxe.macro.ExprTools.toString(e);
			var index = methodName.lastIndexOf(".", null) + 1;
			methodName = methodName.substr(index, null);
		};
		return "Failed to create custom parser using " + haxe.macro.ExprTools.toString(e) + ", the function prototype should be (hxjsonast.Json, String)->" + haxe.macro.TypeTools.toString(t) + ": " + m;
	}

	static function validateCustomParser(target:haxe.macro.Type, e:haxe.macro.Expr) {
		@:ast(switch Context.typeof(e) {
	case TFun(args, ret):
		if (ret.toString() != target.toString()) {
			throw new CustomFunctionError("Return type should be ${target.toString()}");
		};
		if (args.length != 2) {
			throw new CustomFunctionError("Should have two arguments");
		};
		if (args[0].t.toString() != "hxjsonast.Json") {
			throw new CustomFunctionError("First argument type should be hxjsonast.Json");
		};
		if (args[1].t.toString() != "String") {
			throw new CustomFunctionError("Second argument type should be String");
		};	
	default:
		throw new CustomFunctionError("Custom parser should point to a static function");	
}) {
			var ` = haxe.macro.Context.typeof(e);
			if (enumIndex ` == 4) {
				var `1 = `[0];
				var `2 = `[1];
				{
					var args = `1;
					var ret = `2;
					{
						if (haxe.macro.TypeTools.toString(ret) != haxe.macro.TypeTools.toString(target)) {
							throw throw haxe.Exception.thrown(new json2object.CustomFunctionError("Return type should be " + haxe.macro.TypeTools.toString(target)));
						};
						if (args.length != 2) {
							throw throw haxe.Exception.thrown(new json2object.CustomFunctionError("Should have two arguments"));
						};
						if ({
							var type = args[0].t;
							haxe.macro.TypeTools.toString(type);
						} != "hxjsonast.Json") {
							throw throw haxe.Exception.thrown(new json2object.CustomFunctionError("First argument type should be hxjsonast.Json"));
						};
						if ({
							var type = args[1].t;
							haxe.macro.TypeTools.toString(type);
						} != "String") {
							throw throw haxe.Exception.thrown(new json2object.CustomFunctionError("Second argument type should be String"));
						};
					};
				};
			} else {
				throw throw haxe.Exception.thrown(new json2object.CustomFunctionError("Custom parser should point to a static function"));
			};
		};
	}

	@:has_untyped
	public static function makeObjectOrAnonParser(parser:haxe.macro.TypeDefinition, type:haxe.macro.Type, superType:haxe.macro.Type, baseParser:haxe.macro.BaseType) {
		var cls = {name : baseParser.name, pack : baseParser.pack, params : [haxe.macro.TypeParam.TPType({
			{};
			@:ast(switch (type) {
	case null:
		null;	
	case TEnum(_.get().isPrivate => true, _):
		direct();	
	case TInst(_.get().isPrivate => true, _):
		direct();	
	case TType(_.get().isPrivate => true, _):
		direct();	
	case TAbstract(_.get().isPrivate => true, _):
		direct();	
	case TMono(_):
		direct();	
	case TEnum(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TInst(_.get() => classType, params):
		switch (classType.kind) {
			case KTypeParameter(_):
				var ct = asComplexType(classType.name);
				switch toType(ct) {
					case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
						ct;					
					default:
						direct();					
				};			
			default:
				TPath(toTypePath(classType, params));			
		};	
	case TType(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TFun(args, ret):
		TFunction([for (a  in  args) a.opt ? nullable(toComplexType(a.t)) : toComplexType(a.t)], toComplexType(ret));	
	case TAnonymous(_.get() => { fields : fields }):
		TAnonymous([for (cf  in  fields) toField(cf)]);	
	case TDynamic(t):
		if (t == null) {
			(TPath({ pack : [], name : "Dynamic", params : [] }) : haxe.macro.Expr.ComplexType);
		} else {
			var ct = toComplexType(t);
			(TPath({ pack : [], name : "Dynamic", params : [TPType(ct)] }) : haxe.macro.Expr.ComplexType);
		};	
	case TLazy(f):
		toComplexType(f());	
	case TAbstract(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	default:
		throw "Invalid type";	
}) if (type == null) {
				null;
			} else switch (@:exhaustive enumIndex type) {
				case 0: {
					var `9 = type[0];
					{
						haxe.macro.TypeTools.toComplexType(type);
					};
				};
				case 1: {
					var `4 = type[0];
					var `5 = type[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `4.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(type);
							};
						} else {
							var baseType = (_hx_tmp = `4.get());
							var params = `5;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
				case 2: {
					var `14 = type[0];
					var `15 = type[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `14.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(type);
							};
						} else {
							var classType = (_hx_tmp = `14.get());
							var params = `15;
							{
								@:ast(switch (classType.kind) {
	case KTypeParameter(_):
		var ct = asComplexType(classType.name);
		switch toType(ct) {
			case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
				ct;			
			default:
				direct();			
		};	
	default:
		TPath(toTypePath(classType, params));	
}) {
									var ` = classType.kind;
									if (enumIndex ` == 1) {
										var `1 = `[0];
										{
											var ct = {
												var s = classType.name;
												var params = null;
												haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.asTypePath(s, params));
											};
											@:ast(switch toType(ct) {
	case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
		ct;	
	default:
		direct();	
}) {
												var ` = json2object.utils.TypeTools.toType(ct, null);
												if (enumIndex ` == 0) {
													var `1 = `[0];
													if (enumIndex `1 == 2) {
														var `2 = `1[0];
														var `3 = `1[1];
														{
															var _hx_tmp;
															{
																var cl = (_hx_tmp = `2.get());
																if ({
																	var ` = cl.kind;
																	if (enumIndex ` == 1) {
																		var `1 = `[0];
																		true;
																	} else false;
																} && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")) {
																	ct;
																} else {
																	haxe.macro.TypeTools.toComplexType(type);
																};
															};
														};
													} else {
														haxe.macro.TypeTools.toComplexType(type);
													};
												} else {
													haxe.macro.TypeTools.toComplexType(type);
												};
											};
										};
									} else {
										haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(classType, params));
									};
								};
							};
						};
					};
				};
				case 3: {
					var `12 = type[0];
					var `13 = type[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `12.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(type);
							};
						} else {
							var baseType = (_hx_tmp = `12.get());
							var params = `13;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
				case 4: {
					var `10 = type[0];
					var `11 = type[1];
					{
						var args = `10;
						var ret = `11;
						{
							haxe.macro.ComplexType.TFunction({
								var ` = [];
								{
									var `1 = 0;
									while (`1 < args.length) {
										var a = args[`1];
										++ `1;
										`.push(if (a.opt) {
											json2object.utils.TypeTools.nullable(json2object.utils.TypeTools.toComplexType(a.t));
										} else {
											json2object.utils.TypeTools.toComplexType(a.t);
										});
									};
								};
								`;
							}, json2object.utils.TypeTools.toComplexType(ret));
						};
					};
				};
				case 5: {
					var `6 = type[0];
					{
						var _hx_tmp;
						{
							var `7 = (_hx_tmp = `6.get()).fields;
							var `8 = _hx_tmp.status;
							{
								var fields = `7;
								{
									haxe.macro.ComplexType.TAnonymous({
										var ` = [];
										{
											var `1 = 0;
											while (`1 < fields.length) {
												var cf = fields[`1];
												++ `1;
												`.push(json2object.utils.TypeTools.toField(cf));
											};
										};
										`;
									});
								};
							};
						};
					};
				};
				case 6: {
					var `2 = type[0];
					{
						var t = `2;
						{
							if (t == null) {
								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : []});
							} else {
								var ct = json2object.utils.TypeTools.toComplexType(t);
								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(ct)]});
							};
						};
					};
				};
				case 7: {
					var `3 = type[0];
					{
						var f = `3;
						{
							json2object.utils.TypeTools.toComplexType(f());
						};
					};
				};
				case 8: {
					var ` = type[0];
					var `1 = type[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(type);
							};
						} else {
							var baseType = (_hx_tmp = `.get());
							var params = `1;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
			};
		})]};
		var initializator;
		var isAnon = false;
		var isPrivate = null;
		var fields;
		var tParams;
		var params;
		@:ast(switch (type) {
	case TAnonymous(_.get() => t):
		isAnon = true;
		fields = t.fields;
		tParams = [];
		params = [];	
	case TInst(_.get() => t, p):
		if (t.isPrivate) {
			t = TypeUtils.copyType(t);
			isPrivate = t;
		};
		fields = [];
		var s = t;
		while (s != null) {
			fields = fields.concat(s.fields.get());
			s = s.superClass != null ? s.superClass.t.get() : null;
		};
		tParams = t.params;
		params = p;
		var pack = t.module.split(".");
		pack.push(t.name);
		var e = { expr : EConst(CIdent(pack.shift())), pos : Context.currentPos() };
		while (pack.length > 0) {
			e = { expr : EField(e, pack.shift()), pos : Context.currentPos() };
		};
		initializator = ({ expr : ECall({ expr : EField({ expr : EConst(CIdent("Type")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 9181, 9185) }, "createEmptyInstance"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 9181, 9205) }, [e]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 9181, 9212) } : haxe.macro.Expr);	
	case _:
		return;	
}) switch (enumIndex type) {
			case 2: {
				var `1 = type[0];
				var `2 = type[1];
				{
					var _hx_tmp;
					{
						var t = (_hx_tmp = `1.get());
						var p = `2;
						{
							if (t.isPrivate) {
								t = json2object.TypeUtils.copyType(t);
								isPrivate = t;
							};
							fields = [];
							var s = t;
							while (s != null) {
								fields = fields.concat(s.fields.get());
								s = if (s.superClass != null) {
									s.superClass.t.get();
								} else {
									null;
								};
							};
							tParams = t.params;
							params = p;
							var pack = t.module.split(".");
							pack.push(t.name);
							var e = {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent(pack.shift())), pos : haxe.macro.Context.currentPos()};
							while (pack.length > 0) {
								e = {expr : haxe.macro.ExprDef.EField(e, pack.shift()), pos : haxe.macro.Context.currentPos()};
							};
							initializator = cast {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("Type")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 9181, 9185)}, "createEmptyInstance"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 9181, 9205)}, [e]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 9181, 9212)};
						};
					};
				};
			};
			case 5: {
				var ` = type[0];
				{
					var _hx_tmp;
					{
						var t = (_hx_tmp = `.get());
						{
							isAnon = true;
							fields = t.fields;
							tParams = [];
							params = [];
						};
					};
				};
			};
			default: {
				return;
			}
		};
		var baseValues = [];
		var autoExprs = [];
		var cases = [];
		var assignedKeys = [];
		var assignedValues = [];
		{
			var `3 = 0;
			while (`3 < fields.length) {
				var field = fields[`3];
				++ `3;
				if (field.meta.has(":jignored")) {
					continue;
				};
				@:ast(switch (field.kind) {
	case FVar(r, w):
		if (r == AccCall && w == AccCall && !field.meta.has(":isVar")) {
			continue;
		};
		var needReflect = w == AccNever || w == AccCall || w == AccCtor;
		var canRead = r == AccNormal || r == AccNo;
		var f_a = { expr : EField(({ expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 9893, 9898) } : haxe.macro.Expr), field.name), pos : Context.currentPos() };
		var f_type = field.type.applyTypeParameters(tParams, params);
		var f_cls = { name : baseParser.name, pack : baseParser.pack, params : [TPType(f_type.toComplexType())] };
		var nullCheck = Context.defined("cpp") && isNullable(f_type);
		assignedKeys.push((haxe.macro.Context.makeExpr(@$v field.name, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10223, 10235)) : haxe.macro.Expr));
		assignedValues.push((haxe.macro.Context.makeExpr(@$v field.meta.has(":optional"), untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10271, 10300)) : haxe.macro.Expr));
		var reader:Expr = ({ expr : EField({ expr : ENew(f_cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10344, 10350) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10352, 10358) }, { expr : EConst(CIdent("OBJECTTHROW")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10360, 10371) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10333, 10372) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10333, 10381) } : haxe.macro.Expr);
		var hasCustomParser = field.meta.has(jcustom);
		if (hasCustomParser) {
			try {
				reader = field.meta.extract(jcustom)[0].params[0];
				validateCustomParser(field.type, reader);
			} catch(e:CustomFunctionError) {
				Context.fatalError(invalidParserErrorMessage(field.type, reader, e.message), Context.currentPos());
			};
		};
		var assignation = if (needReflect) {
			({ expr : EBlock([{ expr : ECall({ expr : EConst(CIdent("loadObjectFieldReflect")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10805, 10827) }, [reader, { expr : EConst(CIdent("field")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10837, 10842) }, haxe.macro.Context.makeExpr(@$v field.name, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10846, 10858)), { expr : EConst(CIdent("assigned")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10860, 10868) }, { expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10870, 10873) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10805, 10874) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10796, 10883) } : haxe.macro.Expr);
		} else if (nullCheck) {
			({ expr : EBlock([{ expr : EVars([{ name : "v", type : null, expr : { expr : ECall({ expr : EConst(CIdent("loadObjectField")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10943, 10958) }, [reader, { expr : EConst(CIdent("field")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10968, 10973) }, haxe.macro.Context.makeExpr(@$v field.name, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10977, 10989)), { expr : EConst(CIdent("assigned")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10991, 10999) }, f_a, { expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11007, 11010) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10943, 11011) }, isFinal : false, meta : [] }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10935, 11012) }, { expr : EIf({ expr : EBinop(OpNotEq, { expr : EConst(CIdent("v")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11024, 11025) }, { expr : EConst(CIdent("null")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11029, 11033) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11024, 11033) }, { expr : EBlock([{ expr : EBinop(OpAssign, f_a, { expr : ECast({ expr : EConst(CIdent("v")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11057, 11058) }, null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11052, 11058) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11045, 11058) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11035, 11068) }, { expr : EBlock([{ expr : EBinop(OpAssign, f_a, { expr : EConst(CIdent("null")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11091, 11095) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11084, 11095) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11074, 11105) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11020, 11105) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10926, 11113) } : haxe.macro.Expr);
		} else if (canRead) {
			({ expr : EBlock([{ expr : EBinop(OpAssign, f_a, { expr : ECast({ expr : ECall({ expr : EConst(CIdent("loadObjectField")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11175, 11190) }, [reader, { expr : EConst(CIdent("field")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11200, 11205) }, haxe.macro.Context.makeExpr(@$v field.name, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11209, 11221)), { expr : EConst(CIdent("assigned")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11223, 11231) }, f_a, { expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11239, 11242) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11175, 11243) }, null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11170, 11243) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11163, 11243) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11154, 11252) } : haxe.macro.Expr);
		} else {
			({ expr : EBlock([{ expr : EVars([{ name : "v", type : null, expr : { expr : ECall({ expr : EConst(CIdent("loadObjectField")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11297, 11312) }, [reader, { expr : EConst(CIdent("field")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11322, 11327) }, haxe.macro.Context.makeExpr(@$v field.name, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11331, 11343)), { expr : EConst(CIdent("assigned")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11345, 11353) }, f_a, { expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11361, 11364) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11297, 11365) }, isFinal : false, meta : [] }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11289, 11366) }, { expr : EIf({ expr : EBinop(OpNotEq, { expr : EConst(CIdent("v")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11378, 11379) }, { expr : EConst(CIdent("null")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11383, 11387) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11378, 11387) }, { expr : EBlock([{ expr : EBinop(OpAssign, f_a, { expr : ECast({ expr : EConst(CIdent("v")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11411, 11412) }, null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11406, 11412) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11399, 11412) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11389, 11422) }, null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11374, 11422) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11280, 11430) } : haxe.macro.Expr);
		};
		var caseValue = null;
		for (m  in  field.meta.get()) {
			if (m.name == ":alias" && m.params.length == 1) {
				switch (m.params[0].expr) {
					case EConst(CString(_)):
						caseValue = m.params[0];					
					default:
				};
			};
		};
		if (caseValue == null) {
			caseValue = { expr : EConst(CString(field.name)), pos : Context.currentPos() };
		};
		cases.push({ expr : assignation, guard : null, values : [caseValue] });
		if (field.meta.has(":default")) {
			var metas = field.meta.extract(":default");
			if (metas.length > 0) {
				var meta = metas[0];
				if (meta.params != null && meta.params.length == 1) {
					if (meta.params[0].toString() == "auto") {
						baseValues.push({ field : field.name, expr : ({ expr : ECall({ expr : EField({ expr : ENew(f_cls, [{ expr : EArrayDecl([]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12223, 12225) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12227, 12233) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12235, 12239) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12212, 12240) }, "getAuto"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12212, 12248) }, []), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12212, 12250) } : haxe.macro.Expr), quotes : Unquoted });
					} else {
						baseValues.push({ field : field.name, expr : { expr : ECheckType(meta.params[0], f_type.toComplexType()), pos : meta.params[0].pos }, quotes : Unquoted });
					};
				};
			};
		} else {
			var e = switch (field.type) {
				case TAbstract(_.get() => t, _) if (t.name == "Any"):
					({ expr : EConst(CIdent("null")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12656, 12660) } : haxe.macro.Expr);				
				case TDynamic(_):
					({ expr : EConst(CIdent("null")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12693, 12697) } : haxe.macro.Expr);				
				default:
					({ expr : ECall({ expr : EField({ expr : ENew(f_cls, [{ expr : EArrayDecl([]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12732, 12734) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12736, 12742) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12744, 12748) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12721, 12749) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12721, 12758) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : EConst(CIdent("JNull")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12766, 12771) }, quotes : Unquoted }, { field : "pos", expr : { expr : EObjectDecl([{ field : "file", expr : { expr : EConst(CString("", DoubleQuotes)), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12783, 12785) }, quotes : Unquoted }, { field : "min", expr : { expr : EConst(CInt("0")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12790, 12791) }, quotes : Unquoted }, { field : "max", expr : { expr : EConst(CInt("1")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12797, 12798) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12777, 12799) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12759, 12800) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12721, 12801) } : haxe.macro.Expr);				
			};
			baseValues.push({ field : field.name, expr : e, quotes : Unquoted });
		};
		if (needReflect) {
			autoExprs.push(({ expr : ECall({ expr : EField({ expr : EConst(CIdent("Reflect")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12964, 12971) }, "setField"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12964, 12980) }, [{ expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12981, 12986) }, haxe.macro.Context.makeExpr(@$v field.name, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12990, 13002)), baseValues[baseValues.length - 1].expr]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12964, 13047) } : haxe.macro.Expr));
		} else {
			autoExprs.push(({ expr : EBinop(OpAssign, f_a, baseValues[baseValues.length - 1].expr), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13096, 13144) } : haxe.macro.Expr));
		};	
	default:
}) {
					var `3 = field.kind;
					if (enumIndex `3 == 0) {
						var `4 = `3[0];
						var `5 = `3[1];
						{
							var r = `4;
							var w = `5;
							{
								if (r == haxe.macro.VarAccess.AccCall && w == haxe.macro.VarAccess.AccCall && ! field.meta.has(":isVar")) {
									continue;
								};
								var needReflect = w == haxe.macro.VarAccess.AccNever || w == haxe.macro.VarAccess.AccCall || w == haxe.macro.VarAccess.AccCtor;
								var canRead = r == haxe.macro.VarAccess.AccNormal || r == haxe.macro.VarAccess.AccNo;
								var f_a = {expr : haxe.macro.ExprDef.EField(cast {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 9893, 9898)}, field.name), pos : haxe.macro.Context.currentPos()};
								var f_type = {
									var type = field.type;
									haxe.macro.TypeTools.applyTypeParameters(type, tParams, params);
								};
								var f_cls = {name : baseParser.name, pack : baseParser.pack, params : [haxe.macro.TypeParam.TPType({
									{};
									@:ast(switch (type) {
	case null:
		null;	
	case TEnum(_.get().isPrivate => true, _):
		direct();	
	case TInst(_.get().isPrivate => true, _):
		direct();	
	case TType(_.get().isPrivate => true, _):
		direct();	
	case TAbstract(_.get().isPrivate => true, _):
		direct();	
	case TMono(_):
		direct();	
	case TEnum(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TInst(_.get() => classType, params):
		switch (classType.kind) {
			case KTypeParameter(_):
				var ct = asComplexType(classType.name);
				switch toType(ct) {
					case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
						ct;					
					default:
						direct();					
				};			
			default:
				TPath(toTypePath(classType, params));			
		};	
	case TType(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TFun(args, ret):
		TFunction([for (a  in  args) a.opt ? nullable(toComplexType(a.t)) : toComplexType(a.t)], toComplexType(ret));	
	case TAnonymous(_.get() => { fields : fields }):
		TAnonymous([for (cf  in  fields) toField(cf)]);	
	case TDynamic(t):
		if (t == null) {
			(TPath({ pack : [], name : "Dynamic", params : [] }) : haxe.macro.Expr.ComplexType);
		} else {
			var ct = toComplexType(t);
			(TPath({ pack : [], name : "Dynamic", params : [TPType(ct)] }) : haxe.macro.Expr.ComplexType);
		};	
	case TLazy(f):
		toComplexType(f());	
	case TAbstract(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	default:
		throw "Invalid type";	
}) if (f_type == null) {
										null;
									} else switch (@:exhaustive enumIndex f_type) {
										case 0: {
											var `9 = f_type[0];
											{
												haxe.macro.TypeTools.toComplexType(f_type);
											};
										};
										case 1: {
											var `4 = f_type[0];
											var `5 = f_type[1];
											{
												var _hx_tmp;
												var _hx_tmp;
												if ((_hx_tmp = `4.get().isPrivate) == true) {
													{
														haxe.macro.TypeTools.toComplexType(f_type);
													};
												} else {
													var baseType = (_hx_tmp = `4.get());
													var params = `5;
													{
														haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
													};
												};
											};
										};
										case 2: {
											var `14 = f_type[0];
											var `15 = f_type[1];
											{
												var _hx_tmp;
												var _hx_tmp;
												if ((_hx_tmp = `14.get().isPrivate) == true) {
													{
														haxe.macro.TypeTools.toComplexType(f_type);
													};
												} else {
													var classType = (_hx_tmp = `14.get());
													var params = `15;
													{
														@:ast(switch (classType.kind) {
	case KTypeParameter(_):
		var ct = asComplexType(classType.name);
		switch toType(ct) {
			case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
				ct;			
			default:
				direct();			
		};	
	default:
		TPath(toTypePath(classType, params));	
}) {
															var ` = classType.kind;
															if (enumIndex ` == 1) {
																var `1 = `[0];
																{
																	var ct = {
																		var s = classType.name;
																		var params = null;
																		haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.asTypePath(s, params));
																	};
																	@:ast(switch toType(ct) {
	case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
		ct;	
	default:
		direct();	
}) {
																		var ` = json2object.utils.TypeTools.toType(ct, null);
																		if (enumIndex ` == 0) {
																			var `1 = `[0];
																			if (enumIndex `1 == 2) {
																				var `2 = `1[0];
																				var `3 = `1[1];
																				{
																					var _hx_tmp;
																					{
																						var cl = (_hx_tmp = `2.get());
																						if ({
																							var ` = cl.kind;
																							if (enumIndex ` == 1) {
																								var `1 = `[0];
																								true;
																							} else false;
																						} && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")) {
																							ct;
																						} else {
																							haxe.macro.TypeTools.toComplexType(f_type);
																						};
																					};
																				};
																			} else {
																				haxe.macro.TypeTools.toComplexType(f_type);
																			};
																		} else {
																			haxe.macro.TypeTools.toComplexType(f_type);
																		};
																	};
																};
															} else {
																haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(classType, params));
															};
														};
													};
												};
											};
										};
										case 3: {
											var `12 = f_type[0];
											var `13 = f_type[1];
											{
												var _hx_tmp;
												var _hx_tmp;
												if ((_hx_tmp = `12.get().isPrivate) == true) {
													{
														haxe.macro.TypeTools.toComplexType(f_type);
													};
												} else {
													var baseType = (_hx_tmp = `12.get());
													var params = `13;
													{
														haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
													};
												};
											};
										};
										case 4: {
											var `10 = f_type[0];
											var `11 = f_type[1];
											{
												var args = `10;
												var ret = `11;
												{
													haxe.macro.ComplexType.TFunction({
														var ` = [];
														{
															var `1 = 0;
															while (`1 < args.length) {
																var a = args[`1];
																++ `1;
																`.push(if (a.opt) {
																	json2object.utils.TypeTools.nullable(json2object.utils.TypeTools.toComplexType(a.t));
																} else {
																	json2object.utils.TypeTools.toComplexType(a.t);
																});
															};
														};
														`;
													}, json2object.utils.TypeTools.toComplexType(ret));
												};
											};
										};
										case 5: {
											var `6 = f_type[0];
											{
												var _hx_tmp;
												{
													var `7 = (_hx_tmp = `6.get()).fields;
													var `8 = _hx_tmp.status;
													{
														var fields = `7;
														{
															haxe.macro.ComplexType.TAnonymous({
																var ` = [];
																{
																	var `1 = 0;
																	while (`1 < fields.length) {
																		var cf = fields[`1];
																		++ `1;
																		`.push(json2object.utils.TypeTools.toField(cf));
																	};
																};
																`;
															});
														};
													};
												};
											};
										};
										case 6: {
											var `2 = f_type[0];
											{
												var t = `2;
												{
													if (t == null) {
														cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : []});
													} else {
														var ct = json2object.utils.TypeTools.toComplexType(t);
														cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(ct)]});
													};
												};
											};
										};
										case 7: {
											var `3 = f_type[0];
											{
												var f = `3;
												{
													json2object.utils.TypeTools.toComplexType(f());
												};
											};
										};
										case 8: {
											var ` = f_type[0];
											var `1 = f_type[1];
											{
												var _hx_tmp;
												var _hx_tmp;
												if ((_hx_tmp = `.get().isPrivate) == true) {
													{
														haxe.macro.TypeTools.toComplexType(f_type);
													};
												} else {
													var baseType = (_hx_tmp = `.get());
													var params = `1;
													{
														haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
													};
												};
											};
										};
									};
								})]};
								var nullCheck = haxe.macro.Context.defined("cpp") && json2object.reader.DataBuilder.isNullable(f_type);
								assignedKeys.push(cast haxe.macro.Context.makeExpr(field.name, $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10223, 10235)));
								assignedValues.push(cast haxe.macro.Context.makeExpr(field.meta.has(":optional"), $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10271, 10300)));
								var reader = cast {expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.ENew(f_cls, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10344, 10350)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10352, 10358)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("OBJECTTHROW")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10360, 10371)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10333, 10372)}, "loadJson"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10333, 10381)};
								var hasCustomParser = field.meta.has(json2object.reader.DataBuilder.jcustom);
								if (hasCustomParser) {
									try {
										reader = field.meta.extract(json2object.reader.DataBuilder.jcustom)[0].params[0];
										json2object.reader.DataBuilder.validateCustomParser(field.type, reader);
									} catch (`:Dynamic) {
										var ` = haxe.Exception.caught(`);
										var ` = `.unwrap();
										if (Std.isOfType(`, json2object.CustomFunctionError)) {
											var e = cast `;
											{
												haxe.macro.Context.fatalError(json2object.reader.DataBuilder.invalidParserErrorMessage(field.type, reader, e.message), haxe.macro.Context.currentPos());
											};
										} else throw `;
									};
								};
								var assignation = if (needReflect) {
									cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("loadObjectFieldReflect")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10805, 10827)}, [reader, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("field")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10837, 10842)}, haxe.macro.Context.makeExpr(field.name, $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10846, 10858)), {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("assigned")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10860, 10868)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10870, 10873)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10805, 10874)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10796, 10883)};
								} else {
									if (nullCheck) {
										cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EVars([{name : "v", type : null, expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("loadObjectField")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10943, 10958)}, [reader, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("field")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10968, 10973)}, haxe.macro.Context.makeExpr(field.name, $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10977, 10989)), {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("assigned")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10991, 10999)}, f_a, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11007, 11010)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10943, 11011)}, isFinal : cast false, meta : []}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10935, 11012)}, {expr : haxe.macro.ExprDef.EIf({expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpNotEq, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("v")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11024, 11025)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11029, 11033)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11024, 11033)}, {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, f_a, {expr : haxe.macro.ExprDef.ECast({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("v")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11057, 11058)}, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11052, 11058)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11045, 11058)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11035, 11068)}, {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, f_a, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11091, 11095)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11084, 11095)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11074, 11105)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11020, 11105)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 10926, 11113)};
									} else {
										if (canRead) {
											cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, f_a, {expr : haxe.macro.ExprDef.ECast({expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("loadObjectField")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11175, 11190)}, [reader, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("field")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11200, 11205)}, haxe.macro.Context.makeExpr(field.name, $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11209, 11221)), {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("assigned")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11223, 11231)}, f_a, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11239, 11242)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11175, 11243)}, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11170, 11243)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11163, 11243)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11154, 11252)};
										} else {
											cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EVars([{name : "v", type : null, expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("loadObjectField")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11297, 11312)}, [reader, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("field")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11322, 11327)}, haxe.macro.Context.makeExpr(field.name, $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11331, 11343)), {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("assigned")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11345, 11353)}, f_a, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11361, 11364)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11297, 11365)}, isFinal : cast false, meta : []}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11289, 11366)}, {expr : haxe.macro.ExprDef.EIf({expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpNotEq, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("v")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11378, 11379)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11383, 11387)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11378, 11387)}, {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, f_a, {expr : haxe.macro.ExprDef.ECast({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("v")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11411, 11412)}, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11406, 11412)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11399, 11412)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11389, 11422)}, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11374, 11422)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 11280, 11430)};
										};
									};
								};
								var caseValue = null;
								{
									var `3 = 0;
									var `4 = field.meta.get();
									while (`3 < `4.length) {
										var m = `4[`3];
										++ `3;
										if (m.name == ":alias" && m.params.length == 1) {
											@:ast(switch (m.params[0].expr) {
	case EConst(CString(_)):
		caseValue = m.params[0];	
	default:
}) {
												var `3 = m.params[0].expr;
												if (enumIndex `3 == 0) {
													var `4 = `3[0];
													if (enumIndex `4 == 2) {
														var `5 = `4[0];
														var `6 = `4[1];
														{
															caseValue = m.params[0];
														};
													} else {};
												} else {};
											};
										};
									};
								};
								if (caseValue == null) {
									caseValue = {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CString(field.name, null)), pos : haxe.macro.Context.currentPos()};
								};
								cases.push({expr : assignation, guard : null, values : [caseValue]});
								if (field.meta.has(":default")) {
									var metas = field.meta.extract(":default");
									if (metas.length > 0) {
										var meta = metas[0];
										if (meta.params != null && meta.params.length == 1) {
											if (haxe.macro.ExprTools.toString(meta.params[0]) == "auto") {
												baseValues.push({field : field.name, expr : cast {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.ENew(f_cls, [{expr : haxe.macro.ExprDef.EArrayDecl([]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12223, 12225)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12227, 12233)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("NONE")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12235, 12239)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12212, 12240)}, "getAuto"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12212, 12248)}, []), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12212, 12250)}, quotes : haxe.macro.QuoteStatus.Unquoted});
											} else {
												baseValues.push({field : field.name, expr : {expr : haxe.macro.ExprDef.ECheckType(meta.params[0], {
													{};
													@:ast(switch (type) {
	case null:
		null;	
	case TEnum(_.get().isPrivate => true, _):
		direct();	
	case TInst(_.get().isPrivate => true, _):
		direct();	
	case TType(_.get().isPrivate => true, _):
		direct();	
	case TAbstract(_.get().isPrivate => true, _):
		direct();	
	case TMono(_):
		direct();	
	case TEnum(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TInst(_.get() => classType, params):
		switch (classType.kind) {
			case KTypeParameter(_):
				var ct = asComplexType(classType.name);
				switch toType(ct) {
					case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
						ct;					
					default:
						direct();					
				};			
			default:
				TPath(toTypePath(classType, params));			
		};	
	case TType(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TFun(args, ret):
		TFunction([for (a  in  args) a.opt ? nullable(toComplexType(a.t)) : toComplexType(a.t)], toComplexType(ret));	
	case TAnonymous(_.get() => { fields : fields }):
		TAnonymous([for (cf  in  fields) toField(cf)]);	
	case TDynamic(t):
		if (t == null) {
			(TPath({ pack : [], name : "Dynamic", params : [] }) : haxe.macro.Expr.ComplexType);
		} else {
			var ct = toComplexType(t);
			(TPath({ pack : [], name : "Dynamic", params : [TPType(ct)] }) : haxe.macro.Expr.ComplexType);
		};	
	case TLazy(f):
		toComplexType(f());	
	case TAbstract(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	default:
		throw "Invalid type";	
}) if (f_type == null) {
														null;
													} else switch (@:exhaustive enumIndex f_type) {
														case 0: {
															var `9 = f_type[0];
															{
																haxe.macro.TypeTools.toComplexType(f_type);
															};
														};
														case 1: {
															var `4 = f_type[0];
															var `5 = f_type[1];
															{
																var _hx_tmp;
																var _hx_tmp;
																if ((_hx_tmp = `4.get().isPrivate) == true) {
																	{
																		haxe.macro.TypeTools.toComplexType(f_type);
																	};
																} else {
																	var baseType = (_hx_tmp = `4.get());
																	var params = `5;
																	{
																		haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																	};
																};
															};
														};
														case 2: {
															var `14 = f_type[0];
															var `15 = f_type[1];
															{
																var _hx_tmp;
																var _hx_tmp;
																if ((_hx_tmp = `14.get().isPrivate) == true) {
																	{
																		haxe.macro.TypeTools.toComplexType(f_type);
																	};
																} else {
																	var classType = (_hx_tmp = `14.get());
																	var params = `15;
																	{
																		@:ast(switch (classType.kind) {
	case KTypeParameter(_):
		var ct = asComplexType(classType.name);
		switch toType(ct) {
			case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
				ct;			
			default:
				direct();			
		};	
	default:
		TPath(toTypePath(classType, params));	
}) {
																			var ` = classType.kind;
																			if (enumIndex ` == 1) {
																				var `1 = `[0];
																				{
																					var ct = {
																						var s = classType.name;
																						var params = null;
																						haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.asTypePath(s, params));
																					};
																					@:ast(switch toType(ct) {
	case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
		ct;	
	default:
		direct();	
}) {
																						var ` = json2object.utils.TypeTools.toType(ct, null);
																						if (enumIndex ` == 0) {
																							var `1 = `[0];
																							if (enumIndex `1 == 2) {
																								var `2 = `1[0];
																								var `3 = `1[1];
																								{
																									var _hx_tmp;
																									{
																										var cl = (_hx_tmp = `2.get());
																										if ({
																											var ` = cl.kind;
																											if (enumIndex ` == 1) {
																												var `1 = `[0];
																												true;
																											} else false;
																										} && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")) {
																											ct;
																										} else {
																											haxe.macro.TypeTools.toComplexType(f_type);
																										};
																									};
																								};
																							} else {
																								haxe.macro.TypeTools.toComplexType(f_type);
																							};
																						} else {
																							haxe.macro.TypeTools.toComplexType(f_type);
																						};
																					};
																				};
																			} else {
																				haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(classType, params));
																			};
																		};
																	};
																};
															};
														};
														case 3: {
															var `12 = f_type[0];
															var `13 = f_type[1];
															{
																var _hx_tmp;
																var _hx_tmp;
																if ((_hx_tmp = `12.get().isPrivate) == true) {
																	{
																		haxe.macro.TypeTools.toComplexType(f_type);
																	};
																} else {
																	var baseType = (_hx_tmp = `12.get());
																	var params = `13;
																	{
																		haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																	};
																};
															};
														};
														case 4: {
															var `10 = f_type[0];
															var `11 = f_type[1];
															{
																var args = `10;
																var ret = `11;
																{
																	haxe.macro.ComplexType.TFunction({
																		var ` = [];
																		{
																			var `1 = 0;
																			while (`1 < args.length) {
																				var a = args[`1];
																				++ `1;
																				`.push(if (a.opt) {
																					json2object.utils.TypeTools.nullable(json2object.utils.TypeTools.toComplexType(a.t));
																				} else {
																					json2object.utils.TypeTools.toComplexType(a.t);
																				});
																			};
																		};
																		`;
																	}, json2object.utils.TypeTools.toComplexType(ret));
																};
															};
														};
														case 5: {
															var `6 = f_type[0];
															{
																var _hx_tmp;
																{
																	var `7 = (_hx_tmp = `6.get()).fields;
																	var `8 = _hx_tmp.status;
																	{
																		var fields = `7;
																		{
																			haxe.macro.ComplexType.TAnonymous({
																				var ` = [];
																				{
																					var `1 = 0;
																					while (`1 < fields.length) {
																						var cf = fields[`1];
																						++ `1;
																						`.push(json2object.utils.TypeTools.toField(cf));
																					};
																				};
																				`;
																			});
																		};
																	};
																};
															};
														};
														case 6: {
															var `2 = f_type[0];
															{
																var t = `2;
																{
																	if (t == null) {
																		cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : []});
																	} else {
																		var ct = json2object.utils.TypeTools.toComplexType(t);
																		cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(ct)]});
																	};
																};
															};
														};
														case 7: {
															var `3 = f_type[0];
															{
																var f = `3;
																{
																	json2object.utils.TypeTools.toComplexType(f());
																};
															};
														};
														case 8: {
															var ` = f_type[0];
															var `1 = f_type[1];
															{
																var _hx_tmp;
																var _hx_tmp;
																if ((_hx_tmp = `.get().isPrivate) == true) {
																	{
																		haxe.macro.TypeTools.toComplexType(f_type);
																	};
																} else {
																	var baseType = (_hx_tmp = `.get());
																	var params = `1;
																	{
																		haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																	};
																};
															};
														};
													};
												}), pos : meta.params[0].pos}, quotes : haxe.macro.QuoteStatus.Unquoted});
											};
										};
									};
								} else {
									var e = @:ast(switch (field.type) {
	case TAbstract(_.get() => t, _) if (t.name == "Any"):
		({ expr : EConst(CIdent("null")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12656, 12660) } : haxe.macro.Expr);	
	case TDynamic(_):
		({ expr : EConst(CIdent("null")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12693, 12697) } : haxe.macro.Expr);	
	default:
		({ expr : ECall({ expr : EField({ expr : ENew(f_cls, [{ expr : EArrayDecl([]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12732, 12734) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12736, 12742) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12744, 12748) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12721, 12749) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12721, 12758) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : EConst(CIdent("JNull")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12766, 12771) }, quotes : Unquoted }, { field : "pos", expr : { expr : EObjectDecl([{ field : "file", expr : { expr : EConst(CString("", DoubleQuotes)), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12783, 12785) }, quotes : Unquoted }, { field : "min", expr : { expr : EConst(CInt("0")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12790, 12791) }, quotes : Unquoted }, { field : "max", expr : { expr : EConst(CInt("1")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12797, 12798) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12777, 12799) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12759, 12800) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12721, 12801) } : haxe.macro.Expr);	
}) {
										var `5 = field.type;
										switch (enumIndex `5) {
											case 6: {
												var `8 = `5[0];
												{
													cast {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12693, 12697)};
												};
											};
											case 8: {
												var `6 = `5[0];
												var `7 = `5[1];
												{
													var _hx_tmp;
													{
														var t = (_hx_tmp = `6.get());
														if (t.name == "Any") {
															cast {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12656, 12660)};
														} else {
															cast {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.ENew(f_cls, [{expr : haxe.macro.ExprDef.EArrayDecl([]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12732, 12734)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12736, 12742)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("NONE")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12744, 12748)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12721, 12749)}, "loadJson"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12721, 12758)}, [{expr : haxe.macro.ExprDef.EObjectDecl([{field : "value", expr : {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("JNull")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12766, 12771)}, quotes : haxe.macro.QuoteStatus.Unquoted}, {field : "pos", expr : {expr : haxe.macro.ExprDef.EObjectDecl([{field : "file", expr : {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CString("", haxe.macro.StringLiteralKind.DoubleQuotes)), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12783, 12785)}, quotes : haxe.macro.QuoteStatus.Unquoted}, {field : "min", expr : {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CInt("0")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12790, 12791)}, quotes : haxe.macro.QuoteStatus.Unquoted}, {field : "max", expr : {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CInt("1")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12797, 12798)}, quotes : haxe.macro.QuoteStatus.Unquoted}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12777, 12799)}, quotes : haxe.macro.QuoteStatus.Unquoted}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12759, 12800)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12721, 12801)};
														};
													};
												};
											};
											default: {
												cast {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.ENew(f_cls, [{expr : haxe.macro.ExprDef.EArrayDecl([]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12732, 12734)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12736, 12742)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("NONE")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12744, 12748)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12721, 12749)}, "loadJson"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12721, 12758)}, [{expr : haxe.macro.ExprDef.EObjectDecl([{field : "value", expr : {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("JNull")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12766, 12771)}, quotes : haxe.macro.QuoteStatus.Unquoted}, {field : "pos", expr : {expr : haxe.macro.ExprDef.EObjectDecl([{field : "file", expr : {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CString("", haxe.macro.StringLiteralKind.DoubleQuotes)), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12783, 12785)}, quotes : haxe.macro.QuoteStatus.Unquoted}, {field : "min", expr : {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CInt("0")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12790, 12791)}, quotes : haxe.macro.QuoteStatus.Unquoted}, {field : "max", expr : {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CInt("1")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12797, 12798)}, quotes : haxe.macro.QuoteStatus.Unquoted}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12777, 12799)}, quotes : haxe.macro.QuoteStatus.Unquoted}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12759, 12800)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12721, 12801)};
											}
										};
									};
									baseValues.push({field : field.name, expr : e, quotes : haxe.macro.QuoteStatus.Unquoted});
								};
								if (needReflect) {
									autoExprs.push(cast {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("Reflect")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12964, 12971)}, "setField"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12964, 12980)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12981, 12986)}, haxe.macro.Context.makeExpr(field.name, $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12990, 13002)), baseValues[baseValues.length - 1].expr]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 12964, 13047)});
								} else {
									autoExprs.push(cast {expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, f_a, baseValues[baseValues.length - 1].expr), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13096, 13144)});
								};
							};
						};
					} else {};
				};
			};
		};
		var default_e = cast {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13202, 13208)}, "push"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13202, 13213)}, [{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("UnknownVariable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13214, 13229)}, [{expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("field")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13230, 13235)}, "name"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13230, 13240)}, {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13242, 13248)}, "convertPosition"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13242, 13264)}, [{expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("field")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13265, 13270)}, "namePos"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13265, 13278)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13242, 13279)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13214, 13280)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13202, 13281)};
		var loop = {expr : haxe.macro.ExprDef.ESwitch(cast {expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("field")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13318, 13323)}, "name"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13318, 13328)}, cases, default_e), pos : haxe.macro.Context.currentPos()};
		if (isAnon) {
			initializator = {expr : haxe.macro.ExprDef.EObjectDecl(baseValues), pos : haxe.macro.Context.currentPos()};
			json2object.reader.DataBuilder.changeFunction("getAuto", parser, cast {expr : haxe.macro.ExprDef.EReturn(initializator), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13519, 13540)});
		} else {
			var casting = if (isPrivate != null && haxe.macro.Context.defined("cpp") && ! haxe.macro.Context.defined("cppia")) {
				var abstractType = {
					{};
					@:ast(switch (type) {
	case null:
		null;	
	case TEnum(_.get().isPrivate => true, _):
		direct();	
	case TInst(_.get().isPrivate => true, _):
		direct();	
	case TType(_.get().isPrivate => true, _):
		direct();	
	case TAbstract(_.get().isPrivate => true, _):
		direct();	
	case TMono(_):
		direct();	
	case TEnum(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TInst(_.get() => classType, params):
		switch (classType.kind) {
			case KTypeParameter(_):
				var ct = asComplexType(classType.name);
				switch toType(ct) {
					case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
						ct;					
					default:
						direct();					
				};			
			default:
				TPath(toTypePath(classType, params));			
		};	
	case TType(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TFun(args, ret):
		TFunction([for (a  in  args) a.opt ? nullable(toComplexType(a.t)) : toComplexType(a.t)], toComplexType(ret));	
	case TAnonymous(_.get() => { fields : fields }):
		TAnonymous([for (cf  in  fields) toField(cf)]);	
	case TDynamic(t):
		if (t == null) {
			(TPath({ pack : [], name : "Dynamic", params : [] }) : haxe.macro.Expr.ComplexType);
		} else {
			var ct = toComplexType(t);
			(TPath({ pack : [], name : "Dynamic", params : [TPType(ct)] }) : haxe.macro.Expr.ComplexType);
		};	
	case TLazy(f):
		toComplexType(f());	
	case TAbstract(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	default:
		throw "Invalid type";	
}) if (superType == null) {
						null;
					} else switch (@:exhaustive enumIndex superType) {
						case 0: {
							var `9 = superType[0];
							{
								haxe.macro.TypeTools.toComplexType(superType);
							};
						};
						case 1: {
							var `4 = superType[0];
							var `5 = superType[1];
							{
								var _hx_tmp;
								var _hx_tmp;
								if ((_hx_tmp = `4.get().isPrivate) == true) {
									{
										haxe.macro.TypeTools.toComplexType(superType);
									};
								} else {
									var baseType = (_hx_tmp = `4.get());
									var params = `5;
									{
										haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
									};
								};
							};
						};
						case 2: {
							var `14 = superType[0];
							var `15 = superType[1];
							{
								var _hx_tmp;
								var _hx_tmp;
								if ((_hx_tmp = `14.get().isPrivate) == true) {
									{
										haxe.macro.TypeTools.toComplexType(superType);
									};
								} else {
									var classType = (_hx_tmp = `14.get());
									var params = `15;
									{
										@:ast(switch (classType.kind) {
	case KTypeParameter(_):
		var ct = asComplexType(classType.name);
		switch toType(ct) {
			case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
				ct;			
			default:
				direct();			
		};	
	default:
		TPath(toTypePath(classType, params));	
}) {
											var ` = classType.kind;
											if (enumIndex ` == 1) {
												var `1 = `[0];
												{
													var ct = {
														var s = classType.name;
														var params = null;
														haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.asTypePath(s, params));
													};
													@:ast(switch toType(ct) {
	case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
		ct;	
	default:
		direct();	
}) {
														var ` = json2object.utils.TypeTools.toType(ct, null);
														if (enumIndex ` == 0) {
															var `1 = `[0];
															if (enumIndex `1 == 2) {
																var `2 = `1[0];
																var `3 = `1[1];
																{
																	var _hx_tmp;
																	{
																		var cl = (_hx_tmp = `2.get());
																		if ({
																			var ` = cl.kind;
																			if (enumIndex ` == 1) {
																				var `1 = `[0];
																				true;
																			} else false;
																		} && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")) {
																			ct;
																		} else {
																			haxe.macro.TypeTools.toComplexType(superType);
																		};
																	};
																};
															} else {
																haxe.macro.TypeTools.toComplexType(superType);
															};
														} else {
															haxe.macro.TypeTools.toComplexType(superType);
														};
													};
												};
											} else {
												haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(classType, params));
											};
										};
									};
								};
							};
						};
						case 3: {
							var `12 = superType[0];
							var `13 = superType[1];
							{
								var _hx_tmp;
								var _hx_tmp;
								if ((_hx_tmp = `12.get().isPrivate) == true) {
									{
										haxe.macro.TypeTools.toComplexType(superType);
									};
								} else {
									var baseType = (_hx_tmp = `12.get());
									var params = `13;
									{
										haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
									};
								};
							};
						};
						case 4: {
							var `10 = superType[0];
							var `11 = superType[1];
							{
								var args = `10;
								var ret = `11;
								{
									haxe.macro.ComplexType.TFunction({
										var ` = [];
										{
											var `1 = 0;
											while (`1 < args.length) {
												var a = args[`1];
												++ `1;
												`.push(if (a.opt) {
													json2object.utils.TypeTools.nullable(json2object.utils.TypeTools.toComplexType(a.t));
												} else {
													json2object.utils.TypeTools.toComplexType(a.t);
												});
											};
										};
										`;
									}, json2object.utils.TypeTools.toComplexType(ret));
								};
							};
						};
						case 5: {
							var `6 = superType[0];
							{
								var _hx_tmp;
								{
									var `7 = (_hx_tmp = `6.get()).fields;
									var `8 = _hx_tmp.status;
									{
										var fields = `7;
										{
											haxe.macro.ComplexType.TAnonymous({
												var ` = [];
												{
													var `1 = 0;
													while (`1 < fields.length) {
														var cf = fields[`1];
														++ `1;
														`.push(json2object.utils.TypeTools.toField(cf));
													};
												};
												`;
											});
										};
									};
								};
							};
						};
						case 6: {
							var `2 = superType[0];
							{
								var t = `2;
								{
									if (t == null) {
										cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : []});
									} else {
										var ct = json2object.utils.TypeTools.toComplexType(t);
										cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(ct)]});
									};
								};
							};
						};
						case 7: {
							var `3 = superType[0];
							{
								var f = `3;
								{
									json2object.utils.TypeTools.toComplexType(f());
								};
							};
						};
						case 8: {
							var ` = superType[0];
							var `1 = superType[1];
							{
								var _hx_tmp;
								var _hx_tmp;
								if ((_hx_tmp = `.get().isPrivate) == true) {
									{
										haxe.macro.TypeTools.toComplexType(superType);
									};
								} else {
									var baseType = (_hx_tmp = `.get());
									var params = `1;
									{
										haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
									};
								};
							};
						};
					};
				};
				cast {expr : haxe.macro.ExprDef.ECast({expr : haxe.macro.ExprDef.EParenthesis({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EParenthesis({expr : haxe.macro.ExprDef.ECheckType({expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("cpp")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13772, 13775)}, "Pointer"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13772, 13783)}, "addressOf"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13772, 13793)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13794, 13799)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13772, 13800)}, "reinterpret"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13772, 13812)}, []), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13772, 13814)}, haxe.macro.ComplexType.TPath({pack : ["cpp"], name : "Pointer", params : [haxe.macro.TypeParam.TPType(abstractType)]})), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13771, 13844)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13771, 13844)}, "value"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13771, 13850)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13770, 13851)}, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13765, 13851)};
			} else {
				cast {expr : haxe.macro.ExprDef.ECast({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13890, 13895)}, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13885, 13895)};
			};
			var autoExpr = cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EVars([{name : "value", type : null, expr : initializator, isFinal : cast false, meta : []}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13934, 13961)}, {expr : haxe.macro.ExprDef.EMeta({name : ":privateAccess", params : [], pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13966, 13981)}, {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBlock(autoExprs), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13991, 14002)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13982, 14009)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13966, 14009)}, {expr : haxe.macro.ExprDef.EReturn(casting), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14014, 14029)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 13928, 14035)};
			json2object.reader.DataBuilder.changeFunction("getAuto", parser, cast {expr : haxe.macro.ExprDef.EReturn(autoExpr), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14079, 14095)});
		};
		var assignedKeys = {expr : haxe.macro.ExprDef.EArrayDecl(assignedKeys), pos : haxe.macro.Context.currentPos()};
		var assignedValues = {expr : haxe.macro.ExprDef.EArrayDecl(assignedValues), pos : haxe.macro.Context.currentPos()};
		var e = cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EVars([{name : "assigned", type : null, expr : {expr : haxe.macro.ExprDef.ENew({pack : [], name : "Map", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({pack : [], name : "String", params : []})), haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({pack : [], name : "Bool", params : []}))]}, []), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14312, 14334)}, isFinal : cast false, meta : []}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14297, 14335)}, {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("objectSetupAssign")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14339, 14356)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("assigned")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14357, 14365)}, assignedKeys, assignedValues]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14339, 14398)}, {expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14403, 14408)}, {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("getAuto")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14411, 14418)}, []), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14411, 14420)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14403, 14420)}, {expr : haxe.macro.ExprDef.EMeta({name : ":privateAccess", params : [], pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14425, 14440)}, {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EFor({expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpIn, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("field")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14452, 14457)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("o")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14461, 14462)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14452, 14462)}, {expr : haxe.macro.ExprDef.EBlock([loop]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14464, 14483)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14447, 14483)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14441, 14488)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14425, 14488)}, {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("objectErrors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14492, 14504)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("assigned")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14505, 14513)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14515, 14518)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14492, 14519)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14292, 14524)};
		json2object.reader.DataBuilder.changeFunction("loadJsonObject", parser, e);
		json2object.reader.DataBuilder.changeFunction("loadJsonNull", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14622, 14627)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14630, 14634)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14622, 14634)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14621, 14636)});
	}

	@:has_untyped
	public static function makeMapParser(parser:haxe.macro.TypeDefinition, key:haxe.macro.Type, value:haxe.macro.Type, baseParser:haxe.macro.BaseType) {
		var k_cls = {name : baseParser.name, pack : baseParser.pack, params : [haxe.macro.TypeParam.TPType({
			{};
			@:ast(switch (type) {
	case null:
		null;	
	case TEnum(_.get().isPrivate => true, _):
		direct();	
	case TInst(_.get().isPrivate => true, _):
		direct();	
	case TType(_.get().isPrivate => true, _):
		direct();	
	case TAbstract(_.get().isPrivate => true, _):
		direct();	
	case TMono(_):
		direct();	
	case TEnum(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TInst(_.get() => classType, params):
		switch (classType.kind) {
			case KTypeParameter(_):
				var ct = asComplexType(classType.name);
				switch toType(ct) {
					case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
						ct;					
					default:
						direct();					
				};			
			default:
				TPath(toTypePath(classType, params));			
		};	
	case TType(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TFun(args, ret):
		TFunction([for (a  in  args) a.opt ? nullable(toComplexType(a.t)) : toComplexType(a.t)], toComplexType(ret));	
	case TAnonymous(_.get() => { fields : fields }):
		TAnonymous([for (cf  in  fields) toField(cf)]);	
	case TDynamic(t):
		if (t == null) {
			(TPath({ pack : [], name : "Dynamic", params : [] }) : haxe.macro.Expr.ComplexType);
		} else {
			var ct = toComplexType(t);
			(TPath({ pack : [], name : "Dynamic", params : [TPType(ct)] }) : haxe.macro.Expr.ComplexType);
		};	
	case TLazy(f):
		toComplexType(f());	
	case TAbstract(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	default:
		throw "Invalid type";	
}) if (key == null) {
				null;
			} else switch (@:exhaustive enumIndex key) {
				case 0: {
					var `9 = key[0];
					{
						haxe.macro.TypeTools.toComplexType(key);
					};
				};
				case 1: {
					var `4 = key[0];
					var `5 = key[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `4.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(key);
							};
						} else {
							var baseType = (_hx_tmp = `4.get());
							var params = `5;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
				case 2: {
					var `14 = key[0];
					var `15 = key[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `14.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(key);
							};
						} else {
							var classType = (_hx_tmp = `14.get());
							var params = `15;
							{
								@:ast(switch (classType.kind) {
	case KTypeParameter(_):
		var ct = asComplexType(classType.name);
		switch toType(ct) {
			case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
				ct;			
			default:
				direct();			
		};	
	default:
		TPath(toTypePath(classType, params));	
}) {
									var ` = classType.kind;
									if (enumIndex ` == 1) {
										var `1 = `[0];
										{
											var ct = {
												var s = classType.name;
												var params = null;
												haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.asTypePath(s, params));
											};
											@:ast(switch toType(ct) {
	case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
		ct;	
	default:
		direct();	
}) {
												var ` = json2object.utils.TypeTools.toType(ct, null);
												if (enumIndex ` == 0) {
													var `1 = `[0];
													if (enumIndex `1 == 2) {
														var `2 = `1[0];
														var `3 = `1[1];
														{
															var _hx_tmp;
															{
																var cl = (_hx_tmp = `2.get());
																if ({
																	var ` = cl.kind;
																	if (enumIndex ` == 1) {
																		var `1 = `[0];
																		true;
																	} else false;
																} && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")) {
																	ct;
																} else {
																	haxe.macro.TypeTools.toComplexType(key);
																};
															};
														};
													} else {
														haxe.macro.TypeTools.toComplexType(key);
													};
												} else {
													haxe.macro.TypeTools.toComplexType(key);
												};
											};
										};
									} else {
										haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(classType, params));
									};
								};
							};
						};
					};
				};
				case 3: {
					var `12 = key[0];
					var `13 = key[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `12.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(key);
							};
						} else {
							var baseType = (_hx_tmp = `12.get());
							var params = `13;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
				case 4: {
					var `10 = key[0];
					var `11 = key[1];
					{
						var args = `10;
						var ret = `11;
						{
							haxe.macro.ComplexType.TFunction({
								var ` = [];
								{
									var `1 = 0;
									while (`1 < args.length) {
										var a = args[`1];
										++ `1;
										`.push(if (a.opt) {
											json2object.utils.TypeTools.nullable(json2object.utils.TypeTools.toComplexType(a.t));
										} else {
											json2object.utils.TypeTools.toComplexType(a.t);
										});
									};
								};
								`;
							}, json2object.utils.TypeTools.toComplexType(ret));
						};
					};
				};
				case 5: {
					var `6 = key[0];
					{
						var _hx_tmp;
						{
							var `7 = (_hx_tmp = `6.get()).fields;
							var `8 = _hx_tmp.status;
							{
								var fields = `7;
								{
									haxe.macro.ComplexType.TAnonymous({
										var ` = [];
										{
											var `1 = 0;
											while (`1 < fields.length) {
												var cf = fields[`1];
												++ `1;
												`.push(json2object.utils.TypeTools.toField(cf));
											};
										};
										`;
									});
								};
							};
						};
					};
				};
				case 6: {
					var `2 = key[0];
					{
						var t = `2;
						{
							if (t == null) {
								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : []});
							} else {
								var ct = json2object.utils.TypeTools.toComplexType(t);
								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(ct)]});
							};
						};
					};
				};
				case 7: {
					var `3 = key[0];
					{
						var f = `3;
						{
							json2object.utils.TypeTools.toComplexType(f());
						};
					};
				};
				case 8: {
					var ` = key[0];
					var `1 = key[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(key);
							};
						} else {
							var baseType = (_hx_tmp = `.get());
							var params = `1;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
			};
		})]};
		var keyMacro = @:ast(switch (key.followWithAbstracts()) {
	case TInst(_.get() => t, _):
		if (t.module == "String") {
			({ expr : ETry({ expr : EBlock([{ expr : ECall({ expr : EField({ expr : ENew(k_cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14998, 15004) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15006, 15012) }, { expr : EConst(CIdent("THROW")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15014, 15019) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14987, 15020) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14987, 15029) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : ECall({ expr : EConst(CIdent("JString")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15037, 15044) }, [{ expr : EField({ expr : EConst(CIdent("field")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15045, 15050) }, "name"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15045, 15055) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15037, 15056) }, quotes : Unquoted }, { field : "pos", expr : { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15062, 15068) }, "revert"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15062, 15075) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15076, 15079) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15062, 15080) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15030, 15081) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15083, 15091) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14987, 15092) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14979, 15100) }, [{ name : "e", type : TPath({ pack : ["json2object"], name : "Error", params : [], sub : "InternalError" }), expr : { expr : EBlock([{ expr : EIf({ expr : EBinop(OpNotEq, { expr : EConst(CIdent("e")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15155, 15156) }, { expr : EConst(CIdent("ParsingThrow")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15160, 15172) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15155, 15172) }, { expr : EBlock([{ expr : EThrow({ expr : EConst(CIdent("e")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15189, 15190) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15183, 15188) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15174, 15199) }, null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15151, 15199) }, { expr : EContinue, pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15207, 15215) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15143, 15223) } }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14975, 15223) } : haxe.macro.Expr);
		} else {
			Context.fatalError("json2object: Only maps with Int or String keys are parsable, got " + key.toString(), callPosition);
		};	
	case TAbstract(_.get() => t, _):
		if (t.module == "StdTypes" && t.name == "Int") {
			({ expr : ETry({ expr : EBlock([{ expr : ECall({ expr : EField({ expr : ENew(k_cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15491, 15497) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15499, 15505) }, { expr : EConst(CIdent("THROW")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15507, 15512) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15480, 15513) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15480, 15522) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : ECall({ expr : EConst(CIdent("JNumber")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15530, 15537) }, [{ expr : EField({ expr : EConst(CIdent("field")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15538, 15543) }, "name"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15538, 15548) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15530, 15549) }, quotes : Unquoted }, { field : "pos", expr : { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15555, 15561) }, "revert"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15555, 15568) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15569, 15572) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15555, 15573) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15523, 15574) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15576, 15584) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15480, 15585) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15472, 15593) }, [{ name : "e", type : TPath({ pack : ["json2object"], name : "Error", params : [], sub : "InternalError" }), expr : { expr : EBlock([{ expr : EIf({ expr : EBinop(OpNotEq, { expr : EConst(CIdent("e")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15648, 15649) }, { expr : EConst(CIdent("ParsingThrow")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15653, 15665) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15648, 15665) }, { expr : EBlock([{ expr : EThrow({ expr : EConst(CIdent("e")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15682, 15683) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15676, 15681) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15667, 15692) }, null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15644, 15692) }, { expr : EContinue, pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15700, 15708) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15636, 15716) } }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15468, 15716) } : haxe.macro.Expr);
		} else {
			Context.fatalError("json2object: Only maps with Int or String keys are parsable, got " + key.toString(), callPosition);
		};	
	default:
		Context.fatalError("json2object: Only maps with Int or String keys are parsable, got " + key.toString(), callPosition);	
}) {
			var ` = {
				var once = false;
				if ((once == null)) once = false;
				haxe.macro.Context.followWithAbstracts(key, once);
			};
			switch (enumIndex `) {
				case 2: {
					var `3 = `[0];
					var `4 = `[1];
					{
						var _hx_tmp;
						{
							var t = (_hx_tmp = `3.get());
							{
								if (t.module == "String") {
									cast {expr : haxe.macro.ExprDef.ETry({expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.ENew(k_cls, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14998, 15004)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15006, 15012)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("THROW")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15014, 15019)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14987, 15020)}, "loadJson"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14987, 15029)}, [{expr : haxe.macro.ExprDef.EObjectDecl([{field : "value", expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("JString")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15037, 15044)}, [{expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("field")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15045, 15050)}, "name"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15045, 15055)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15037, 15056)}, quotes : haxe.macro.QuoteStatus.Unquoted}, {field : "pos", expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15062, 15068)}, "revert"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15062, 15075)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15076, 15079)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15062, 15080)}, quotes : haxe.macro.QuoteStatus.Unquoted}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15030, 15081)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15083, 15091)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14987, 15092)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14979, 15100)}, [{name : "e", type : haxe.macro.ComplexType.TPath({pack : ["json2object"], name : "Error", params : [], sub : "InternalError"}), expr : {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EIf({expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpNotEq, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("e")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15155, 15156)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("ParsingThrow")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15160, 15172)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15155, 15172)}, {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EThrow({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("e")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15189, 15190)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15183, 15188)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15174, 15199)}, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15151, 15199)}, {expr : haxe.macro.ExprDef.EContinue, pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15207, 15215)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15143, 15223)}}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 14975, 15223)};
								} else {
									haxe.macro.Context.fatalError("json2object: Only maps with Int or String keys are parsable, got " + haxe.macro.TypeTools.toString(key), json2object.reader.DataBuilder.callPosition);
								};
							};
						};
					};
				};
				case 8: {
					var `1 = `[0];
					var `2 = `[1];
					{
						var _hx_tmp;
						{
							var t = (_hx_tmp = `1.get());
							{
								if (t.module == "StdTypes" && t.name == "Int") {
									cast {expr : haxe.macro.ExprDef.ETry({expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.ENew(k_cls, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15491, 15497)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15499, 15505)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("THROW")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15507, 15512)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15480, 15513)}, "loadJson"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15480, 15522)}, [{expr : haxe.macro.ExprDef.EObjectDecl([{field : "value", expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("JNumber")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15530, 15537)}, [{expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("field")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15538, 15543)}, "name"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15538, 15548)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15530, 15549)}, quotes : haxe.macro.QuoteStatus.Unquoted}, {field : "pos", expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15555, 15561)}, "revert"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15555, 15568)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15569, 15572)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15555, 15573)}, quotes : haxe.macro.QuoteStatus.Unquoted}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15523, 15574)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15576, 15584)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15480, 15585)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15472, 15593)}, [{name : "e", type : haxe.macro.ComplexType.TPath({pack : ["json2object"], name : "Error", params : [], sub : "InternalError"}), expr : {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EIf({expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpNotEq, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("e")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15648, 15649)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("ParsingThrow")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15653, 15665)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15648, 15665)}, {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EThrow({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("e")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15682, 15683)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15676, 15681)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15667, 15692)}, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15644, 15692)}, {expr : haxe.macro.ExprDef.EContinue, pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15700, 15708)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15636, 15716)}}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 15468, 15716)};
								} else {
									haxe.macro.Context.fatalError("json2object: Only maps with Int or String keys are parsable, got " + haxe.macro.TypeTools.toString(key), json2object.reader.DataBuilder.callPosition);
								};
							};
						};
					};
				};
				default: {
					haxe.macro.Context.fatalError("json2object: Only maps with Int or String keys are parsable, got " + haxe.macro.TypeTools.toString(key), json2object.reader.DataBuilder.callPosition);
				}
			};
		};
		var v_cls = {name : baseParser.name, pack : baseParser.pack, params : [haxe.macro.TypeParam.TPType({
			{};
			@:ast(switch (type) {
	case null:
		null;	
	case TEnum(_.get().isPrivate => true, _):
		direct();	
	case TInst(_.get().isPrivate => true, _):
		direct();	
	case TType(_.get().isPrivate => true, _):
		direct();	
	case TAbstract(_.get().isPrivate => true, _):
		direct();	
	case TMono(_):
		direct();	
	case TEnum(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TInst(_.get() => classType, params):
		switch (classType.kind) {
			case KTypeParameter(_):
				var ct = asComplexType(classType.name);
				switch toType(ct) {
					case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
						ct;					
					default:
						direct();					
				};			
			default:
				TPath(toTypePath(classType, params));			
		};	
	case TType(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TFun(args, ret):
		TFunction([for (a  in  args) a.opt ? nullable(toComplexType(a.t)) : toComplexType(a.t)], toComplexType(ret));	
	case TAnonymous(_.get() => { fields : fields }):
		TAnonymous([for (cf  in  fields) toField(cf)]);	
	case TDynamic(t):
		if (t == null) {
			(TPath({ pack : [], name : "Dynamic", params : [] }) : haxe.macro.Expr.ComplexType);
		} else {
			var ct = toComplexType(t);
			(TPath({ pack : [], name : "Dynamic", params : [TPType(ct)] }) : haxe.macro.Expr.ComplexType);
		};	
	case TLazy(f):
		toComplexType(f());	
	case TAbstract(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	default:
		throw "Invalid type";	
}) if (value == null) {
				null;
			} else switch (@:exhaustive enumIndex value) {
				case 0: {
					var `9 = value[0];
					{
						haxe.macro.TypeTools.toComplexType(value);
					};
				};
				case 1: {
					var `4 = value[0];
					var `5 = value[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `4.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(value);
							};
						} else {
							var baseType = (_hx_tmp = `4.get());
							var params = `5;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
				case 2: {
					var `14 = value[0];
					var `15 = value[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `14.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(value);
							};
						} else {
							var classType = (_hx_tmp = `14.get());
							var params = `15;
							{
								@:ast(switch (classType.kind) {
	case KTypeParameter(_):
		var ct = asComplexType(classType.name);
		switch toType(ct) {
			case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
				ct;			
			default:
				direct();			
		};	
	default:
		TPath(toTypePath(classType, params));	
}) {
									var ` = classType.kind;
									if (enumIndex ` == 1) {
										var `1 = `[0];
										{
											var ct = {
												var s = classType.name;
												var params = null;
												haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.asTypePath(s, params));
											};
											@:ast(switch toType(ct) {
	case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
		ct;	
	default:
		direct();	
}) {
												var ` = json2object.utils.TypeTools.toType(ct, null);
												if (enumIndex ` == 0) {
													var `1 = `[0];
													if (enumIndex `1 == 2) {
														var `2 = `1[0];
														var `3 = `1[1];
														{
															var _hx_tmp;
															{
																var cl = (_hx_tmp = `2.get());
																if ({
																	var ` = cl.kind;
																	if (enumIndex ` == 1) {
																		var `1 = `[0];
																		true;
																	} else false;
																} && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")) {
																	ct;
																} else {
																	haxe.macro.TypeTools.toComplexType(value);
																};
															};
														};
													} else {
														haxe.macro.TypeTools.toComplexType(value);
													};
												} else {
													haxe.macro.TypeTools.toComplexType(value);
												};
											};
										};
									} else {
										haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(classType, params));
									};
								};
							};
						};
					};
				};
				case 3: {
					var `12 = value[0];
					var `13 = value[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `12.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(value);
							};
						} else {
							var baseType = (_hx_tmp = `12.get());
							var params = `13;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
				case 4: {
					var `10 = value[0];
					var `11 = value[1];
					{
						var args = `10;
						var ret = `11;
						{
							haxe.macro.ComplexType.TFunction({
								var ` = [];
								{
									var `1 = 0;
									while (`1 < args.length) {
										var a = args[`1];
										++ `1;
										`.push(if (a.opt) {
											json2object.utils.TypeTools.nullable(json2object.utils.TypeTools.toComplexType(a.t));
										} else {
											json2object.utils.TypeTools.toComplexType(a.t);
										});
									};
								};
								`;
							}, json2object.utils.TypeTools.toComplexType(ret));
						};
					};
				};
				case 5: {
					var `6 = value[0];
					{
						var _hx_tmp;
						{
							var `7 = (_hx_tmp = `6.get()).fields;
							var `8 = _hx_tmp.status;
							{
								var fields = `7;
								{
									haxe.macro.ComplexType.TAnonymous({
										var ` = [];
										{
											var `1 = 0;
											while (`1 < fields.length) {
												var cf = fields[`1];
												++ `1;
												`.push(json2object.utils.TypeTools.toField(cf));
											};
										};
										`;
									});
								};
							};
						};
					};
				};
				case 6: {
					var `2 = value[0];
					{
						var t = `2;
						{
							if (t == null) {
								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : []});
							} else {
								var ct = json2object.utils.TypeTools.toComplexType(t);
								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(ct)]});
							};
						};
					};
				};
				case 7: {
					var `3 = value[0];
					{
						var f = `3;
						{
							json2object.utils.TypeTools.toComplexType(f());
						};
					};
				};
				case 8: {
					var ` = value[0];
					var `1 = value[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(value);
							};
						} else {
							var baseType = (_hx_tmp = `.get());
							var params = `1;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
			};
		})]};
		var valueMacro = cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.ETry({expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.ENew(v_cls, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16149, 16155)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16157, 16163)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("THROW")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16165, 16170)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16138, 16171)}, "loadJson"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16138, 16180)}, [{expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("field")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16181, 16186)}, "value"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16181, 16192)}, {expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("field")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16194, 16199)}, "name"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16194, 16204)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16138, 16205)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16132, 16211)}, [{name : "e", type : haxe.macro.ComplexType.TPath({pack : ["json2object"], name : "Error", params : [], sub : "InternalError"}), expr : {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EIf({expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpNotEq, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("e")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16267, 16268)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("ParsingThrow")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16272, 16284)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16267, 16284)}, {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EThrow({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("e")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16299, 16300)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16293, 16298)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16286, 16307)}, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16263, 16307)}, {expr : haxe.macro.ExprDef.EContinue, pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16313, 16321)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16257, 16327)}}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16128, 16327)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16123, 16331)};
		var cls = {name : "Map", pack : ["haxe", "ds"], params : [haxe.macro.TypeParam.TPType({
			{};
			@:ast(switch (type) {
	case null:
		null;	
	case TEnum(_.get().isPrivate => true, _):
		direct();	
	case TInst(_.get().isPrivate => true, _):
		direct();	
	case TType(_.get().isPrivate => true, _):
		direct();	
	case TAbstract(_.get().isPrivate => true, _):
		direct();	
	case TMono(_):
		direct();	
	case TEnum(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TInst(_.get() => classType, params):
		switch (classType.kind) {
			case KTypeParameter(_):
				var ct = asComplexType(classType.name);
				switch toType(ct) {
					case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
						ct;					
					default:
						direct();					
				};			
			default:
				TPath(toTypePath(classType, params));			
		};	
	case TType(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TFun(args, ret):
		TFunction([for (a  in  args) a.opt ? nullable(toComplexType(a.t)) : toComplexType(a.t)], toComplexType(ret));	
	case TAnonymous(_.get() => { fields : fields }):
		TAnonymous([for (cf  in  fields) toField(cf)]);	
	case TDynamic(t):
		if (t == null) {
			(TPath({ pack : [], name : "Dynamic", params : [] }) : haxe.macro.Expr.ComplexType);
		} else {
			var ct = toComplexType(t);
			(TPath({ pack : [], name : "Dynamic", params : [TPType(ct)] }) : haxe.macro.Expr.ComplexType);
		};	
	case TLazy(f):
		toComplexType(f());	
	case TAbstract(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	default:
		throw "Invalid type";	
}) if (key == null) {
				null;
			} else switch (@:exhaustive enumIndex key) {
				case 0: {
					var `9 = key[0];
					{
						haxe.macro.TypeTools.toComplexType(key);
					};
				};
				case 1: {
					var `4 = key[0];
					var `5 = key[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `4.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(key);
							};
						} else {
							var baseType = (_hx_tmp = `4.get());
							var params = `5;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
				case 2: {
					var `14 = key[0];
					var `15 = key[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `14.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(key);
							};
						} else {
							var classType = (_hx_tmp = `14.get());
							var params = `15;
							{
								@:ast(switch (classType.kind) {
	case KTypeParameter(_):
		var ct = asComplexType(classType.name);
		switch toType(ct) {
			case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
				ct;			
			default:
				direct();			
		};	
	default:
		TPath(toTypePath(classType, params));	
}) {
									var ` = classType.kind;
									if (enumIndex ` == 1) {
										var `1 = `[0];
										{
											var ct = {
												var s = classType.name;
												var params = null;
												haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.asTypePath(s, params));
											};
											@:ast(switch toType(ct) {
	case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
		ct;	
	default:
		direct();	
}) {
												var ` = json2object.utils.TypeTools.toType(ct, null);
												if (enumIndex ` == 0) {
													var `1 = `[0];
													if (enumIndex `1 == 2) {
														var `2 = `1[0];
														var `3 = `1[1];
														{
															var _hx_tmp;
															{
																var cl = (_hx_tmp = `2.get());
																if ({
																	var ` = cl.kind;
																	if (enumIndex ` == 1) {
																		var `1 = `[0];
																		true;
																	} else false;
																} && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")) {
																	ct;
																} else {
																	haxe.macro.TypeTools.toComplexType(key);
																};
															};
														};
													} else {
														haxe.macro.TypeTools.toComplexType(key);
													};
												} else {
													haxe.macro.TypeTools.toComplexType(key);
												};
											};
										};
									} else {
										haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(classType, params));
									};
								};
							};
						};
					};
				};
				case 3: {
					var `12 = key[0];
					var `13 = key[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `12.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(key);
							};
						} else {
							var baseType = (_hx_tmp = `12.get());
							var params = `13;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
				case 4: {
					var `10 = key[0];
					var `11 = key[1];
					{
						var args = `10;
						var ret = `11;
						{
							haxe.macro.ComplexType.TFunction({
								var ` = [];
								{
									var `1 = 0;
									while (`1 < args.length) {
										var a = args[`1];
										++ `1;
										`.push(if (a.opt) {
											json2object.utils.TypeTools.nullable(json2object.utils.TypeTools.toComplexType(a.t));
										} else {
											json2object.utils.TypeTools.toComplexType(a.t);
										});
									};
								};
								`;
							}, json2object.utils.TypeTools.toComplexType(ret));
						};
					};
				};
				case 5: {
					var `6 = key[0];
					{
						var _hx_tmp;
						{
							var `7 = (_hx_tmp = `6.get()).fields;
							var `8 = _hx_tmp.status;
							{
								var fields = `7;
								{
									haxe.macro.ComplexType.TAnonymous({
										var ` = [];
										{
											var `1 = 0;
											while (`1 < fields.length) {
												var cf = fields[`1];
												++ `1;
												`.push(json2object.utils.TypeTools.toField(cf));
											};
										};
										`;
									});
								};
							};
						};
					};
				};
				case 6: {
					var `2 = key[0];
					{
						var t = `2;
						{
							if (t == null) {
								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : []});
							} else {
								var ct = json2object.utils.TypeTools.toComplexType(t);
								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(ct)]});
							};
						};
					};
				};
				case 7: {
					var `3 = key[0];
					{
						var f = `3;
						{
							json2object.utils.TypeTools.toComplexType(f());
						};
					};
				};
				case 8: {
					var ` = key[0];
					var `1 = key[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(key);
							};
						} else {
							var baseType = (_hx_tmp = `.get());
							var params = `1;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
			};
		}), haxe.macro.TypeParam.TPType({
			{};
			@:ast(switch (type) {
	case null:
		null;	
	case TEnum(_.get().isPrivate => true, _):
		direct();	
	case TInst(_.get().isPrivate => true, _):
		direct();	
	case TType(_.get().isPrivate => true, _):
		direct();	
	case TAbstract(_.get().isPrivate => true, _):
		direct();	
	case TMono(_):
		direct();	
	case TEnum(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TInst(_.get() => classType, params):
		switch (classType.kind) {
			case KTypeParameter(_):
				var ct = asComplexType(classType.name);
				switch toType(ct) {
					case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
						ct;					
					default:
						direct();					
				};			
			default:
				TPath(toTypePath(classType, params));			
		};	
	case TType(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TFun(args, ret):
		TFunction([for (a  in  args) a.opt ? nullable(toComplexType(a.t)) : toComplexType(a.t)], toComplexType(ret));	
	case TAnonymous(_.get() => { fields : fields }):
		TAnonymous([for (cf  in  fields) toField(cf)]);	
	case TDynamic(t):
		if (t == null) {
			(TPath({ pack : [], name : "Dynamic", params : [] }) : haxe.macro.Expr.ComplexType);
		} else {
			var ct = toComplexType(t);
			(TPath({ pack : [], name : "Dynamic", params : [TPType(ct)] }) : haxe.macro.Expr.ComplexType);
		};	
	case TLazy(f):
		toComplexType(f());	
	case TAbstract(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	default:
		throw "Invalid type";	
}) if (value == null) {
				null;
			} else switch (@:exhaustive enumIndex value) {
				case 0: {
					var `9 = value[0];
					{
						haxe.macro.TypeTools.toComplexType(value);
					};
				};
				case 1: {
					var `4 = value[0];
					var `5 = value[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `4.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(value);
							};
						} else {
							var baseType = (_hx_tmp = `4.get());
							var params = `5;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
				case 2: {
					var `14 = value[0];
					var `15 = value[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `14.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(value);
							};
						} else {
							var classType = (_hx_tmp = `14.get());
							var params = `15;
							{
								@:ast(switch (classType.kind) {
	case KTypeParameter(_):
		var ct = asComplexType(classType.name);
		switch toType(ct) {
			case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
				ct;			
			default:
				direct();			
		};	
	default:
		TPath(toTypePath(classType, params));	
}) {
									var ` = classType.kind;
									if (enumIndex ` == 1) {
										var `1 = `[0];
										{
											var ct = {
												var s = classType.name;
												var params = null;
												haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.asTypePath(s, params));
											};
											@:ast(switch toType(ct) {
	case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
		ct;	
	default:
		direct();	
}) {
												var ` = json2object.utils.TypeTools.toType(ct, null);
												if (enumIndex ` == 0) {
													var `1 = `[0];
													if (enumIndex `1 == 2) {
														var `2 = `1[0];
														var `3 = `1[1];
														{
															var _hx_tmp;
															{
																var cl = (_hx_tmp = `2.get());
																if ({
																	var ` = cl.kind;
																	if (enumIndex ` == 1) {
																		var `1 = `[0];
																		true;
																	} else false;
																} && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")) {
																	ct;
																} else {
																	haxe.macro.TypeTools.toComplexType(value);
																};
															};
														};
													} else {
														haxe.macro.TypeTools.toComplexType(value);
													};
												} else {
													haxe.macro.TypeTools.toComplexType(value);
												};
											};
										};
									} else {
										haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(classType, params));
									};
								};
							};
						};
					};
				};
				case 3: {
					var `12 = value[0];
					var `13 = value[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `12.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(value);
							};
						} else {
							var baseType = (_hx_tmp = `12.get());
							var params = `13;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
				case 4: {
					var `10 = value[0];
					var `11 = value[1];
					{
						var args = `10;
						var ret = `11;
						{
							haxe.macro.ComplexType.TFunction({
								var ` = [];
								{
									var `1 = 0;
									while (`1 < args.length) {
										var a = args[`1];
										++ `1;
										`.push(if (a.opt) {
											json2object.utils.TypeTools.nullable(json2object.utils.TypeTools.toComplexType(a.t));
										} else {
											json2object.utils.TypeTools.toComplexType(a.t);
										});
									};
								};
								`;
							}, json2object.utils.TypeTools.toComplexType(ret));
						};
					};
				};
				case 5: {
					var `6 = value[0];
					{
						var _hx_tmp;
						{
							var `7 = (_hx_tmp = `6.get()).fields;
							var `8 = _hx_tmp.status;
							{
								var fields = `7;
								{
									haxe.macro.ComplexType.TAnonymous({
										var ` = [];
										{
											var `1 = 0;
											while (`1 < fields.length) {
												var cf = fields[`1];
												++ `1;
												`.push(json2object.utils.TypeTools.toField(cf));
											};
										};
										`;
									});
								};
							};
						};
					};
				};
				case 6: {
					var `2 = value[0];
					{
						var t = `2;
						{
							if (t == null) {
								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : []});
							} else {
								var ct = json2object.utils.TypeTools.toComplexType(t);
								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(ct)]});
							};
						};
					};
				};
				case 7: {
					var `3 = value[0];
					{
						var f = `3;
						{
							json2object.utils.TypeTools.toComplexType(f());
						};
					};
				};
				case 8: {
					var ` = value[0];
					var `1 = value[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(value);
							};
						} else {
							var baseType = (_hx_tmp = `.get());
							var params = `1;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
			};
		})]};
		var e = cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16495, 16500)}, {expr : haxe.macro.ExprDef.ECast({expr : haxe.macro.ExprDef.ENew(cls, []), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16508, 16518)}, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16503, 16518)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16495, 16518)}, {expr : haxe.macro.ExprDef.EFor({expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpIn, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("field")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16528, 16533)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("o")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16537, 16538)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16528, 16538)}, {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16546, 16551)}, "set"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16546, 16555)}, [keyMacro, valueMacro]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16546, 16579)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16540, 16585)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16523, 16585)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16490, 16589)};
		json2object.reader.DataBuilder.changeFunction("loadJsonObject", parser, e);
		json2object.reader.DataBuilder.changeFunction("loadJsonNull", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16686, 16691)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16694, 16698)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16686, 16698)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 16685, 16700)});
	}

	@:has_untyped
	public static function makeEnumParser(parser:haxe.macro.TypeDefinition, type:haxe.macro.Type, baseParser:haxe.macro.BaseType) {
		var objMacro;
		var strMacro;
		var typeName;
		@:ast(switch (type) {
	case TEnum(_.get() => t, p):
		typeName = t.name;
		var internStringCases = new Array<Case>();
		var internObjectCases = new Array<Case>();
		for (n  in  t.names) {
			var l = t.module.split(".");
			l.push(t.name);
			l.push(n);
			var subExpr = { expr : EConst(CIdent(l.shift())), pos : Context.currentPos() };
			while (l.length > 0) {
				subExpr = { expr : EField(subExpr, l.shift()), pos : Context.currentPos() };
			};
			switch (t.constructs.get(n).type) {
				case TEnum(_, _):
					subExpr = ({ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17411, 17416) }, { expr : ECast(subExpr, null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17419, 17434) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17411, 17434) } : haxe.macro.Expr);
					internStringCases.push({ expr : subExpr, guard : null, values : [(haxe.macro.Context.makeExpr(@$v n, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17512, 17515)) : haxe.macro.Expr)] });
					var objSubExpr = ({ expr : EIf({ expr : EBinop(OpEq, { expr : EField({ expr : EConst(CIdent("s0")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17555, 17557) }, "length"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17555, 17564) }, { expr : EConst(CInt("0")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17568, 17569) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17555, 17569) }, { expr : EBlock([subExpr]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17571, 17599) }, { expr : EBlock([{ expr : ECall({ expr : EField({ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17615, 17621) }, "push"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17615, 17626) }, [{ expr : ECall({ expr : EConst(CIdent("InvalidEnumConstructor")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17627, 17649) }, [{ expr : EField({ expr : EConst(CIdent("field")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17650, 17655) }, "name"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17650, 17660) }, haxe.macro.Context.makeExpr(@$v t.name, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17664, 17672)), { expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17674, 17677) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17627, 17678) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17615, 17679) }, { expr : ECall({ expr : EConst(CIdent("parsingThrow")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17689, 17701) }, []), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17689, 17703) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17605, 17713) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17551, 17713) } : haxe.macro.Expr);
					internObjectCases.push({ expr : objSubExpr, guard : null, values : [(haxe.macro.Context.makeExpr(@$v n, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17794, 17797)) : haxe.macro.Expr)] });				
				case TFun(args, _):
					var names = [for (a  in  args) a.name];
					var enumParams:Array<Expr> = [];
					var blockExpr = [({ expr : EVars([{ name : "_names", type : null, expr : haxe.macro.Context.makeExpr(@$v names, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17961, 17968)), isFinal : false, meta : [] }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17946, 17949) } : haxe.macro.Expr)];
					blockExpr.push(({ expr : EIf({ expr : EBinop(OpBoolOr, { expr : EBinop(OpNotEq, { expr : EField({ expr : EConst(CIdent("s0")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18013, 18015) }, "length"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18013, 18022) }, haxe.macro.Context.makeExpr(@$v args.length, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18028, 18041))), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18013, 18041) }, { expr : EBinop(OpNotEq, { expr : EField({ expr : ECall({ expr : EField({ expr : EConst(CIdent("s0")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18045, 18047) }, "filter"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18045, 18054) }, [{ expr : EFunction(FAnonymous, { args : [{ name : "_v", opt : false, type : null }], ret : null, expr : { expr : EBlock([{ expr : EReturn({ expr : EBinop(OpNotEq, { expr : ECall({ expr : EField({ expr : EConst(CIdent("_names")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18078, 18084) }, "indexOf"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18078, 18092) }, [{ expr : EField({ expr : EConst(CIdent("_v")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18093, 18095) }, "name"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18093, 18100) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18078, 18101) }, { expr : EConst(CInt("-1")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18105, 18107) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18078, 18107) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18071, 18107) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18069, 18109) }, params : [] }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18055, 18109) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18045, 18110) }, "length"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18045, 18117) }, { expr : EField({ expr : EConst(CIdent("s0")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18121, 18123) }, "length"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18121, 18130) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18045, 18130) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18013, 18130) }, { expr : EBlock([{ expr : ECall({ expr : EField({ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18143, 18149) }, "push"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18143, 18154) }, [{ expr : ECall({ expr : EConst(CIdent("InvalidEnumConstructor")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18155, 18177) }, [{ expr : EField({ expr : EConst(CIdent("field")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18178, 18183) }, "name"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18178, 18188) }, haxe.macro.Context.makeExpr(@$v t.name, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18192, 18200)), { expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18202, 18205) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18155, 18206) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18143, 18207) }, { expr : ECall({ expr : EConst(CIdent("parsingThrow")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18218, 18230) }, []), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18218, 18232) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18132, 18243) }, null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18009, 18243) } : haxe.macro.Expr));
					var argCount = 0;
					for (a  in  args) {
						var arg_name = "__${a.name}";
						var at = a.t.applyTypeParameters(t.params, p);
						enumParams.push(({ expr : EConst(CIdent(arg_name)), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18429, 18439) } : haxe.macro.Expr));
						blockExpr.push({ expr : EVars([{ name : arg_name, type : at.toComplexType(), expr : null }]), pos : Context.currentPos() });
						var a_cls = { name : baseParser.name, pack : baseParser.pack, params : [TPType(at.toComplexType())] };
						var v = ({ expr : EBinop(OpAssign, { expr : EConst(CIdent(arg_name)), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18691, 18701) }, { expr : ECall({ expr : EField({ expr : ENew(a_cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18715, 18721) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18723, 18729) }, { expr : EConst(CIdent("THROW")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18731, 18736) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18704, 18737) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18704, 18746) }, [{ expr : EField({ expr : EArray({ expr : ECall({ expr : EField({ expr : EConst(CIdent("s0")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18747, 18749) }, "filter"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18747, 18756) }, [{ expr : EFunction(FAnonymous, { args : [{ name : "o", opt : false, type : null }], ret : null, expr : { expr : EBlock([{ expr : EReturn({ expr : EBinop(OpEq, { expr : EField({ expr : EConst(CIdent("o")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18779, 18780) }, "name"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18779, 18785) }, { expr : EArray({ expr : EConst(CIdent("_names")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18789, 18795) }, haxe.macro.Context.makeExpr(@$v argCount, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18798, 18808))), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18789, 18809) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18779, 18809) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18772, 18809) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18770, 18811) }, params : [] }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18757, 18811) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18747, 18812) }, { expr : EConst(CInt("0")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18813, 18814) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18747, 18815) }, "value"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18747, 18821) }, { expr : EBinop(OpAdd, { expr : EBinop(OpAdd, { expr : EField({ expr : EConst(CIdent("field")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18823, 18828) }, "name"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18823, 18833) }, { expr : EConst(CString(".", DoubleQuotes)), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18834, 18837) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18823, 18837) }, haxe.macro.Context.makeExpr(@$v a.name, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18840, 18848))), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18823, 18848) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18704, 18849) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18691, 18849) } : haxe.macro.Expr);
						blockExpr.push(v);
						argCount++;
					};
					subExpr = (enumParams.length > 0) ? { expr : ECall(subExpr, enumParams), pos : Context.currentPos() } : subExpr;
					blockExpr.push(({ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19066, 19071) }, { expr : ECast(subExpr, null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19074, 19089) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19066, 19089) } : haxe.macro.Expr));
					var lil_expr:Expr = { expr : EBlock(blockExpr), pos : Context.currentPos() };
					internObjectCases.push({ expr : lil_expr, guard : null, values : [{ expr : EConst(CString(n)), pos : Context.currentPos() }] });				
				default:
			};
		};
		var default_e = ({ expr : EBlock([{ expr : ECall({ expr : EField({ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19367, 19373) }, "push"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19367, 19378) }, [{ expr : ECall({ expr : EConst(CIdent("IncorrectEnumValue")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19379, 19397) }, [{ expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19398, 19406) }, haxe.macro.Context.makeExpr(@$v t.name, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19410, 19418)), { expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19420, 19423) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19379, 19424) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19367, 19425) }, { expr : ECall({ expr : EConst(CIdent("parsingThrow")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19433, 19445) }, []), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19433, 19447) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19359, 19455) } : haxe.macro.Expr);
		objMacro = { expr : ESwitch(({ expr : EField({ expr : EConst(CIdent("field")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19493, 19498) }, "name"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19493, 19503) } : haxe.macro.Expr), internObjectCases, default_e), pos : Context.currentPos() };
		objMacro = ({ expr : EIf({ expr : EBinop(OpNotEq, { expr : EField({ expr : EConst(CIdent("o")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19590, 19591) }, "length"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19590, 19598) }, { expr : EConst(CInt("1")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19602, 19603) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19590, 19603) }, { expr : EBlock([{ expr : ECall({ expr : EField({ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19612, 19618) }, "push"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19612, 19623) }, [{ expr : ECall({ expr : EConst(CIdent("IncorrectType")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19624, 19637) }, [{ expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19638, 19646) }, haxe.macro.Context.makeExpr(@$v typeName, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19650, 19660)), { expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19662, 19665) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19624, 19666) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19612, 19667) }, { expr : ECall({ expr : EConst(CIdent("parsingThrow")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19674, 19686) }, []), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19674, 19688) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19605, 19695) }, { expr : EBlock([{ expr : EVars([{ name : "field", type : null, expr : { expr : EArray({ expr : EConst(CIdent("o")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19720, 19721) }, { expr : EConst(CInt("0")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19722, 19723) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19720, 19724) }, isFinal : false, meta : [] }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19708, 19725) }, { expr : ESwitch({ expr : EParenthesis({ expr : EField({ expr : EField({ expr : EArray({ expr : EConst(CIdent("o")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19739, 19740) }, { expr : EConst(CInt("0")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19741, 19742) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19739, 19743) }, "value"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19739, 19749) }, "value"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19739, 19755) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19738, 19756) }, [{ values : [{ expr : ECall({ expr : EConst(CIdent("JObject")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19770, 19777) }, [{ expr : EConst(CIdent("s0")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19778, 19780) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19770, 19781) }], guard : null, expr : { expr : EBlock([objMacro]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19765, 19801) } }], { expr : EBlock([{ expr : ECall({ expr : EField({ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19825, 19831) }, "push"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19825, 19836) }, [{ expr : ECall({ expr : EConst(CIdent("IncorrectType")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19837, 19850) }, [{ expr : EField({ expr : EConst(CIdent("field")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19851, 19856) }, "name"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19851, 19861) }, haxe.macro.Context.makeExpr(@$v typeName, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19865, 19875)), { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19877, 19883) }, "convertPosition"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19877, 19899) }, [{ expr : EField({ expr : EField({ expr : EConst(CIdent("field")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19900, 19905) }, "value"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19900, 19911) }, "pos"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19900, 19915) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19877, 19916) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19837, 19917) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19825, 19918) }, { expr : ECall({ expr : EConst(CIdent("parsingThrow")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19927, 19939) }, []), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19927, 19941) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19809, 19941) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19731, 19949) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19701, 19955) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19586, 19955) } : haxe.macro.Expr);
		strMacro = { expr : ESwitch(({ expr : EConst(CIdent("s")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19994, 19999) } : haxe.macro.Expr), internStringCases, default_e), pos : Context.currentPos() };	
	default:
}) if (enumIndex type == 1) {
			var ` = type[0];
			var `1 = type[1];
			{
				var _hx_tmp;
				{
					var t = (_hx_tmp = `.get());
					var p = `1;
					{
						typeName = t.name;
						var internStringCases = new Array();
						var internObjectCases = new Array();
						{
							var ` = 0;
							var `1 = t.names;
							while (` < `1.length) {
								var n = `1[`];
								++ `;
								var l = t.module.split(".");
								l.push(t.name);
								l.push(n);
								var subExpr = {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent(l.shift())), pos : haxe.macro.Context.currentPos()};
								while (l.length > 0) {
									subExpr = {expr : haxe.macro.ExprDef.EField(subExpr, l.shift()), pos : haxe.macro.Context.currentPos()};
								};
								@:ast(switch (t.constructs.get(n).type) {
	case TEnum(_, _):
		subExpr = ({ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17411, 17416) }, { expr : ECast(subExpr, null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17419, 17434) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17411, 17434) } : haxe.macro.Expr);
		internStringCases.push({ expr : subExpr, guard : null, values : [(haxe.macro.Context.makeExpr(@$v n, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17512, 17515)) : haxe.macro.Expr)] });
		var objSubExpr = ({ expr : EIf({ expr : EBinop(OpEq, { expr : EField({ expr : EConst(CIdent("s0")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17555, 17557) }, "length"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17555, 17564) }, { expr : EConst(CInt("0")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17568, 17569) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17555, 17569) }, { expr : EBlock([subExpr]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17571, 17599) }, { expr : EBlock([{ expr : ECall({ expr : EField({ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17615, 17621) }, "push"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17615, 17626) }, [{ expr : ECall({ expr : EConst(CIdent("InvalidEnumConstructor")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17627, 17649) }, [{ expr : EField({ expr : EConst(CIdent("field")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17650, 17655) }, "name"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17650, 17660) }, haxe.macro.Context.makeExpr(@$v t.name, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17664, 17672)), { expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17674, 17677) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17627, 17678) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17615, 17679) }, { expr : ECall({ expr : EConst(CIdent("parsingThrow")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17689, 17701) }, []), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17689, 17703) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17605, 17713) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17551, 17713) } : haxe.macro.Expr);
		internObjectCases.push({ expr : objSubExpr, guard : null, values : [(haxe.macro.Context.makeExpr(@$v n, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17794, 17797)) : haxe.macro.Expr)] });	
	case TFun(args, _):
		var names = [for (a  in  args) a.name];
		var enumParams:Array<Expr> = [];
		var blockExpr = [({ expr : EVars([{ name : "_names", type : null, expr : haxe.macro.Context.makeExpr(@$v names, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17961, 17968)), isFinal : false, meta : [] }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17946, 17949) } : haxe.macro.Expr)];
		blockExpr.push(({ expr : EIf({ expr : EBinop(OpBoolOr, { expr : EBinop(OpNotEq, { expr : EField({ expr : EConst(CIdent("s0")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18013, 18015) }, "length"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18013, 18022) }, haxe.macro.Context.makeExpr(@$v args.length, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18028, 18041))), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18013, 18041) }, { expr : EBinop(OpNotEq, { expr : EField({ expr : ECall({ expr : EField({ expr : EConst(CIdent("s0")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18045, 18047) }, "filter"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18045, 18054) }, [{ expr : EFunction(FAnonymous, { args : [{ name : "_v", opt : false, type : null }], ret : null, expr : { expr : EBlock([{ expr : EReturn({ expr : EBinop(OpNotEq, { expr : ECall({ expr : EField({ expr : EConst(CIdent("_names")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18078, 18084) }, "indexOf"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18078, 18092) }, [{ expr : EField({ expr : EConst(CIdent("_v")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18093, 18095) }, "name"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18093, 18100) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18078, 18101) }, { expr : EConst(CInt("-1")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18105, 18107) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18078, 18107) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18071, 18107) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18069, 18109) }, params : [] }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18055, 18109) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18045, 18110) }, "length"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18045, 18117) }, { expr : EField({ expr : EConst(CIdent("s0")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18121, 18123) }, "length"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18121, 18130) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18045, 18130) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18013, 18130) }, { expr : EBlock([{ expr : ECall({ expr : EField({ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18143, 18149) }, "push"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18143, 18154) }, [{ expr : ECall({ expr : EConst(CIdent("InvalidEnumConstructor")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18155, 18177) }, [{ expr : EField({ expr : EConst(CIdent("field")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18178, 18183) }, "name"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18178, 18188) }, haxe.macro.Context.makeExpr(@$v t.name, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18192, 18200)), { expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18202, 18205) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18155, 18206) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18143, 18207) }, { expr : ECall({ expr : EConst(CIdent("parsingThrow")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18218, 18230) }, []), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18218, 18232) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18132, 18243) }, null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18009, 18243) } : haxe.macro.Expr));
		var argCount = 0;
		for (a  in  args) {
			var arg_name = "__${a.name}";
			var at = a.t.applyTypeParameters(t.params, p);
			enumParams.push(({ expr : EConst(CIdent(arg_name)), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18429, 18439) } : haxe.macro.Expr));
			blockExpr.push({ expr : EVars([{ name : arg_name, type : at.toComplexType(), expr : null }]), pos : Context.currentPos() });
			var a_cls = { name : baseParser.name, pack : baseParser.pack, params : [TPType(at.toComplexType())] };
			var v = ({ expr : EBinop(OpAssign, { expr : EConst(CIdent(arg_name)), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18691, 18701) }, { expr : ECall({ expr : EField({ expr : ENew(a_cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18715, 18721) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18723, 18729) }, { expr : EConst(CIdent("THROW")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18731, 18736) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18704, 18737) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18704, 18746) }, [{ expr : EField({ expr : EArray({ expr : ECall({ expr : EField({ expr : EConst(CIdent("s0")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18747, 18749) }, "filter"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18747, 18756) }, [{ expr : EFunction(FAnonymous, { args : [{ name : "o", opt : false, type : null }], ret : null, expr : { expr : EBlock([{ expr : EReturn({ expr : EBinop(OpEq, { expr : EField({ expr : EConst(CIdent("o")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18779, 18780) }, "name"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18779, 18785) }, { expr : EArray({ expr : EConst(CIdent("_names")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18789, 18795) }, haxe.macro.Context.makeExpr(@$v argCount, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18798, 18808))), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18789, 18809) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18779, 18809) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18772, 18809) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18770, 18811) }, params : [] }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18757, 18811) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18747, 18812) }, { expr : EConst(CInt("0")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18813, 18814) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18747, 18815) }, "value"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18747, 18821) }, { expr : EBinop(OpAdd, { expr : EBinop(OpAdd, { expr : EField({ expr : EConst(CIdent("field")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18823, 18828) }, "name"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18823, 18833) }, { expr : EConst(CString(".", DoubleQuotes)), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18834, 18837) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18823, 18837) }, haxe.macro.Context.makeExpr(@$v a.name, untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18840, 18848))), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18823, 18848) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18704, 18849) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18691, 18849) } : haxe.macro.Expr);
			blockExpr.push(v);
			argCount++;
		};
		subExpr = (enumParams.length > 0) ? { expr : ECall(subExpr, enumParams), pos : Context.currentPos() } : subExpr;
		blockExpr.push(({ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19066, 19071) }, { expr : ECast(subExpr, null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19074, 19089) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19066, 19089) } : haxe.macro.Expr));
		var lil_expr:Expr = { expr : EBlock(blockExpr), pos : Context.currentPos() };
		internObjectCases.push({ expr : lil_expr, guard : null, values : [{ expr : EConst(CString(n)), pos : Context.currentPos() }] });	
	default:
}) {
									var ` = {
										var this = t.constructs;
										cast this.get(n);
									}.type;
									switch (enumIndex `) {
										case 1: {
											var `1 = `[0];
											var `2 = `[1];
											{
												subExpr = cast {expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17411, 17416)}, {expr : haxe.macro.ExprDef.ECast(subExpr, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17419, 17434)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17411, 17434)};
												internStringCases.push({expr : subExpr, guard : null, values : [cast haxe.macro.Context.makeExpr(n, $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17512, 17515))]});
												var objSubExpr = cast {expr : haxe.macro.ExprDef.EIf({expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpEq, {expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("s0")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17555, 17557)}, "length"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17555, 17564)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CInt("0")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17568, 17569)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17555, 17569)}, {expr : haxe.macro.ExprDef.EBlock([subExpr]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17571, 17599)}, {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17615, 17621)}, "push"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17615, 17626)}, [{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("InvalidEnumConstructor")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17627, 17649)}, [{expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("field")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17650, 17655)}, "name"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17650, 17660)}, haxe.macro.Context.makeExpr(t.name, $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17664, 17672)), {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17674, 17677)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17627, 17678)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17615, 17679)}, {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("parsingThrow")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17689, 17701)}, []), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17689, 17703)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17605, 17713)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17551, 17713)};
												internObjectCases.push({expr : objSubExpr, guard : null, values : [cast haxe.macro.Context.makeExpr(n, $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17794, 17797))]});
											};
										};
										case 4: {
											var `3 = `[0];
											var `4 = `[1];
											{
												var args = `3;
												{
													var names = {
														var ` = [];
														{
															var `1 = 0;
															while (`1 < args.length) {
																var a = args[`1];
																++ `1;
																`.push(a.name);
															};
														};
														`;
													};
													var enumParams = [];
													var blockExpr = [cast {expr : haxe.macro.ExprDef.EVars([{name : "_names", type : null, expr : haxe.macro.Context.makeExpr(names, $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17961, 17968)), isFinal : cast false, meta : []}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 17946, 17949)}];
													blockExpr.push(cast {expr : haxe.macro.ExprDef.EIf({expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpBoolOr, {expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpNotEq, {expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("s0")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18013, 18015)}, "length"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18013, 18022)}, haxe.macro.Context.makeExpr(args.length, $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18028, 18041))), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18013, 18041)}, {expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpNotEq, {expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("s0")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18045, 18047)}, "filter"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18045, 18054)}, [{expr : haxe.macro.ExprDef.EFunction(haxe.macro.FunctionKind.FAnonymous, {args : [{name : "_v", opt : cast false, type : null}], ret : null, expr : {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EReturn({expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpNotEq, {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("_names")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18078, 18084)}, "indexOf"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18078, 18092)}, [{expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("_v")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18093, 18095)}, "name"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18093, 18100)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18078, 18101)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CInt("-1")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18105, 18107)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18078, 18107)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18071, 18107)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18069, 18109)}, params : []}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18055, 18109)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18045, 18110)}, "length"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18045, 18117)}, {expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("s0")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18121, 18123)}, "length"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18121, 18130)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18045, 18130)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18013, 18130)}, {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18143, 18149)}, "push"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18143, 18154)}, [{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("InvalidEnumConstructor")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18155, 18177)}, [{expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("field")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18178, 18183)}, "name"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18178, 18188)}, haxe.macro.Context.makeExpr(t.name, $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18192, 18200)), {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18202, 18205)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18155, 18206)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18143, 18207)}, {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("parsingThrow")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18218, 18230)}, []), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18218, 18232)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18132, 18243)}, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18009, 18243)});
													var argCount = 0;
													{
														var `2 = 0;
														while (`2 < args.length) {
															var a = args[`2];
															++ `2;
															var arg_name = "__" + a.name;
															var at = {
																var type = a.t;
																var typeParameters = t.params;
																haxe.macro.TypeTools.applyTypeParameters(type, typeParameters, p);
															};
															enumParams.push(cast {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent(arg_name)), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18429, 18439)});
															blockExpr.push({expr : haxe.macro.ExprDef.EVars([{name : arg_name, type : {
																{};
																@:ast(switch (type) {
	case null:
		null;	
	case TEnum(_.get().isPrivate => true, _):
		direct();	
	case TInst(_.get().isPrivate => true, _):
		direct();	
	case TType(_.get().isPrivate => true, _):
		direct();	
	case TAbstract(_.get().isPrivate => true, _):
		direct();	
	case TMono(_):
		direct();	
	case TEnum(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TInst(_.get() => classType, params):
		switch (classType.kind) {
			case KTypeParameter(_):
				var ct = asComplexType(classType.name);
				switch toType(ct) {
					case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
						ct;					
					default:
						direct();					
				};			
			default:
				TPath(toTypePath(classType, params));			
		};	
	case TType(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TFun(args, ret):
		TFunction([for (a  in  args) a.opt ? nullable(toComplexType(a.t)) : toComplexType(a.t)], toComplexType(ret));	
	case TAnonymous(_.get() => { fields : fields }):
		TAnonymous([for (cf  in  fields) toField(cf)]);	
	case TDynamic(t):
		if (t == null) {
			(TPath({ pack : [], name : "Dynamic", params : [] }) : haxe.macro.Expr.ComplexType);
		} else {
			var ct = toComplexType(t);
			(TPath({ pack : [], name : "Dynamic", params : [TPType(ct)] }) : haxe.macro.Expr.ComplexType);
		};	
	case TLazy(f):
		toComplexType(f());	
	case TAbstract(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	default:
		throw "Invalid type";	
}) if (at == null) {
																	null;
																} else switch (@:exhaustive enumIndex at) {
																	case 0: {
																		var `9 = at[0];
																		{
																			haxe.macro.TypeTools.toComplexType(at);
																		};
																	};
																	case 1: {
																		var `4 = at[0];
																		var `5 = at[1];
																		{
																			var _hx_tmp;
																			var _hx_tmp;
																			if ((_hx_tmp = `4.get().isPrivate) == true) {
																				{
																					haxe.macro.TypeTools.toComplexType(at);
																				};
																			} else {
																				var baseType = (_hx_tmp = `4.get());
																				var params = `5;
																				{
																					haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																				};
																			};
																		};
																	};
																	case 2: {
																		var `14 = at[0];
																		var `15 = at[1];
																		{
																			var _hx_tmp;
																			var _hx_tmp;
																			if ((_hx_tmp = `14.get().isPrivate) == true) {
																				{
																					haxe.macro.TypeTools.toComplexType(at);
																				};
																			} else {
																				var classType = (_hx_tmp = `14.get());
																				var params = `15;
																				{
																					@:ast(switch (classType.kind) {
	case KTypeParameter(_):
		var ct = asComplexType(classType.name);
		switch toType(ct) {
			case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
				ct;			
			default:
				direct();			
		};	
	default:
		TPath(toTypePath(classType, params));	
}) {
																						var ` = classType.kind;
																						if (enumIndex ` == 1) {
																							var `1 = `[0];
																							{
																								var ct = {
																									var s = classType.name;
																									var params = null;
																									haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.asTypePath(s, params));
																								};
																								@:ast(switch toType(ct) {
	case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
		ct;	
	default:
		direct();	
}) {
																									var ` = json2object.utils.TypeTools.toType(ct, null);
																									if (enumIndex ` == 0) {
																										var `1 = `[0];
																										if (enumIndex `1 == 2) {
																											var `2 = `1[0];
																											var `3 = `1[1];
																											{
																												var _hx_tmp;
																												{
																													var cl = (_hx_tmp = `2.get());
																													if ({
																														var ` = cl.kind;
																														if (enumIndex ` == 1) {
																															var `1 = `[0];
																															true;
																														} else false;
																													} && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")) {
																														ct;
																													} else {
																														haxe.macro.TypeTools.toComplexType(at);
																													};
																												};
																											};
																										} else {
																											haxe.macro.TypeTools.toComplexType(at);
																										};
																									} else {
																										haxe.macro.TypeTools.toComplexType(at);
																									};
																								};
																							};
																						} else {
																							haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(classType, params));
																						};
																					};
																				};
																			};
																		};
																	};
																	case 3: {
																		var `12 = at[0];
																		var `13 = at[1];
																		{
																			var _hx_tmp;
																			var _hx_tmp;
																			if ((_hx_tmp = `12.get().isPrivate) == true) {
																				{
																					haxe.macro.TypeTools.toComplexType(at);
																				};
																			} else {
																				var baseType = (_hx_tmp = `12.get());
																				var params = `13;
																				{
																					haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																				};
																			};
																		};
																	};
																	case 4: {
																		var `10 = at[0];
																		var `11 = at[1];
																		{
																			var args = `10;
																			var ret = `11;
																			{
																				haxe.macro.ComplexType.TFunction({
																					var ` = [];
																					{
																						var `1 = 0;
																						while (`1 < args.length) {
																							var a = args[`1];
																							++ `1;
																							`.push(if (a.opt) {
																								json2object.utils.TypeTools.nullable(json2object.utils.TypeTools.toComplexType(a.t));
																							} else {
																								json2object.utils.TypeTools.toComplexType(a.t);
																							});
																						};
																					};
																					`;
																				}, json2object.utils.TypeTools.toComplexType(ret));
																			};
																		};
																	};
																	case 5: {
																		var `6 = at[0];
																		{
																			var _hx_tmp;
																			{
																				var `7 = (_hx_tmp = `6.get()).fields;
																				var `8 = _hx_tmp.status;
																				{
																					var fields = `7;
																					{
																						haxe.macro.ComplexType.TAnonymous({
																							var ` = [];
																							{
																								var `1 = 0;
																								while (`1 < fields.length) {
																									var cf = fields[`1];
																									++ `1;
																									`.push(json2object.utils.TypeTools.toField(cf));
																								};
																							};
																							`;
																						});
																					};
																				};
																			};
																		};
																	};
																	case 6: {
																		var `2 = at[0];
																		{
																			var t = `2;
																			{
																				if (t == null) {
																					cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : []});
																				} else {
																					var ct = json2object.utils.TypeTools.toComplexType(t);
																					cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(ct)]});
																				};
																			};
																		};
																	};
																	case 7: {
																		var `3 = at[0];
																		{
																			var f = `3;
																			{
																				json2object.utils.TypeTools.toComplexType(f());
																			};
																		};
																	};
																	case 8: {
																		var ` = at[0];
																		var `1 = at[1];
																		{
																			var _hx_tmp;
																			var _hx_tmp;
																			if ((_hx_tmp = `.get().isPrivate) == true) {
																				{
																					haxe.macro.TypeTools.toComplexType(at);
																				};
																			} else {
																				var baseType = (_hx_tmp = `.get());
																				var params = `1;
																				{
																					haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																				};
																			};
																		};
																	};
																};
															}, expr : null}]), pos : haxe.macro.Context.currentPos()});
															var a_cls = {name : baseParser.name, pack : baseParser.pack, params : [haxe.macro.TypeParam.TPType({
																{};
																@:ast(switch (type) {
	case null:
		null;	
	case TEnum(_.get().isPrivate => true, _):
		direct();	
	case TInst(_.get().isPrivate => true, _):
		direct();	
	case TType(_.get().isPrivate => true, _):
		direct();	
	case TAbstract(_.get().isPrivate => true, _):
		direct();	
	case TMono(_):
		direct();	
	case TEnum(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TInst(_.get() => classType, params):
		switch (classType.kind) {
			case KTypeParameter(_):
				var ct = asComplexType(classType.name);
				switch toType(ct) {
					case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
						ct;					
					default:
						direct();					
				};			
			default:
				TPath(toTypePath(classType, params));			
		};	
	case TType(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TFun(args, ret):
		TFunction([for (a  in  args) a.opt ? nullable(toComplexType(a.t)) : toComplexType(a.t)], toComplexType(ret));	
	case TAnonymous(_.get() => { fields : fields }):
		TAnonymous([for (cf  in  fields) toField(cf)]);	
	case TDynamic(t):
		if (t == null) {
			(TPath({ pack : [], name : "Dynamic", params : [] }) : haxe.macro.Expr.ComplexType);
		} else {
			var ct = toComplexType(t);
			(TPath({ pack : [], name : "Dynamic", params : [TPType(ct)] }) : haxe.macro.Expr.ComplexType);
		};	
	case TLazy(f):
		toComplexType(f());	
	case TAbstract(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	default:
		throw "Invalid type";	
}) if (at == null) {
																	null;
																} else switch (@:exhaustive enumIndex at) {
																	case 0: {
																		var `9 = at[0];
																		{
																			haxe.macro.TypeTools.toComplexType(at);
																		};
																	};
																	case 1: {
																		var `4 = at[0];
																		var `5 = at[1];
																		{
																			var _hx_tmp;
																			var _hx_tmp;
																			if ((_hx_tmp = `4.get().isPrivate) == true) {
																				{
																					haxe.macro.TypeTools.toComplexType(at);
																				};
																			} else {
																				var baseType = (_hx_tmp = `4.get());
																				var params = `5;
																				{
																					haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																				};
																			};
																		};
																	};
																	case 2: {
																		var `14 = at[0];
																		var `15 = at[1];
																		{
																			var _hx_tmp;
																			var _hx_tmp;
																			if ((_hx_tmp = `14.get().isPrivate) == true) {
																				{
																					haxe.macro.TypeTools.toComplexType(at);
																				};
																			} else {
																				var classType = (_hx_tmp = `14.get());
																				var params = `15;
																				{
																					@:ast(switch (classType.kind) {
	case KTypeParameter(_):
		var ct = asComplexType(classType.name);
		switch toType(ct) {
			case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
				ct;			
			default:
				direct();			
		};	
	default:
		TPath(toTypePath(classType, params));	
}) {
																						var ` = classType.kind;
																						if (enumIndex ` == 1) {
																							var `1 = `[0];
																							{
																								var ct = {
																									var s = classType.name;
																									var params = null;
																									haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.asTypePath(s, params));
																								};
																								@:ast(switch toType(ct) {
	case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
		ct;	
	default:
		direct();	
}) {
																									var ` = json2object.utils.TypeTools.toType(ct, null);
																									if (enumIndex ` == 0) {
																										var `1 = `[0];
																										if (enumIndex `1 == 2) {
																											var `2 = `1[0];
																											var `3 = `1[1];
																											{
																												var _hx_tmp;
																												{
																													var cl = (_hx_tmp = `2.get());
																													if ({
																														var ` = cl.kind;
																														if (enumIndex ` == 1) {
																															var `1 = `[0];
																															true;
																														} else false;
																													} && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")) {
																														ct;
																													} else {
																														haxe.macro.TypeTools.toComplexType(at);
																													};
																												};
																											};
																										} else {
																											haxe.macro.TypeTools.toComplexType(at);
																										};
																									} else {
																										haxe.macro.TypeTools.toComplexType(at);
																									};
																								};
																							};
																						} else {
																							haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(classType, params));
																						};
																					};
																				};
																			};
																		};
																	};
																	case 3: {
																		var `12 = at[0];
																		var `13 = at[1];
																		{
																			var _hx_tmp;
																			var _hx_tmp;
																			if ((_hx_tmp = `12.get().isPrivate) == true) {
																				{
																					haxe.macro.TypeTools.toComplexType(at);
																				};
																			} else {
																				var baseType = (_hx_tmp = `12.get());
																				var params = `13;
																				{
																					haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																				};
																			};
																		};
																	};
																	case 4: {
																		var `10 = at[0];
																		var `11 = at[1];
																		{
																			var args = `10;
																			var ret = `11;
																			{
																				haxe.macro.ComplexType.TFunction({
																					var ` = [];
																					{
																						var `1 = 0;
																						while (`1 < args.length) {
																							var a = args[`1];
																							++ `1;
																							`.push(if (a.opt) {
																								json2object.utils.TypeTools.nullable(json2object.utils.TypeTools.toComplexType(a.t));
																							} else {
																								json2object.utils.TypeTools.toComplexType(a.t);
																							});
																						};
																					};
																					`;
																				}, json2object.utils.TypeTools.toComplexType(ret));
																			};
																		};
																	};
																	case 5: {
																		var `6 = at[0];
																		{
																			var _hx_tmp;
																			{
																				var `7 = (_hx_tmp = `6.get()).fields;
																				var `8 = _hx_tmp.status;
																				{
																					var fields = `7;
																					{
																						haxe.macro.ComplexType.TAnonymous({
																							var ` = [];
																							{
																								var `1 = 0;
																								while (`1 < fields.length) {
																									var cf = fields[`1];
																									++ `1;
																									`.push(json2object.utils.TypeTools.toField(cf));
																								};
																							};
																							`;
																						});
																					};
																				};
																			};
																		};
																	};
																	case 6: {
																		var `2 = at[0];
																		{
																			var t = `2;
																			{
																				if (t == null) {
																					cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : []});
																				} else {
																					var ct = json2object.utils.TypeTools.toComplexType(t);
																					cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(ct)]});
																				};
																			};
																		};
																	};
																	case 7: {
																		var `3 = at[0];
																		{
																			var f = `3;
																			{
																				json2object.utils.TypeTools.toComplexType(f());
																			};
																		};
																	};
																	case 8: {
																		var ` = at[0];
																		var `1 = at[1];
																		{
																			var _hx_tmp;
																			var _hx_tmp;
																			if ((_hx_tmp = `.get().isPrivate) == true) {
																				{
																					haxe.macro.TypeTools.toComplexType(at);
																				};
																			} else {
																				var baseType = (_hx_tmp = `.get());
																				var params = `1;
																				{
																					haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																				};
																			};
																		};
																	};
																};
															})]};
															var v = cast {expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent(arg_name)), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18691, 18701)}, {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.ENew(a_cls, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18715, 18721)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18723, 18729)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("THROW")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18731, 18736)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18704, 18737)}, "loadJson"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18704, 18746)}, [{expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EArray({expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("s0")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18747, 18749)}, "filter"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18747, 18756)}, [{expr : haxe.macro.ExprDef.EFunction(haxe.macro.FunctionKind.FAnonymous, {args : [{name : "o", opt : cast false, type : null}], ret : null, expr : {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EReturn({expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpEq, {expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("o")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18779, 18780)}, "name"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18779, 18785)}, {expr : haxe.macro.ExprDef.EArray({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("_names")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18789, 18795)}, haxe.macro.Context.makeExpr(argCount, $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18798, 18808))), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18789, 18809)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18779, 18809)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18772, 18809)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18770, 18811)}, params : []}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18757, 18811)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18747, 18812)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CInt("0")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18813, 18814)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18747, 18815)}, "value"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18747, 18821)}, {expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAdd, {expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAdd, {expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("field")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18823, 18828)}, "name"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18823, 18833)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CString(".", haxe.macro.StringLiteralKind.DoubleQuotes)), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18834, 18837)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18823, 18837)}, haxe.macro.Context.makeExpr(a.name, $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18840, 18848))), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18823, 18848)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18704, 18849)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 18691, 18849)};
															blockExpr.push(v);
															argCount ++;
														};
													};
													subExpr = if ((enumParams.length > 0)) {
														{expr : haxe.macro.ExprDef.ECall(subExpr, enumParams), pos : haxe.macro.Context.currentPos()};
													} else {
														subExpr;
													};
													blockExpr.push(cast {expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19066, 19071)}, {expr : haxe.macro.ExprDef.ECast(subExpr, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19074, 19089)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19066, 19089)});
													var lil_expr = {expr : haxe.macro.ExprDef.EBlock(blockExpr), pos : haxe.macro.Context.currentPos()};
													internObjectCases.push({expr : lil_expr, guard : null, values : [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CString(n, null)), pos : haxe.macro.Context.currentPos()}]});
												};
											};
										};
										default: {}
									};
								};
							};
						};
						var default_e = cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19367, 19373)}, "push"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19367, 19378)}, [{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("IncorrectEnumValue")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19379, 19397)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19398, 19406)}, haxe.macro.Context.makeExpr(t.name, $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19410, 19418)), {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19420, 19423)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19379, 19424)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19367, 19425)}, {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("parsingThrow")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19433, 19445)}, []), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19433, 19447)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19359, 19455)};
						objMacro = {expr : haxe.macro.ExprDef.ESwitch(cast {expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("field")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19493, 19498)}, "name"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19493, 19503)}, internObjectCases, default_e), pos : haxe.macro.Context.currentPos()};
						objMacro = cast {expr : haxe.macro.ExprDef.EIf({expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpNotEq, {expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("o")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19590, 19591)}, "length"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19590, 19598)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CInt("1")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19602, 19603)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19590, 19603)}, {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19612, 19618)}, "push"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19612, 19623)}, [{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("IncorrectType")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19624, 19637)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19638, 19646)}, haxe.macro.Context.makeExpr(typeName, $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19650, 19660)), {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19662, 19665)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19624, 19666)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19612, 19667)}, {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("parsingThrow")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19674, 19686)}, []), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19674, 19688)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19605, 19695)}, {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EVars([{name : "field", type : null, expr : {expr : haxe.macro.ExprDef.EArray({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("o")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19720, 19721)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CInt("0")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19722, 19723)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19720, 19724)}, isFinal : cast false, meta : []}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19708, 19725)}, {expr : haxe.macro.ExprDef.ESwitch({expr : haxe.macro.ExprDef.EParenthesis({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EArray({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("o")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19739, 19740)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CInt("0")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19741, 19742)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19739, 19743)}, "value"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19739, 19749)}, "value"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19739, 19755)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19738, 19756)}, [{values : [{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("JObject")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19770, 19777)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("s0")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19778, 19780)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19770, 19781)}], guard : null, expr : {expr : haxe.macro.ExprDef.EBlock([objMacro]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19765, 19801)}}], {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19825, 19831)}, "push"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19825, 19836)}, [{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("IncorrectType")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19837, 19850)}, [{expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("field")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19851, 19856)}, "name"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19851, 19861)}, haxe.macro.Context.makeExpr(typeName, $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19865, 19875)), {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19877, 19883)}, "convertPosition"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19877, 19899)}, [{expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("field")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19900, 19905)}, "value"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19900, 19911)}, "pos"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19900, 19915)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19877, 19916)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19837, 19917)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19825, 19918)}, {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("parsingThrow")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19927, 19939)}, []), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19927, 19941)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19809, 19941)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19731, 19949)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19701, 19955)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19586, 19955)};
						strMacro = {expr : haxe.macro.ExprDef.ESwitch(cast {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("s")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 19994, 19999)}, internStringCases, default_e), pos : haxe.macro.Context.currentPos()};
					};
				};
			};
		} else {};
		json2object.reader.DataBuilder.changeFunction("loadJsonObject", parser, objMacro);
		json2object.reader.DataBuilder.changeFunction("loadJsonString", parser, strMacro);
		json2object.reader.DataBuilder.changeFunction("loadJsonNull", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 20235, 20240)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 20243, 20247)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 20235, 20247)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 20233, 20250)});
	}

	@:has_untyped
	public static function makeAbstractEnumParser(parser:haxe.macro.TypeDefinition, type:haxe.macro.Type, baseParser:haxe.macro.BaseType) {
		var name;
		@:ast(switch (type.followWithAbstracts()) {
	case TInst(_.get() => t, _):
		if (t.module != "String") {
			Context.fatalError("json2object: Unsupported abstract enum type:" + type.toString(), callPosition);
		};
		name = "String";	
	case TAbstract(_.get() => t, _):
		if (t.module != "StdTypes" && (t.name != "Int" && t.name != "Bool" && t.name != "Float")) {
			Context.fatalError("json2object: Unsupported abstract enum type:" + type.toString(), callPosition);
		};
		name = t.name;	
	default:
		Context.fatalError("json2object: Unsupported abstract enum type:" + type.toString(), callPosition);	
}) {
			var ` = {
				var once = false;
				if ((once == null)) once = false;
				haxe.macro.Context.followWithAbstracts(type, once);
			};
			switch (enumIndex `) {
				case 2: {
					var `3 = `[0];
					var `4 = `[1];
					{
						var _hx_tmp;
						{
							var t = (_hx_tmp = `3.get());
							{
								if (t.module != "String") {
									haxe.macro.Context.fatalError("json2object: Unsupported abstract enum type:" + haxe.macro.TypeTools.toString(type), json2object.reader.DataBuilder.callPosition);
								};
								name = "String";
							};
						};
					};
				};
				case 8: {
					var `1 = `[0];
					var `2 = `[1];
					{
						var _hx_tmp;
						{
							var t = (_hx_tmp = `1.get());
							{
								if (t.module != "StdTypes" && (t.name != "Int" && t.name != "Bool" && t.name != "Float")) {
									haxe.macro.Context.fatalError("json2object: Unsupported abstract enum type:" + haxe.macro.TypeTools.toString(type), json2object.reader.DataBuilder.callPosition);
								};
								name = t.name;
							};
						};
					};
				};
				default: {
					haxe.macro.Context.fatalError("json2object: Unsupported abstract enum type:" + haxe.macro.TypeTools.toString(type), json2object.reader.DataBuilder.callPosition);
				}
			};
		};
		var caseValues = new Array();
		var e = cast {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 21041, 21045)};
		@:ast(switch (type) {
	case TAbstract(_.get() => t, p):
		for (field  in  t.impl.get().statics.get()) {
			if (!field.meta.has(":enum") || !field.meta.has(":impl")) {
				continue;
			};
			if (field.expr() == null) {
				continue;
			};
			caseValues.push(switch (field.expr().expr) {
				case TConst(_):
					Context.getTypedExpr(field.expr());				
				case TCast(caste, _):
					switch (caste.expr) {
						case TConst(tc):
							switch (tc) {
								case TNull:
									continue;								
								default:
									Context.getTypedExpr(caste);								
							};						
						default:
							Context.getTypedExpr(caste);						
					};				
				default:
					continue;				
			});
		};
		if (caseValues.length == 0 && !isNullable(type)) {
			Context.fatalError("json2object: Abstract enum of type " + type.toString() + "can't be parsed if empty", callPosition);
		};
		var v = switch (name) {
			case "String":
				({ expr : EConst(CIdent("s")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 21946, 21947) } : haxe.macro.Expr);			
			case "Int", "Float":
				var cls = { name : baseParser.name, pack : baseParser.pack, params : [TPType(Context.getType(name).toComplexType())] };
				({ expr : ECall({ expr : EField({ expr : ENew(cls, [{ expr : EArrayDecl([]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22115, 22117) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22119, 22125) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22127, 22131) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22106, 22132) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22106, 22141) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : ECall({ expr : EConst(CIdent("JNumber")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22149, 22156) }, [{ expr : EConst(CIdent("f")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22157, 22158) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22149, 22159) }, quotes : Unquoted }, { field : "pos", expr : { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22165, 22171) }, "revert"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22165, 22178) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22179, 22182) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22165, 22183) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22142, 22184) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22186, 22194) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22106, 22195) } : haxe.macro.Expr);			
			case "Bool":
				({ expr : EConst(CIdent("b")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22221, 22222) } : haxe.macro.Expr);			
			default:
				({ expr : EConst(CIdent("null")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22244, 22248) } : haxe.macro.Expr);			
		};
		if (caseValues.length > 0) {
			if (name == "String") {
				var values = { expr : EArrayDecl(caseValues), pos : Context.currentPos() };
				e = ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22424, 22429) }, { expr : ECast({ expr : ECall({ expr : EConst(CIdent("loadString")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22437, 22447) }, [{ expr : EConst(CIdent("s")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22448, 22449) }, { expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22451, 22454) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22456, 22464) }, values, caseValues[0]]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22437, 22492) }, null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22432, 22492) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22424, 22492) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22415, 22501) } : haxe.macro.Expr);
			} else {
				var case_e = [{ expr : ({ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22549, 22554) }, { expr : ECast(v, null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22557, 22564) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22549, 22564) } : haxe.macro.Expr), guard : null, values : caseValues }];
				var default_e = ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22628, 22633) }, { expr : ECast(caseValues[0], null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22636, 22657) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22628, 22657) }, { expr : ECall({ expr : EConst(CIdent("onIncorrectType")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22659, 22674) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22675, 22678) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22680, 22688) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22659, 22689) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22627, 22691) } : haxe.macro.Expr);
				e = { expr : ESwitch(({ expr : ECast(v, null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22725, 22732) } : haxe.macro.Expr), case_e, default_e), pos : Context.currentPos() };
			};
		} else {
			e = ({ expr : EConst(CIdent("null")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22822, 22826) } : haxe.macro.Expr);
		};
		var defaultValue = (caseValues.length == 0) ? ({ expr : EConst(CIdent("null")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22891, 22895) } : haxe.macro.Expr) : ({ expr : ECast(caseValues[0], null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22904, 22925) } : haxe.macro.Expr);
		changeFunction("onIncorrectType", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22987, 22992) }, defaultValue), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22987, 23010) }, { expr : ECall({ expr : EField({ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23017, 23023) }, "push"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23017, 23028) }, [{ expr : ECall({ expr : EConst(CIdent("IncorrectType")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23029, 23042) }, [{ expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23043, 23051) }, haxe.macro.Context.makeExpr(@$v type.toString(), untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23055, 23072)), { expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23074, 23077) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23029, 23078) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23017, 23079) }, { expr : ECall({ expr : EConst(CIdent("objectThrow")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23086, 23097) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23098, 23101) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23103, 23111) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23086, 23112) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22980, 23119) } : haxe.macro.Expr));
		if (isNullable(t.type)) {
			changeFunction("loadJsonNull", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23204, 23209) }, { expr : ECast({ expr : EConst(CIdent("null")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23217, 23221) }, null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23212, 23221) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23204, 23221) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23203, 23223) } : haxe.macro.Expr));
		};	
	default:
}) if (enumIndex type == 8) {
			var `5 = type[0];
			var `6 = type[1];
			{
				var _hx_tmp;
				{
					var t = (_hx_tmp = `5.get());
					var p = `6;
					{
						{
							var `5 = 0;
							var `6 = t.impl.get().statics.get();
							while (`5 < `6.length) {
								var field = `6[`5];
								++ `5;
								if (! field.meta.has(":enum") || ! field.meta.has(":impl")) {
									continue;
								};
								if (field.expr() == null) {
									continue;
								};
								caseValues.push(@:ast(switch (field.expr().expr) {
	case TConst(_):
		Context.getTypedExpr(field.expr());	
	case TCast(caste, _):
		switch (caste.expr) {
			case TConst(tc):
				switch (tc) {
					case TNull:
						continue;					
					default:
						Context.getTypedExpr(caste);					
				};			
			default:
				Context.getTypedExpr(caste);			
		};	
	default:
		continue;	
}) {
									var `5 = field.expr().expr;
									switch (enumIndex `5) {
										case 0: {
											var `6 = `5[0];
											{
												haxe.macro.Context.getTypedExpr(field.expr());
											};
										};
										case 24: {
											var `7 = `5[0];
											var `8 = `5[1];
											{
												var caste = `7;
												{
													@:ast(switch (caste.expr) {
	case TConst(tc):
		switch (tc) {
			case TNull:
				continue;			
			default:
				Context.getTypedExpr(caste);			
		};	
	default:
		Context.getTypedExpr(caste);	
}) {
														var `5 = caste.expr;
														if (enumIndex `5 == 0) {
															var `6 = `5[0];
															{
																var tc = `6;
																{
																	@:ast(switch (tc) {
	case TNull:
		continue;	
	default:
		Context.getTypedExpr(caste);	
}) if (enumIndex tc == 4) {
																		{
																			continue;
																		};
																	} else {
																		haxe.macro.Context.getTypedExpr(caste);
																	};
																};
															};
														} else {
															haxe.macro.Context.getTypedExpr(caste);
														};
													};
												};
											};
										};
										default: {
											continue;
										}
									};
								});
							};
						};
						if (caseValues.length == 0 && ! json2object.reader.DataBuilder.isNullable(type)) {
							haxe.macro.Context.fatalError("json2object: Abstract enum of type " + haxe.macro.TypeTools.toString(type) + "can't be parsed if empty", json2object.reader.DataBuilder.callPosition);
						};
						var v = @:ast(switch (name) {
	case "String":
		({ expr : EConst(CIdent("s")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 21946, 21947) } : haxe.macro.Expr);	
	case "Int", "Float":
		var cls = { name : baseParser.name, pack : baseParser.pack, params : [TPType(Context.getType(name).toComplexType())] };
		({ expr : ECall({ expr : EField({ expr : ENew(cls, [{ expr : EArrayDecl([]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22115, 22117) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22119, 22125) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22127, 22131) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22106, 22132) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22106, 22141) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : ECall({ expr : EConst(CIdent("JNumber")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22149, 22156) }, [{ expr : EConst(CIdent("f")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22157, 22158) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22149, 22159) }, quotes : Unquoted }, { field : "pos", expr : { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22165, 22171) }, "revert"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22165, 22178) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22179, 22182) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22165, 22183) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22142, 22184) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22186, 22194) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22106, 22195) } : haxe.macro.Expr);	
	case "Bool":
		({ expr : EConst(CIdent("b")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22221, 22222) } : haxe.macro.Expr);	
	default:
		({ expr : EConst(CIdent("null")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22244, 22248) } : haxe.macro.Expr);	
}) switch (name) {
							case "Bool": {
								{
									cast {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("b")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22221, 22222)};
								};
							};
							case "Float", "Int": {
								{
									var cls = {name : baseParser.name, pack : baseParser.pack, params : [haxe.macro.TypeParam.TPType({
										var type = haxe.macro.Context.getType(name);
										{
											{};
											@:ast(switch (type) {
	case null:
		null;	
	case TEnum(_.get().isPrivate => true, _):
		direct();	
	case TInst(_.get().isPrivate => true, _):
		direct();	
	case TType(_.get().isPrivate => true, _):
		direct();	
	case TAbstract(_.get().isPrivate => true, _):
		direct();	
	case TMono(_):
		direct();	
	case TEnum(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TInst(_.get() => classType, params):
		switch (classType.kind) {
			case KTypeParameter(_):
				var ct = asComplexType(classType.name);
				switch toType(ct) {
					case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
						ct;					
					default:
						direct();					
				};			
			default:
				TPath(toTypePath(classType, params));			
		};	
	case TType(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TFun(args, ret):
		TFunction([for (a  in  args) a.opt ? nullable(toComplexType(a.t)) : toComplexType(a.t)], toComplexType(ret));	
	case TAnonymous(_.get() => { fields : fields }):
		TAnonymous([for (cf  in  fields) toField(cf)]);	
	case TDynamic(t):
		if (t == null) {
			(TPath({ pack : [], name : "Dynamic", params : [] }) : haxe.macro.Expr.ComplexType);
		} else {
			var ct = toComplexType(t);
			(TPath({ pack : [], name : "Dynamic", params : [TPType(ct)] }) : haxe.macro.Expr.ComplexType);
		};	
	case TLazy(f):
		toComplexType(f());	
	case TAbstract(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	default:
		throw "Invalid type";	
}) if (type == null) {
												null;
											} else switch (@:exhaustive enumIndex type) {
												case 0: {
													var `9 = type[0];
													{
														haxe.macro.TypeTools.toComplexType(type);
													};
												};
												case 1: {
													var `4 = type[0];
													var `5 = type[1];
													{
														var _hx_tmp;
														var _hx_tmp;
														if ((_hx_tmp = `4.get().isPrivate) == true) {
															{
																haxe.macro.TypeTools.toComplexType(type);
															};
														} else {
															var baseType = (_hx_tmp = `4.get());
															var params = `5;
															{
																haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
															};
														};
													};
												};
												case 2: {
													var `14 = type[0];
													var `15 = type[1];
													{
														var _hx_tmp;
														var _hx_tmp;
														if ((_hx_tmp = `14.get().isPrivate) == true) {
															{
																haxe.macro.TypeTools.toComplexType(type);
															};
														} else {
															var classType = (_hx_tmp = `14.get());
															var params = `15;
															{
																@:ast(switch (classType.kind) {
	case KTypeParameter(_):
		var ct = asComplexType(classType.name);
		switch toType(ct) {
			case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
				ct;			
			default:
				direct();			
		};	
	default:
		TPath(toTypePath(classType, params));	
}) {
																	var ` = classType.kind;
																	if (enumIndex ` == 1) {
																		var `1 = `[0];
																		{
																			var ct = {
																				var s = classType.name;
																				var params = null;
																				haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.asTypePath(s, params));
																			};
																			@:ast(switch toType(ct) {
	case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
		ct;	
	default:
		direct();	
}) {
																				var ` = json2object.utils.TypeTools.toType(ct, null);
																				if (enumIndex ` == 0) {
																					var `1 = `[0];
																					if (enumIndex `1 == 2) {
																						var `2 = `1[0];
																						var `3 = `1[1];
																						{
																							var _hx_tmp;
																							{
																								var cl = (_hx_tmp = `2.get());
																								if ({
																									var ` = cl.kind;
																									if (enumIndex ` == 1) {
																										var `1 = `[0];
																										true;
																									} else false;
																								} && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")) {
																									ct;
																								} else {
																									haxe.macro.TypeTools.toComplexType(type);
																								};
																							};
																						};
																					} else {
																						haxe.macro.TypeTools.toComplexType(type);
																					};
																				} else {
																					haxe.macro.TypeTools.toComplexType(type);
																				};
																			};
																		};
																	} else {
																		haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(classType, params));
																	};
																};
															};
														};
													};
												};
												case 3: {
													var `12 = type[0];
													var `13 = type[1];
													{
														var _hx_tmp;
														var _hx_tmp;
														if ((_hx_tmp = `12.get().isPrivate) == true) {
															{
																haxe.macro.TypeTools.toComplexType(type);
															};
														} else {
															var baseType = (_hx_tmp = `12.get());
															var params = `13;
															{
																haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
															};
														};
													};
												};
												case 4: {
													var `10 = type[0];
													var `11 = type[1];
													{
														var args = `10;
														var ret = `11;
														{
															haxe.macro.ComplexType.TFunction({
																var ` = [];
																{
																	var `1 = 0;
																	while (`1 < args.length) {
																		var a = args[`1];
																		++ `1;
																		`.push(if (a.opt) {
																			json2object.utils.TypeTools.nullable(json2object.utils.TypeTools.toComplexType(a.t));
																		} else {
																			json2object.utils.TypeTools.toComplexType(a.t);
																		});
																	};
																};
																`;
															}, json2object.utils.TypeTools.toComplexType(ret));
														};
													};
												};
												case 5: {
													var `6 = type[0];
													{
														var _hx_tmp;
														{
															var `7 = (_hx_tmp = `6.get()).fields;
															var `8 = _hx_tmp.status;
															{
																var fields = `7;
																{
																	haxe.macro.ComplexType.TAnonymous({
																		var ` = [];
																		{
																			var `1 = 0;
																			while (`1 < fields.length) {
																				var cf = fields[`1];
																				++ `1;
																				`.push(json2object.utils.TypeTools.toField(cf));
																			};
																		};
																		`;
																	});
																};
															};
														};
													};
												};
												case 6: {
													var `2 = type[0];
													{
														var t = `2;
														{
															if (t == null) {
																cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : []});
															} else {
																var ct = json2object.utils.TypeTools.toComplexType(t);
																cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(ct)]});
															};
														};
													};
												};
												case 7: {
													var `3 = type[0];
													{
														var f = `3;
														{
															json2object.utils.TypeTools.toComplexType(f());
														};
													};
												};
												case 8: {
													var ` = type[0];
													var `1 = type[1];
													{
														var _hx_tmp;
														var _hx_tmp;
														if ((_hx_tmp = `.get().isPrivate) == true) {
															{
																haxe.macro.TypeTools.toComplexType(type);
															};
														} else {
															var baseType = (_hx_tmp = `.get());
															var params = `1;
															{
																haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
															};
														};
													};
												};
											};
										};
									})]};
									cast {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.ENew(cls, [{expr : haxe.macro.ExprDef.EArrayDecl([]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22115, 22117)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22119, 22125)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("NONE")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22127, 22131)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22106, 22132)}, "loadJson"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22106, 22141)}, [{expr : haxe.macro.ExprDef.EObjectDecl([{field : "value", expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("JNumber")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22149, 22156)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("f")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22157, 22158)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22149, 22159)}, quotes : haxe.macro.QuoteStatus.Unquoted}, {field : "pos", expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22165, 22171)}, "revert"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22165, 22178)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22179, 22182)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22165, 22183)}, quotes : haxe.macro.QuoteStatus.Unquoted}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22142, 22184)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22186, 22194)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22106, 22195)};
								};
							};
							case "String": {
								{
									cast {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("s")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 21946, 21947)};
								};
							};
							default: {
								cast {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22244, 22248)};
							}
						};
						if (caseValues.length > 0) {
							if (name == "String") {
								var values = {expr : haxe.macro.ExprDef.EArrayDecl(caseValues), pos : haxe.macro.Context.currentPos()};
								e = cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22424, 22429)}, {expr : haxe.macro.ExprDef.ECast({expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("loadString")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22437, 22447)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("s")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22448, 22449)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22451, 22454)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22456, 22464)}, values, caseValues[0]]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22437, 22492)}, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22432, 22492)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22424, 22492)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22415, 22501)};
							} else {
								var case_e = [{expr : cast {expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22549, 22554)}, {expr : haxe.macro.ExprDef.ECast(v, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22557, 22564)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22549, 22564)}, guard : null, values : caseValues}];
								var default_e = cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22628, 22633)}, {expr : haxe.macro.ExprDef.ECast(caseValues[0], null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22636, 22657)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22628, 22657)}, {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("onIncorrectType")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22659, 22674)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22675, 22678)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22680, 22688)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22659, 22689)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22627, 22691)};
								e = {expr : haxe.macro.ExprDef.ESwitch(cast {expr : haxe.macro.ExprDef.ECast(v, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22725, 22732)}, case_e, default_e), pos : haxe.macro.Context.currentPos()};
							};
						} else {
							e = cast {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22822, 22826)};
						};
						var defaultValue = if ((caseValues.length == 0)) {
							cast {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22891, 22895)};
						} else {
							cast {expr : haxe.macro.ExprDef.ECast(caseValues[0], null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22904, 22925)};
						};
						json2object.reader.DataBuilder.changeFunction("onIncorrectType", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22987, 22992)}, defaultValue), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22987, 23010)}, {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23017, 23023)}, "push"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23017, 23028)}, [{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("IncorrectType")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23029, 23042)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23043, 23051)}, haxe.macro.Context.makeExpr(haxe.macro.TypeTools.toString(type), $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23055, 23072)), {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23074, 23077)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23029, 23078)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23017, 23079)}, {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("objectThrow")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23086, 23097)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23098, 23101)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23103, 23111)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23086, 23112)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 22980, 23119)});
						if (json2object.reader.DataBuilder.isNullable(t.type)) {
							json2object.reader.DataBuilder.changeFunction("loadJsonNull", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23204, 23209)}, {expr : haxe.macro.ExprDef.ECast({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23217, 23221)}, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23212, 23221)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23204, 23221)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 23203, 23223)});
						};
					};
				};
			};
		} else {};
		@:ast(switch (name) {
	case "String":
		changeFunction("loadJsonString", parser, e);	
	case "Int", "Float":
		changeFunction("loadJsonNumber", parser, e);	
	case "Bool":
		changeFunction("loadJsonBool", parser, e);	
	default:
}) switch (name) {
			case "Bool": {
				{
					json2object.reader.DataBuilder.changeFunction("loadJsonBool", parser, e);
				};
			};
			case "Float", "Int": {
				{
					json2object.reader.DataBuilder.changeFunction("loadJsonNumber", parser, e);
				};
			};
			case "String": {
				{
					json2object.reader.DataBuilder.changeFunction("loadJsonString", parser, e);
				};
			};
			default: {}
		};
	}

	@:has_untyped
	public static function makeAbstractParser(parser:haxe.macro.TypeDefinition, type:haxe.macro.Type, baseParser:haxe.macro.BaseType) {
		var hasFromFloat = false;
		var hasOneFrom = false;
		@:ast(switch (type) {
	case TAbstract(_.get() => t, p):
		var from = (t.from.length == 0) ? [{ t : t.type, field : null }] : t.from;
		var i = 0;
		for (fromType  in  from) {
			switch (fromType.t.followWithAbstracts()) {
				case TInst(_.get() => st, sp):
					if (st.module == "String") {
						if (i == 0) {
							makeStringParser(parser);
						} else {
							var cls = { name : baseParser.name, pack : baseParser.pack, params : [TPType(fromType.t.toComplexType())] };
							changeFunction("loadJsonString", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24198, 24203) }, { expr : ECall({ expr : EField({ expr : ENew(cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24215, 24221) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24223, 24229) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24231, 24235) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24206, 24236) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24206, 24245) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : ECall({ expr : EConst(CIdent("JString")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24265, 24272) }, [{ expr : EConst(CIdent("s")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24273, 24274) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24265, 24275) }, quotes : Unquoted }, { field : "pos", expr : { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24281, 24287) }, "revert"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24281, 24294) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24295, 24298) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24281, 24299) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24258, 24300) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24314, 24322) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24206, 24323) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24198, 24323) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24185, 24337) } : haxe.macro.Expr));
							changeFunction("loadJsonNull", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24395, 24400) }, { expr : EConst(CIdent("null")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24403, 24407) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24395, 24407) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24394, 24409) } : haxe.macro.Expr));
						};
						hasOneFrom = true;
					} else if (st.module == "Array") {
						var subType = sp[0];
						for (i  in  0 ... t.params.length) {
							if (subType.unify(t.params[i].t)) {
								subType = p[i];
								break;
							};
						};
						hasOneFrom = true;
						if (i == 0) {
							makeArrayParser(parser, subType.followWithAbstracts(), baseParser);
						} else if (isBaseType(subType.followWithAbstracts())) {
							var aParams = switch (fromType.t.followWithAbstracts()) {
								case TInst(r, _):
									[TPType(TInst(r, [subType]).toComplexType())];								
								default:
									[];								
							};
							var cls = { name : baseParser.name, pack : baseParser.pack, params : aParams };
							changeFunction("loadJsonArray", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25217, 25222) }, { expr : ECall({ expr : EField({ expr : ENew(cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25234, 25240) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25242, 25248) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25250, 25254) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25225, 25255) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25225, 25264) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : ECall({ expr : EConst(CIdent("JArray")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25284, 25290) }, [{ expr : EConst(CIdent("a")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25291, 25292) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25284, 25293) }, quotes : Unquoted }, { field : "pos", expr : { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25299, 25305) }, "revert"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25299, 25312) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25313, 25316) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25299, 25317) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25277, 25318) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25332, 25340) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25225, 25341) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25217, 25341) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25204, 25355) } : haxe.macro.Expr));
							changeFunction("loadJsonNull", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25413, 25418) }, { expr : EConst(CIdent("null")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25421, 25425) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25413, 25425) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25412, 25427) } : haxe.macro.Expr));
						} else {
							hasOneFrom = false;
						};
					} else {
						if (i == 0) {
							var t = fromType.t;
							if (st.isPrivate) {
								var privateType = TypeUtils.copyType(st);
								t = Context.getType(privateType.name);
							};
							var cls = { name : baseParser.name, pack : baseParser.pack, params : [TPType(t.toComplexType())] };
							var casting = if (st.isPrivate && Context.defined("cpp") && !Context.defined("cppia")) {
								var abstractType = type.toComplexType();
								({ expr : EBlock([{ expr : EVars([{ name : "__tmp__new", type : null, expr : { expr : ECall({ expr : EField({ expr : ENew(cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26086, 26092) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26094, 26100) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26102, 26106) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26077, 26107) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26077, 26116) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : ECall({ expr : EConst(CIdent("JObject")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26138, 26145) }, [{ expr : EConst(CIdent("o")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26146, 26147) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26138, 26148) }, quotes : Unquoted }, { field : "pos", expr : { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26154, 26160) }, "revert"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26154, 26167) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26168, 26171) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26154, 26172) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26131, 26173) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26188, 26196) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26077, 26197) }, isFinal : false, meta : [] }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26060, 26198) }, { expr : ECast({ expr : EParenthesis({ expr : EField({ expr : EParenthesis({ expr : ECheckType({ expr : ECall({ expr : EField({ expr : ECall({ expr : EField({ expr : EField({ expr : EConst(CIdent("cpp")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26218, 26221) }, "Pointer"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26218, 26229) }, "addressOf"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26218, 26239) }, [{ expr : EConst(CIdent("__tmp__new")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26240, 26250) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26218, 26251) }, "reinterpret"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26218, 26263) }, []), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26218, 26265) }, TPath({ pack : ["cpp"], name : "Pointer", params : [TPType(abstractType)] })), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26217, 26295) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26217, 26295) }, "value"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26217, 26301) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26216, 26302) }, null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26211, 26302) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26046, 26316) } : haxe.macro.Expr);
							} else if (st.isPrivate && (Context.defined("cs") || Context.defined("java") || Context.defined("hl"))) {
								Context.fatalError("json2object: Abstract of private are not supported on this target", callPosition);
							} else {
								({ expr : ECast({ expr : ECall({ expr : EField({ expr : ENew(cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26637, 26643) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26645, 26651) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26653, 26657) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26628, 26658) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26628, 26667) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : ECall({ expr : EConst(CIdent("JObject")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26687, 26694) }, [{ expr : EConst(CIdent("o")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26695, 26696) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26687, 26697) }, quotes : Unquoted }, { field : "pos", expr : { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26703, 26709) }, "revert"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26703, 26716) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26717, 26720) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26703, 26721) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26680, 26722) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26735, 26743) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26628, 26744) }, null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26623, 26744) } : haxe.macro.Expr);
							};
							changeFunction("loadJsonObject", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26826, 26831) }, casting), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26826, 26842) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26814, 26854) } : haxe.macro.Expr));
							changeFunction("loadJsonNull", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26912, 26917) }, { expr : EConst(CIdent("null")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26920, 26924) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26912, 26924) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26911, 26926) } : haxe.macro.Expr));
							hasOneFrom = true;
						};
					};				
				case TAbstract(_.get() => st, sp):
					if (st.module == "StdTypes") {
						var cls = { name : baseParser.name, pack : baseParser.pack, params : [TPType(fromType.t.toComplexType())] };
						switch (st.name) {
							case "Int":
								if (!hasFromFloat) {
									if (i == 0) {
										makeIntParser(parser, fromType.t);
									} else {
										changeFunction("loadJsonNumber", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27445, 27450) }, { expr : ECall({ expr : EField({ expr : ENew(cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27462, 27468) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27470, 27476) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27478, 27482) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27453, 27483) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27453, 27492) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : ECall({ expr : EConst(CIdent("JNumber")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27515, 27522) }, [{ expr : EConst(CIdent("f")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27523, 27524) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27515, 27525) }, quotes : Unquoted }, { field : "pos", expr : { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27531, 27537) }, "revert"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27531, 27544) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27545, 27548) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27531, 27549) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27508, 27550) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27567, 27575) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27453, 27576) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27445, 27576) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27429, 27593) } : haxe.macro.Expr));
									};
									hasOneFrom = true;
								};							
							case "Float":
								if (i == 0) {
									makeFloatParser(parser, fromType.t);
								} else {
									changeFunction("loadJsonNumber", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27873, 27878) }, { expr : ECall({ expr : EField({ expr : ENew(cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27890, 27896) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27898, 27904) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27906, 27910) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27881, 27911) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27881, 27920) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : ECall({ expr : EConst(CIdent("JNumber")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27942, 27949) }, [{ expr : EConst(CIdent("f")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27950, 27951) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27942, 27952) }, quotes : Unquoted }, { field : "pos", expr : { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27958, 27964) }, "revert"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27958, 27971) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27972, 27975) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27958, 27976) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27935, 27977) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27993, 28001) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27881, 28002) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27873, 28002) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27858, 28018) } : haxe.macro.Expr));
								};
								hasFromFloat = true;
								hasOneFrom = true;							
							case "Bool":
								if (i == 0) {
									makeBoolParser(parser, fromType.t);
								} else {
									changeFunction("loadJsonBool", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28310, 28315) }, { expr : ECall({ expr : EField({ expr : ENew(cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28327, 28333) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28335, 28341) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28343, 28347) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28318, 28348) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28318, 28357) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : ECall({ expr : EConst(CIdent("JBool")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28379, 28384) }, [{ expr : EConst(CIdent("b")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28385, 28386) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28379, 28387) }, quotes : Unquoted }, { field : "pos", expr : { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28393, 28399) }, "revert"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28393, 28406) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28407, 28410) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28393, 28411) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28372, 28412) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28428, 28436) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28318, 28437) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28310, 28437) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28295, 28453) } : haxe.macro.Expr));
								};
								hasOneFrom = true;							
						};
					} else if (i == 0 && t.module == "haxe.ds.Map") {
						var key = sp[0];
						var value = sp[1];
						for (i  in  0 ... t.params.length) {
							if (key.unify(t.params[i].t)) {
								key = p[i];
							};
							if (value.unify(t.params[i].t)) {
								value = p[i];
							};
						};
						makeMapParser(parser, key, value, baseParser);
						hasOneFrom = true;
					};				
				case TAnonymous(_.get() => st):
					if (i == 0) {
						var cls = { name : baseParser.name, pack : baseParser.pack, params : [TPType(fromType.t.toComplexType())] };
						changeFunction("loadJsonObject", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29188, 29193) }, { expr : ECast({ expr : ECall({ expr : EField({ expr : ENew(cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29210, 29216) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29218, 29224) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29226, 29230) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29201, 29231) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29201, 29240) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : ECall({ expr : EConst(CIdent("JObject")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29260, 29267) }, [{ expr : EConst(CIdent("o")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29268, 29269) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29260, 29270) }, quotes : Unquoted }, { field : "pos", expr : { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29276, 29282) }, "revert"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29276, 29289) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29290, 29293) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29276, 29294) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29253, 29295) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29308, 29316) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29201, 29317) }, null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29196, 29317) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29188, 29317) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29176, 29329) } : haxe.macro.Expr));
						changeFunction("loadJsonNull", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29387, 29392) }, { expr : EConst(CIdent("null")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29395, 29399) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29387, 29399) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29386, 29401) } : haxe.macro.Expr));
						hasOneFrom = true;
					};				
				default:
			};
			i++;
		};
		if (isNullable(t.type)) {
			changeFunction("loadJsonNull", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29560, 29565) }, { expr : ECast({ expr : EConst(CIdent("null")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29573, 29577) }, null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29568, 29577) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29560, 29577) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29559, 29579) } : haxe.macro.Expr));
		};	
	default:
}) if (enumIndex type == 8) {
			var ` = type[0];
			var `1 = type[1];
			{
				var _hx_tmp;
				{
					var t = (_hx_tmp = `.get());
					var p = `1;
					{
						var from = if ((t.from.length == 0)) {
							[{t : t.type, field : null}];
						} else {
							t.from;
						};
						var i = 0;
						{
							var ` = 0;
							while (` < from.length) {
								var fromType = from[`];
								++ `;
								@:ast(switch (fromType.t.followWithAbstracts()) {
	case TInst(_.get() => st, sp):
		if (st.module == "String") {
			if (i == 0) {
				makeStringParser(parser);
			} else {
				var cls = { name : baseParser.name, pack : baseParser.pack, params : [TPType(fromType.t.toComplexType())] };
				changeFunction("loadJsonString", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24198, 24203) }, { expr : ECall({ expr : EField({ expr : ENew(cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24215, 24221) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24223, 24229) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24231, 24235) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24206, 24236) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24206, 24245) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : ECall({ expr : EConst(CIdent("JString")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24265, 24272) }, [{ expr : EConst(CIdent("s")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24273, 24274) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24265, 24275) }, quotes : Unquoted }, { field : "pos", expr : { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24281, 24287) }, "revert"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24281, 24294) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24295, 24298) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24281, 24299) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24258, 24300) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24314, 24322) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24206, 24323) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24198, 24323) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24185, 24337) } : haxe.macro.Expr));
				changeFunction("loadJsonNull", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24395, 24400) }, { expr : EConst(CIdent("null")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24403, 24407) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24395, 24407) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24394, 24409) } : haxe.macro.Expr));
			};
			hasOneFrom = true;
		} else if (st.module == "Array") {
			var subType = sp[0];
			for (i  in  0 ... t.params.length) {
				if (subType.unify(t.params[i].t)) {
					subType = p[i];
					break;
				};
			};
			hasOneFrom = true;
			if (i == 0) {
				makeArrayParser(parser, subType.followWithAbstracts(), baseParser);
			} else if (isBaseType(subType.followWithAbstracts())) {
				var aParams = switch (fromType.t.followWithAbstracts()) {
					case TInst(r, _):
						[TPType(TInst(r, [subType]).toComplexType())];					
					default:
						[];					
				};
				var cls = { name : baseParser.name, pack : baseParser.pack, params : aParams };
				changeFunction("loadJsonArray", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25217, 25222) }, { expr : ECall({ expr : EField({ expr : ENew(cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25234, 25240) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25242, 25248) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25250, 25254) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25225, 25255) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25225, 25264) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : ECall({ expr : EConst(CIdent("JArray")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25284, 25290) }, [{ expr : EConst(CIdent("a")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25291, 25292) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25284, 25293) }, quotes : Unquoted }, { field : "pos", expr : { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25299, 25305) }, "revert"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25299, 25312) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25313, 25316) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25299, 25317) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25277, 25318) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25332, 25340) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25225, 25341) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25217, 25341) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25204, 25355) } : haxe.macro.Expr));
				changeFunction("loadJsonNull", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25413, 25418) }, { expr : EConst(CIdent("null")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25421, 25425) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25413, 25425) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25412, 25427) } : haxe.macro.Expr));
			} else {
				hasOneFrom = false;
			};
		} else {
			if (i == 0) {
				var t = fromType.t;
				if (st.isPrivate) {
					var privateType = TypeUtils.copyType(st);
					t = Context.getType(privateType.name);
				};
				var cls = { name : baseParser.name, pack : baseParser.pack, params : [TPType(t.toComplexType())] };
				var casting = if (st.isPrivate && Context.defined("cpp") && !Context.defined("cppia")) {
					var abstractType = type.toComplexType();
					({ expr : EBlock([{ expr : EVars([{ name : "__tmp__new", type : null, expr : { expr : ECall({ expr : EField({ expr : ENew(cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26086, 26092) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26094, 26100) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26102, 26106) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26077, 26107) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26077, 26116) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : ECall({ expr : EConst(CIdent("JObject")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26138, 26145) }, [{ expr : EConst(CIdent("o")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26146, 26147) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26138, 26148) }, quotes : Unquoted }, { field : "pos", expr : { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26154, 26160) }, "revert"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26154, 26167) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26168, 26171) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26154, 26172) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26131, 26173) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26188, 26196) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26077, 26197) }, isFinal : false, meta : [] }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26060, 26198) }, { expr : ECast({ expr : EParenthesis({ expr : EField({ expr : EParenthesis({ expr : ECheckType({ expr : ECall({ expr : EField({ expr : ECall({ expr : EField({ expr : EField({ expr : EConst(CIdent("cpp")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26218, 26221) }, "Pointer"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26218, 26229) }, "addressOf"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26218, 26239) }, [{ expr : EConst(CIdent("__tmp__new")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26240, 26250) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26218, 26251) }, "reinterpret"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26218, 26263) }, []), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26218, 26265) }, TPath({ pack : ["cpp"], name : "Pointer", params : [TPType(abstractType)] })), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26217, 26295) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26217, 26295) }, "value"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26217, 26301) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26216, 26302) }, null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26211, 26302) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26046, 26316) } : haxe.macro.Expr);
				} else if (st.isPrivate && (Context.defined("cs") || Context.defined("java") || Context.defined("hl"))) {
					Context.fatalError("json2object: Abstract of private are not supported on this target", callPosition);
				} else {
					({ expr : ECast({ expr : ECall({ expr : EField({ expr : ENew(cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26637, 26643) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26645, 26651) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26653, 26657) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26628, 26658) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26628, 26667) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : ECall({ expr : EConst(CIdent("JObject")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26687, 26694) }, [{ expr : EConst(CIdent("o")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26695, 26696) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26687, 26697) }, quotes : Unquoted }, { field : "pos", expr : { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26703, 26709) }, "revert"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26703, 26716) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26717, 26720) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26703, 26721) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26680, 26722) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26735, 26743) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26628, 26744) }, null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26623, 26744) } : haxe.macro.Expr);
				};
				changeFunction("loadJsonObject", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26826, 26831) }, casting), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26826, 26842) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26814, 26854) } : haxe.macro.Expr));
				changeFunction("loadJsonNull", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26912, 26917) }, { expr : EConst(CIdent("null")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26920, 26924) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26912, 26924) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26911, 26926) } : haxe.macro.Expr));
				hasOneFrom = true;
			};
		};	
	case TAbstract(_.get() => st, sp):
		if (st.module == "StdTypes") {
			var cls = { name : baseParser.name, pack : baseParser.pack, params : [TPType(fromType.t.toComplexType())] };
			switch (st.name) {
				case "Int":
					if (!hasFromFloat) {
						if (i == 0) {
							makeIntParser(parser, fromType.t);
						} else {
							changeFunction("loadJsonNumber", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27445, 27450) }, { expr : ECall({ expr : EField({ expr : ENew(cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27462, 27468) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27470, 27476) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27478, 27482) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27453, 27483) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27453, 27492) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : ECall({ expr : EConst(CIdent("JNumber")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27515, 27522) }, [{ expr : EConst(CIdent("f")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27523, 27524) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27515, 27525) }, quotes : Unquoted }, { field : "pos", expr : { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27531, 27537) }, "revert"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27531, 27544) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27545, 27548) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27531, 27549) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27508, 27550) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27567, 27575) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27453, 27576) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27445, 27576) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27429, 27593) } : haxe.macro.Expr));
						};
						hasOneFrom = true;
					};				
				case "Float":
					if (i == 0) {
						makeFloatParser(parser, fromType.t);
					} else {
						changeFunction("loadJsonNumber", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27873, 27878) }, { expr : ECall({ expr : EField({ expr : ENew(cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27890, 27896) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27898, 27904) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27906, 27910) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27881, 27911) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27881, 27920) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : ECall({ expr : EConst(CIdent("JNumber")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27942, 27949) }, [{ expr : EConst(CIdent("f")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27950, 27951) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27942, 27952) }, quotes : Unquoted }, { field : "pos", expr : { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27958, 27964) }, "revert"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27958, 27971) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27972, 27975) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27958, 27976) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27935, 27977) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27993, 28001) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27881, 28002) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27873, 28002) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27858, 28018) } : haxe.macro.Expr));
					};
					hasFromFloat = true;
					hasOneFrom = true;				
				case "Bool":
					if (i == 0) {
						makeBoolParser(parser, fromType.t);
					} else {
						changeFunction("loadJsonBool", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28310, 28315) }, { expr : ECall({ expr : EField({ expr : ENew(cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28327, 28333) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28335, 28341) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28343, 28347) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28318, 28348) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28318, 28357) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : ECall({ expr : EConst(CIdent("JBool")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28379, 28384) }, [{ expr : EConst(CIdent("b")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28385, 28386) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28379, 28387) }, quotes : Unquoted }, { field : "pos", expr : { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28393, 28399) }, "revert"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28393, 28406) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28407, 28410) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28393, 28411) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28372, 28412) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28428, 28436) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28318, 28437) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28310, 28437) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28295, 28453) } : haxe.macro.Expr));
					};
					hasOneFrom = true;				
			};
		} else if (i == 0 && t.module == "haxe.ds.Map") {
			var key = sp[0];
			var value = sp[1];
			for (i  in  0 ... t.params.length) {
				if (key.unify(t.params[i].t)) {
					key = p[i];
				};
				if (value.unify(t.params[i].t)) {
					value = p[i];
				};
			};
			makeMapParser(parser, key, value, baseParser);
			hasOneFrom = true;
		};	
	case TAnonymous(_.get() => st):
		if (i == 0) {
			var cls = { name : baseParser.name, pack : baseParser.pack, params : [TPType(fromType.t.toComplexType())] };
			changeFunction("loadJsonObject", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29188, 29193) }, { expr : ECast({ expr : ECall({ expr : EField({ expr : ENew(cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29210, 29216) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29218, 29224) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29226, 29230) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29201, 29231) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29201, 29240) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : ECall({ expr : EConst(CIdent("JObject")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29260, 29267) }, [{ expr : EConst(CIdent("o")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29268, 29269) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29260, 29270) }, quotes : Unquoted }, { field : "pos", expr : { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29276, 29282) }, "revert"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29276, 29289) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29290, 29293) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29276, 29294) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29253, 29295) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29308, 29316) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29201, 29317) }, null), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29196, 29317) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29188, 29317) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29176, 29329) } : haxe.macro.Expr));
			changeFunction("loadJsonNull", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29387, 29392) }, { expr : EConst(CIdent("null")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29395, 29399) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29387, 29399) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29386, 29401) } : haxe.macro.Expr));
			hasOneFrom = true;
		};	
	default:
}) {
									var ` = {
										var type = fromType.t;
										{
											var once = false;
											if ((once == null)) once = false;
											haxe.macro.Context.followWithAbstracts(type, once);
										};
									};
									switch (enumIndex `) {
										case 2: {
											var `4 = `[0];
											var `5 = `[1];
											{
												var _hx_tmp;
												{
													var st = (_hx_tmp = `4.get());
													var sp = `5;
													{
														if (st.module == "String") {
															if (i == 0) {
																json2object.reader.DataBuilder.makeStringParser(parser);
															} else {
																var cls = {name : baseParser.name, pack : baseParser.pack, params : [haxe.macro.TypeParam.TPType({
																	var type = fromType.t;
																	{
																		{};
																		@:ast(switch (type) {
	case null:
		null;	
	case TEnum(_.get().isPrivate => true, _):
		direct();	
	case TInst(_.get().isPrivate => true, _):
		direct();	
	case TType(_.get().isPrivate => true, _):
		direct();	
	case TAbstract(_.get().isPrivate => true, _):
		direct();	
	case TMono(_):
		direct();	
	case TEnum(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TInst(_.get() => classType, params):
		switch (classType.kind) {
			case KTypeParameter(_):
				var ct = asComplexType(classType.name);
				switch toType(ct) {
					case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
						ct;					
					default:
						direct();					
				};			
			default:
				TPath(toTypePath(classType, params));			
		};	
	case TType(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TFun(args, ret):
		TFunction([for (a  in  args) a.opt ? nullable(toComplexType(a.t)) : toComplexType(a.t)], toComplexType(ret));	
	case TAnonymous(_.get() => { fields : fields }):
		TAnonymous([for (cf  in  fields) toField(cf)]);	
	case TDynamic(t):
		if (t == null) {
			(TPath({ pack : [], name : "Dynamic", params : [] }) : haxe.macro.Expr.ComplexType);
		} else {
			var ct = toComplexType(t);
			(TPath({ pack : [], name : "Dynamic", params : [TPType(ct)] }) : haxe.macro.Expr.ComplexType);
		};	
	case TLazy(f):
		toComplexType(f());	
	case TAbstract(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	default:
		throw "Invalid type";	
}) if (type == null) {
																			null;
																		} else switch (@:exhaustive enumIndex type) {
																			case 0: {
																				var `9 = type[0];
																				{
																					haxe.macro.TypeTools.toComplexType(type);
																				};
																			};
																			case 1: {
																				var `4 = type[0];
																				var `5 = type[1];
																				{
																					var _hx_tmp;
																					var _hx_tmp;
																					if ((_hx_tmp = `4.get().isPrivate) == true) {
																						{
																							haxe.macro.TypeTools.toComplexType(type);
																						};
																					} else {
																						var baseType = (_hx_tmp = `4.get());
																						var params = `5;
																						{
																							haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																						};
																					};
																				};
																			};
																			case 2: {
																				var `14 = type[0];
																				var `15 = type[1];
																				{
																					var _hx_tmp;
																					var _hx_tmp;
																					if ((_hx_tmp = `14.get().isPrivate) == true) {
																						{
																							haxe.macro.TypeTools.toComplexType(type);
																						};
																					} else {
																						var classType = (_hx_tmp = `14.get());
																						var params = `15;
																						{
																							@:ast(switch (classType.kind) {
	case KTypeParameter(_):
		var ct = asComplexType(classType.name);
		switch toType(ct) {
			case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
				ct;			
			default:
				direct();			
		};	
	default:
		TPath(toTypePath(classType, params));	
}) {
																								var ` = classType.kind;
																								if (enumIndex ` == 1) {
																									var `1 = `[0];
																									{
																										var ct = {
																											var s = classType.name;
																											var params = null;
																											haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.asTypePath(s, params));
																										};
																										@:ast(switch toType(ct) {
	case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
		ct;	
	default:
		direct();	
}) {
																											var ` = json2object.utils.TypeTools.toType(ct, null);
																											if (enumIndex ` == 0) {
																												var `1 = `[0];
																												if (enumIndex `1 == 2) {
																													var `2 = `1[0];
																													var `3 = `1[1];
																													{
																														var _hx_tmp;
																														{
																															var cl = (_hx_tmp = `2.get());
																															if ({
																																var ` = cl.kind;
																																if (enumIndex ` == 1) {
																																	var `1 = `[0];
																																	true;
																																} else false;
																															} && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")) {
																																ct;
																															} else {
																																haxe.macro.TypeTools.toComplexType(type);
																															};
																														};
																													};
																												} else {
																													haxe.macro.TypeTools.toComplexType(type);
																												};
																											} else {
																												haxe.macro.TypeTools.toComplexType(type);
																											};
																										};
																									};
																								} else {
																									haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(classType, params));
																								};
																							};
																						};
																					};
																				};
																			};
																			case 3: {
																				var `12 = type[0];
																				var `13 = type[1];
																				{
																					var _hx_tmp;
																					var _hx_tmp;
																					if ((_hx_tmp = `12.get().isPrivate) == true) {
																						{
																							haxe.macro.TypeTools.toComplexType(type);
																						};
																					} else {
																						var baseType = (_hx_tmp = `12.get());
																						var params = `13;
																						{
																							haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																						};
																					};
																				};
																			};
																			case 4: {
																				var `10 = type[0];
																				var `11 = type[1];
																				{
																					var args = `10;
																					var ret = `11;
																					{
																						haxe.macro.ComplexType.TFunction({
																							var ` = [];
																							{
																								var `1 = 0;
																								while (`1 < args.length) {
																									var a = args[`1];
																									++ `1;
																									`.push(if (a.opt) {
																										json2object.utils.TypeTools.nullable(json2object.utils.TypeTools.toComplexType(a.t));
																									} else {
																										json2object.utils.TypeTools.toComplexType(a.t);
																									});
																								};
																							};
																							`;
																						}, json2object.utils.TypeTools.toComplexType(ret));
																					};
																				};
																			};
																			case 5: {
																				var `6 = type[0];
																				{
																					var _hx_tmp;
																					{
																						var `7 = (_hx_tmp = `6.get()).fields;
																						var `8 = _hx_tmp.status;
																						{
																							var fields = `7;
																							{
																								haxe.macro.ComplexType.TAnonymous({
																									var ` = [];
																									{
																										var `1 = 0;
																										while (`1 < fields.length) {
																											var cf = fields[`1];
																											++ `1;
																											`.push(json2object.utils.TypeTools.toField(cf));
																										};
																									};
																									`;
																								});
																							};
																						};
																					};
																				};
																			};
																			case 6: {
																				var `2 = type[0];
																				{
																					var t = `2;
																					{
																						if (t == null) {
																							cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : []});
																						} else {
																							var ct = json2object.utils.TypeTools.toComplexType(t);
																							cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(ct)]});
																						};
																					};
																				};
																			};
																			case 7: {
																				var `3 = type[0];
																				{
																					var f = `3;
																					{
																						json2object.utils.TypeTools.toComplexType(f());
																					};
																				};
																			};
																			case 8: {
																				var ` = type[0];
																				var `1 = type[1];
																				{
																					var _hx_tmp;
																					var _hx_tmp;
																					if ((_hx_tmp = `.get().isPrivate) == true) {
																						{
																							haxe.macro.TypeTools.toComplexType(type);
																						};
																					} else {
																						var baseType = (_hx_tmp = `.get());
																						var params = `1;
																						{
																							haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																						};
																					};
																				};
																			};
																		};
																	};
																})]};
																json2object.reader.DataBuilder.changeFunction("loadJsonString", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24198, 24203)}, {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.ENew(cls, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24215, 24221)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24223, 24229)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("NONE")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24231, 24235)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24206, 24236)}, "loadJson"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24206, 24245)}, [{expr : haxe.macro.ExprDef.EObjectDecl([{field : "value", expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("JString")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24265, 24272)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("s")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24273, 24274)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24265, 24275)}, quotes : haxe.macro.QuoteStatus.Unquoted}, {field : "pos", expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24281, 24287)}, "revert"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24281, 24294)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24295, 24298)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24281, 24299)}, quotes : haxe.macro.QuoteStatus.Unquoted}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24258, 24300)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24314, 24322)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24206, 24323)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24198, 24323)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24185, 24337)});
																json2object.reader.DataBuilder.changeFunction("loadJsonNull", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24395, 24400)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24403, 24407)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24395, 24407)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 24394, 24409)});
															};
															hasOneFrom = true;
														} else {
															if (st.module == "Array") {
																var subType = sp[0];
																{
																	var ` = 0;
																	var `1 = t.params.length;
																	while (` < `1) {
																		var i = ` ++;
																		if ({
																			var t2 = t.params[i].t;
																			haxe.macro.Context.unify(subType, t2);
																		}) {
																			subType = p[i];
																			break;
																		};
																	};
																};
																hasOneFrom = true;
																if (i == 0) {
																	json2object.reader.DataBuilder.makeArrayParser(parser, {
																		var once = false;
																		if ((once == null)) once = false;
																		haxe.macro.Context.followWithAbstracts(subType, once);
																	}, baseParser);
																} else {
																	if (json2object.reader.DataBuilder.isBaseType({
																		var once = false;
																		if ((once == null)) once = false;
																		haxe.macro.Context.followWithAbstracts(subType, once);
																	})) {
																		var aParams = @:ast(switch (fromType.t.followWithAbstracts()) {
	case TInst(r, _):
		[TPType(TInst(r, [subType]).toComplexType())];	
	default:
		[];	
}) {
																			var `2 = {
																				var type = fromType.t;
																				{
																					var once = false;
																					if ((once == null)) once = false;
																					haxe.macro.Context.followWithAbstracts(type, once);
																				};
																			};
																			if (enumIndex `2 == 2) {
																				var `3 = `2[0];
																				var `4 = `2[1];
																				{
																					var r = `3;
																					{
																						[haxe.macro.TypeParam.TPType({
																							var type = haxe.macro.Type.TInst(r, [subType]);
																							{
																								{};
																								@:ast(switch (type) {
	case null:
		null;	
	case TEnum(_.get().isPrivate => true, _):
		direct();	
	case TInst(_.get().isPrivate => true, _):
		direct();	
	case TType(_.get().isPrivate => true, _):
		direct();	
	case TAbstract(_.get().isPrivate => true, _):
		direct();	
	case TMono(_):
		direct();	
	case TEnum(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TInst(_.get() => classType, params):
		switch (classType.kind) {
			case KTypeParameter(_):
				var ct = asComplexType(classType.name);
				switch toType(ct) {
					case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
						ct;					
					default:
						direct();					
				};			
			default:
				TPath(toTypePath(classType, params));			
		};	
	case TType(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TFun(args, ret):
		TFunction([for (a  in  args) a.opt ? nullable(toComplexType(a.t)) : toComplexType(a.t)], toComplexType(ret));	
	case TAnonymous(_.get() => { fields : fields }):
		TAnonymous([for (cf  in  fields) toField(cf)]);	
	case TDynamic(t):
		if (t == null) {
			(TPath({ pack : [], name : "Dynamic", params : [] }) : haxe.macro.Expr.ComplexType);
		} else {
			var ct = toComplexType(t);
			(TPath({ pack : [], name : "Dynamic", params : [TPType(ct)] }) : haxe.macro.Expr.ComplexType);
		};	
	case TLazy(f):
		toComplexType(f());	
	case TAbstract(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	default:
		throw "Invalid type";	
}) if (type == null) {
																									null;
																								} else switch (@:exhaustive enumIndex type) {
																									case 0: {
																										var `9 = type[0];
																										{
																											haxe.macro.TypeTools.toComplexType(type);
																										};
																									};
																									case 1: {
																										var `4 = type[0];
																										var `5 = type[1];
																										{
																											var _hx_tmp;
																											var _hx_tmp;
																											if ((_hx_tmp = `4.get().isPrivate) == true) {
																												{
																													haxe.macro.TypeTools.toComplexType(type);
																												};
																											} else {
																												var baseType = (_hx_tmp = `4.get());
																												var params = `5;
																												{
																													haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																												};
																											};
																										};
																									};
																									case 2: {
																										var `14 = type[0];
																										var `15 = type[1];
																										{
																											var _hx_tmp;
																											var _hx_tmp;
																											if ((_hx_tmp = `14.get().isPrivate) == true) {
																												{
																													haxe.macro.TypeTools.toComplexType(type);
																												};
																											} else {
																												var classType = (_hx_tmp = `14.get());
																												var params = `15;
																												{
																													@:ast(switch (classType.kind) {
	case KTypeParameter(_):
		var ct = asComplexType(classType.name);
		switch toType(ct) {
			case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
				ct;			
			default:
				direct();			
		};	
	default:
		TPath(toTypePath(classType, params));	
}) {
																														var ` = classType.kind;
																														if (enumIndex ` == 1) {
																															var `1 = `[0];
																															{
																																var ct = {
																																	var s = classType.name;
																																	var params = null;
																																	haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.asTypePath(s, params));
																																};
																																@:ast(switch toType(ct) {
	case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
		ct;	
	default:
		direct();	
}) {
																																	var ` = json2object.utils.TypeTools.toType(ct, null);
																																	if (enumIndex ` == 0) {
																																		var `1 = `[0];
																																		if (enumIndex `1 == 2) {
																																			var `2 = `1[0];
																																			var `3 = `1[1];
																																			{
																																				var _hx_tmp;
																																				{
																																					var cl = (_hx_tmp = `2.get());
																																					if ({
																																						var ` = cl.kind;
																																						if (enumIndex ` == 1) {
																																							var `1 = `[0];
																																							true;
																																						} else false;
																																					} && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")) {
																																						ct;
																																					} else {
																																						haxe.macro.TypeTools.toComplexType(type);
																																					};
																																				};
																																			};
																																		} else {
																																			haxe.macro.TypeTools.toComplexType(type);
																																		};
																																	} else {
																																		haxe.macro.TypeTools.toComplexType(type);
																																	};
																																};
																															};
																														} else {
																															haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(classType, params));
																														};
																													};
																												};
																											};
																										};
																									};
																									case 3: {
																										var `12 = type[0];
																										var `13 = type[1];
																										{
																											var _hx_tmp;
																											var _hx_tmp;
																											if ((_hx_tmp = `12.get().isPrivate) == true) {
																												{
																													haxe.macro.TypeTools.toComplexType(type);
																												};
																											} else {
																												var baseType = (_hx_tmp = `12.get());
																												var params = `13;
																												{
																													haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																												};
																											};
																										};
																									};
																									case 4: {
																										var `10 = type[0];
																										var `11 = type[1];
																										{
																											var args = `10;
																											var ret = `11;
																											{
																												haxe.macro.ComplexType.TFunction({
																													var ` = [];
																													{
																														var `1 = 0;
																														while (`1 < args.length) {
																															var a = args[`1];
																															++ `1;
																															`.push(if (a.opt) {
																																json2object.utils.TypeTools.nullable(json2object.utils.TypeTools.toComplexType(a.t));
																															} else {
																																json2object.utils.TypeTools.toComplexType(a.t);
																															});
																														};
																													};
																													`;
																												}, json2object.utils.TypeTools.toComplexType(ret));
																											};
																										};
																									};
																									case 5: {
																										var `6 = type[0];
																										{
																											var _hx_tmp;
																											{
																												var `7 = (_hx_tmp = `6.get()).fields;
																												var `8 = _hx_tmp.status;
																												{
																													var fields = `7;
																													{
																														haxe.macro.ComplexType.TAnonymous({
																															var ` = [];
																															{
																																var `1 = 0;
																																while (`1 < fields.length) {
																																	var cf = fields[`1];
																																	++ `1;
																																	`.push(json2object.utils.TypeTools.toField(cf));
																																};
																															};
																															`;
																														});
																													};
																												};
																											};
																										};
																									};
																									case 6: {
																										var `2 = type[0];
																										{
																											var t = `2;
																											{
																												if (t == null) {
																													cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : []});
																												} else {
																													var ct = json2object.utils.TypeTools.toComplexType(t);
																													cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(ct)]});
																												};
																											};
																										};
																									};
																									case 7: {
																										var `3 = type[0];
																										{
																											var f = `3;
																											{
																												json2object.utils.TypeTools.toComplexType(f());
																											};
																										};
																									};
																									case 8: {
																										var ` = type[0];
																										var `1 = type[1];
																										{
																											var _hx_tmp;
																											var _hx_tmp;
																											if ((_hx_tmp = `.get().isPrivate) == true) {
																												{
																													haxe.macro.TypeTools.toComplexType(type);
																												};
																											} else {
																												var baseType = (_hx_tmp = `.get());
																												var params = `1;
																												{
																													haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																												};
																											};
																										};
																									};
																								};
																							};
																						})];
																					};
																				};
																			} else {
																				[];
																			};
																		};
																		var cls = {name : baseParser.name, pack : baseParser.pack, params : aParams};
																		json2object.reader.DataBuilder.changeFunction("loadJsonArray", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25217, 25222)}, {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.ENew(cls, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25234, 25240)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25242, 25248)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("NONE")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25250, 25254)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25225, 25255)}, "loadJson"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25225, 25264)}, [{expr : haxe.macro.ExprDef.EObjectDecl([{field : "value", expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("JArray")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25284, 25290)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("a")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25291, 25292)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25284, 25293)}, quotes : haxe.macro.QuoteStatus.Unquoted}, {field : "pos", expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25299, 25305)}, "revert"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25299, 25312)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25313, 25316)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25299, 25317)}, quotes : haxe.macro.QuoteStatus.Unquoted}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25277, 25318)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25332, 25340)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25225, 25341)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25217, 25341)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25204, 25355)});
																		json2object.reader.DataBuilder.changeFunction("loadJsonNull", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25413, 25418)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25421, 25425)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25413, 25425)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 25412, 25427)});
																	} else {
																		hasOneFrom = false;
																	};
																};
															} else {
																if (i == 0) {
																	var t = fromType.t;
																	if (st.isPrivate) {
																		var privateType = json2object.TypeUtils.copyType(st);
																		t = haxe.macro.Context.getType(privateType.name);
																	};
																	var cls = {name : baseParser.name, pack : baseParser.pack, params : [haxe.macro.TypeParam.TPType({
																		{};
																		@:ast(switch (type) {
	case null:
		null;	
	case TEnum(_.get().isPrivate => true, _):
		direct();	
	case TInst(_.get().isPrivate => true, _):
		direct();	
	case TType(_.get().isPrivate => true, _):
		direct();	
	case TAbstract(_.get().isPrivate => true, _):
		direct();	
	case TMono(_):
		direct();	
	case TEnum(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TInst(_.get() => classType, params):
		switch (classType.kind) {
			case KTypeParameter(_):
				var ct = asComplexType(classType.name);
				switch toType(ct) {
					case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
						ct;					
					default:
						direct();					
				};			
			default:
				TPath(toTypePath(classType, params));			
		};	
	case TType(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TFun(args, ret):
		TFunction([for (a  in  args) a.opt ? nullable(toComplexType(a.t)) : toComplexType(a.t)], toComplexType(ret));	
	case TAnonymous(_.get() => { fields : fields }):
		TAnonymous([for (cf  in  fields) toField(cf)]);	
	case TDynamic(t):
		if (t == null) {
			(TPath({ pack : [], name : "Dynamic", params : [] }) : haxe.macro.Expr.ComplexType);
		} else {
			var ct = toComplexType(t);
			(TPath({ pack : [], name : "Dynamic", params : [TPType(ct)] }) : haxe.macro.Expr.ComplexType);
		};	
	case TLazy(f):
		toComplexType(f());	
	case TAbstract(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	default:
		throw "Invalid type";	
}) if (t == null) {
																			null;
																		} else switch (@:exhaustive enumIndex t) {
																			case 0: {
																				var `9 = t[0];
																				{
																					haxe.macro.TypeTools.toComplexType(t);
																				};
																			};
																			case 1: {
																				var `4 = t[0];
																				var `5 = t[1];
																				{
																					var _hx_tmp;
																					var _hx_tmp;
																					if ((_hx_tmp = `4.get().isPrivate) == true) {
																						{
																							haxe.macro.TypeTools.toComplexType(t);
																						};
																					} else {
																						var baseType = (_hx_tmp = `4.get());
																						var params = `5;
																						{
																							haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																						};
																					};
																				};
																			};
																			case 2: {
																				var `14 = t[0];
																				var `15 = t[1];
																				{
																					var _hx_tmp;
																					var _hx_tmp;
																					if ((_hx_tmp = `14.get().isPrivate) == true) {
																						{
																							haxe.macro.TypeTools.toComplexType(t);
																						};
																					} else {
																						var classType = (_hx_tmp = `14.get());
																						var params = `15;
																						{
																							@:ast(switch (classType.kind) {
	case KTypeParameter(_):
		var ct = asComplexType(classType.name);
		switch toType(ct) {
			case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
				ct;			
			default:
				direct();			
		};	
	default:
		TPath(toTypePath(classType, params));	
}) {
																								var ` = classType.kind;
																								if (enumIndex ` == 1) {
																									var `1 = `[0];
																									{
																										var ct = {
																											var s = classType.name;
																											var params = null;
																											haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.asTypePath(s, params));
																										};
																										@:ast(switch toType(ct) {
	case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
		ct;	
	default:
		direct();	
}) {
																											var ` = json2object.utils.TypeTools.toType(ct, null);
																											if (enumIndex ` == 0) {
																												var `1 = `[0];
																												if (enumIndex `1 == 2) {
																													var `2 = `1[0];
																													var `3 = `1[1];
																													{
																														var _hx_tmp;
																														{
																															var cl = (_hx_tmp = `2.get());
																															if ({
																																var ` = cl.kind;
																																if (enumIndex ` == 1) {
																																	var `1 = `[0];
																																	true;
																																} else false;
																															} && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")) {
																																ct;
																															} else {
																																haxe.macro.TypeTools.toComplexType(t);
																															};
																														};
																													};
																												} else {
																													haxe.macro.TypeTools.toComplexType(t);
																												};
																											} else {
																												haxe.macro.TypeTools.toComplexType(t);
																											};
																										};
																									};
																								} else {
																									haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(classType, params));
																								};
																							};
																						};
																					};
																				};
																			};
																			case 3: {
																				var `12 = t[0];
																				var `13 = t[1];
																				{
																					var _hx_tmp;
																					var _hx_tmp;
																					if ((_hx_tmp = `12.get().isPrivate) == true) {
																						{
																							haxe.macro.TypeTools.toComplexType(t);
																						};
																					} else {
																						var baseType = (_hx_tmp = `12.get());
																						var params = `13;
																						{
																							haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																						};
																					};
																				};
																			};
																			case 4: {
																				var `10 = t[0];
																				var `11 = t[1];
																				{
																					var args = `10;
																					var ret = `11;
																					{
																						haxe.macro.ComplexType.TFunction({
																							var ` = [];
																							{
																								var `1 = 0;
																								while (`1 < args.length) {
																									var a = args[`1];
																									++ `1;
																									`.push(if (a.opt) {
																										json2object.utils.TypeTools.nullable(json2object.utils.TypeTools.toComplexType(a.t));
																									} else {
																										json2object.utils.TypeTools.toComplexType(a.t);
																									});
																								};
																							};
																							`;
																						}, json2object.utils.TypeTools.toComplexType(ret));
																					};
																				};
																			};
																			case 5: {
																				var `6 = t[0];
																				{
																					var _hx_tmp;
																					{
																						var `7 = (_hx_tmp = `6.get()).fields;
																						var `8 = _hx_tmp.status;
																						{
																							var fields = `7;
																							{
																								haxe.macro.ComplexType.TAnonymous({
																									var ` = [];
																									{
																										var `1 = 0;
																										while (`1 < fields.length) {
																											var cf = fields[`1];
																											++ `1;
																											`.push(json2object.utils.TypeTools.toField(cf));
																										};
																									};
																									`;
																								});
																							};
																						};
																					};
																				};
																			};
																			case 6: {
																				var `2 = t[0];
																				{
																					var t = `2;
																					{
																						if (t == null) {
																							cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : []});
																						} else {
																							var ct = json2object.utils.TypeTools.toComplexType(t);
																							cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(ct)]});
																						};
																					};
																				};
																			};
																			case 7: {
																				var `3 = t[0];
																				{
																					var f = `3;
																					{
																						json2object.utils.TypeTools.toComplexType(f());
																					};
																				};
																			};
																			case 8: {
																				var ` = t[0];
																				var `1 = t[1];
																				{
																					var _hx_tmp;
																					var _hx_tmp;
																					if ((_hx_tmp = `.get().isPrivate) == true) {
																						{
																							haxe.macro.TypeTools.toComplexType(t);
																						};
																					} else {
																						var baseType = (_hx_tmp = `.get());
																						var params = `1;
																						{
																							haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																						};
																					};
																				};
																			};
																		};
																	})]};
																	var casting = if (st.isPrivate && haxe.macro.Context.defined("cpp") && ! haxe.macro.Context.defined("cppia")) {
																		var abstractType = {
																			{};
																			@:ast(switch (type) {
	case null:
		null;	
	case TEnum(_.get().isPrivate => true, _):
		direct();	
	case TInst(_.get().isPrivate => true, _):
		direct();	
	case TType(_.get().isPrivate => true, _):
		direct();	
	case TAbstract(_.get().isPrivate => true, _):
		direct();	
	case TMono(_):
		direct();	
	case TEnum(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TInst(_.get() => classType, params):
		switch (classType.kind) {
			case KTypeParameter(_):
				var ct = asComplexType(classType.name);
				switch toType(ct) {
					case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
						ct;					
					default:
						direct();					
				};			
			default:
				TPath(toTypePath(classType, params));			
		};	
	case TType(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TFun(args, ret):
		TFunction([for (a  in  args) a.opt ? nullable(toComplexType(a.t)) : toComplexType(a.t)], toComplexType(ret));	
	case TAnonymous(_.get() => { fields : fields }):
		TAnonymous([for (cf  in  fields) toField(cf)]);	
	case TDynamic(t):
		if (t == null) {
			(TPath({ pack : [], name : "Dynamic", params : [] }) : haxe.macro.Expr.ComplexType);
		} else {
			var ct = toComplexType(t);
			(TPath({ pack : [], name : "Dynamic", params : [TPType(ct)] }) : haxe.macro.Expr.ComplexType);
		};	
	case TLazy(f):
		toComplexType(f());	
	case TAbstract(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	default:
		throw "Invalid type";	
}) if (type == null) {
																				null;
																			} else switch (@:exhaustive enumIndex type) {
																				case 0: {
																					var `9 = type[0];
																					{
																						haxe.macro.TypeTools.toComplexType(type);
																					};
																				};
																				case 1: {
																					var `4 = type[0];
																					var `5 = type[1];
																					{
																						var _hx_tmp;
																						var _hx_tmp;
																						if ((_hx_tmp = `4.get().isPrivate) == true) {
																							{
																								haxe.macro.TypeTools.toComplexType(type);
																							};
																						} else {
																							var baseType = (_hx_tmp = `4.get());
																							var params = `5;
																							{
																								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																							};
																						};
																					};
																				};
																				case 2: {
																					var `14 = type[0];
																					var `15 = type[1];
																					{
																						var _hx_tmp;
																						var _hx_tmp;
																						if ((_hx_tmp = `14.get().isPrivate) == true) {
																							{
																								haxe.macro.TypeTools.toComplexType(type);
																							};
																						} else {
																							var classType = (_hx_tmp = `14.get());
																							var params = `15;
																							{
																								@:ast(switch (classType.kind) {
	case KTypeParameter(_):
		var ct = asComplexType(classType.name);
		switch toType(ct) {
			case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
				ct;			
			default:
				direct();			
		};	
	default:
		TPath(toTypePath(classType, params));	
}) {
																									var ` = classType.kind;
																									if (enumIndex ` == 1) {
																										var `1 = `[0];
																										{
																											var ct = {
																												var s = classType.name;
																												var params = null;
																												haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.asTypePath(s, params));
																											};
																											@:ast(switch toType(ct) {
	case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
		ct;	
	default:
		direct();	
}) {
																												var ` = json2object.utils.TypeTools.toType(ct, null);
																												if (enumIndex ` == 0) {
																													var `1 = `[0];
																													if (enumIndex `1 == 2) {
																														var `2 = `1[0];
																														var `3 = `1[1];
																														{
																															var _hx_tmp;
																															{
																																var cl = (_hx_tmp = `2.get());
																																if ({
																																	var ` = cl.kind;
																																	if (enumIndex ` == 1) {
																																		var `1 = `[0];
																																		true;
																																	} else false;
																																} && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")) {
																																	ct;
																																} else {
																																	haxe.macro.TypeTools.toComplexType(type);
																																};
																															};
																														};
																													} else {
																														haxe.macro.TypeTools.toComplexType(type);
																													};
																												} else {
																													haxe.macro.TypeTools.toComplexType(type);
																												};
																											};
																										};
																									} else {
																										haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(classType, params));
																									};
																								};
																							};
																						};
																					};
																				};
																				case 3: {
																					var `12 = type[0];
																					var `13 = type[1];
																					{
																						var _hx_tmp;
																						var _hx_tmp;
																						if ((_hx_tmp = `12.get().isPrivate) == true) {
																							{
																								haxe.macro.TypeTools.toComplexType(type);
																							};
																						} else {
																							var baseType = (_hx_tmp = `12.get());
																							var params = `13;
																							{
																								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																							};
																						};
																					};
																				};
																				case 4: {
																					var `10 = type[0];
																					var `11 = type[1];
																					{
																						var args = `10;
																						var ret = `11;
																						{
																							haxe.macro.ComplexType.TFunction({
																								var ` = [];
																								{
																									var `1 = 0;
																									while (`1 < args.length) {
																										var a = args[`1];
																										++ `1;
																										`.push(if (a.opt) {
																											json2object.utils.TypeTools.nullable(json2object.utils.TypeTools.toComplexType(a.t));
																										} else {
																											json2object.utils.TypeTools.toComplexType(a.t);
																										});
																									};
																								};
																								`;
																							}, json2object.utils.TypeTools.toComplexType(ret));
																						};
																					};
																				};
																				case 5: {
																					var `6 = type[0];
																					{
																						var _hx_tmp;
																						{
																							var `7 = (_hx_tmp = `6.get()).fields;
																							var `8 = _hx_tmp.status;
																							{
																								var fields = `7;
																								{
																									haxe.macro.ComplexType.TAnonymous({
																										var ` = [];
																										{
																											var `1 = 0;
																											while (`1 < fields.length) {
																												var cf = fields[`1];
																												++ `1;
																												`.push(json2object.utils.TypeTools.toField(cf));
																											};
																										};
																										`;
																									});
																								};
																							};
																						};
																					};
																				};
																				case 6: {
																					var `2 = type[0];
																					{
																						var t = `2;
																						{
																							if (t == null) {
																								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : []});
																							} else {
																								var ct = json2object.utils.TypeTools.toComplexType(t);
																								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(ct)]});
																							};
																						};
																					};
																				};
																				case 7: {
																					var `3 = type[0];
																					{
																						var f = `3;
																						{
																							json2object.utils.TypeTools.toComplexType(f());
																						};
																					};
																				};
																				case 8: {
																					var ` = type[0];
																					var `1 = type[1];
																					{
																						var _hx_tmp;
																						var _hx_tmp;
																						if ((_hx_tmp = `.get().isPrivate) == true) {
																							{
																								haxe.macro.TypeTools.toComplexType(type);
																							};
																						} else {
																							var baseType = (_hx_tmp = `.get());
																							var params = `1;
																							{
																								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																							};
																						};
																					};
																				};
																			};
																		};
																		cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EVars([{name : "__tmp__new", type : null, expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.ENew(cls, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26086, 26092)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26094, 26100)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("NONE")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26102, 26106)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26077, 26107)}, "loadJson"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26077, 26116)}, [{expr : haxe.macro.ExprDef.EObjectDecl([{field : "value", expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("JObject")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26138, 26145)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("o")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26146, 26147)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26138, 26148)}, quotes : haxe.macro.QuoteStatus.Unquoted}, {field : "pos", expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26154, 26160)}, "revert"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26154, 26167)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26168, 26171)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26154, 26172)}, quotes : haxe.macro.QuoteStatus.Unquoted}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26131, 26173)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26188, 26196)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26077, 26197)}, isFinal : cast false, meta : []}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26060, 26198)}, {expr : haxe.macro.ExprDef.ECast({expr : haxe.macro.ExprDef.EParenthesis({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EParenthesis({expr : haxe.macro.ExprDef.ECheckType({expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("cpp")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26218, 26221)}, "Pointer"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26218, 26229)}, "addressOf"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26218, 26239)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("__tmp__new")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26240, 26250)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26218, 26251)}, "reinterpret"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26218, 26263)}, []), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26218, 26265)}, haxe.macro.ComplexType.TPath({pack : ["cpp"], name : "Pointer", params : [haxe.macro.TypeParam.TPType(abstractType)]})), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26217, 26295)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26217, 26295)}, "value"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26217, 26301)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26216, 26302)}, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26211, 26302)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26046, 26316)};
																	} else {
																		if (st.isPrivate && (haxe.macro.Context.defined("cs") || haxe.macro.Context.defined("java") || haxe.macro.Context.defined("hl"))) {
																			haxe.macro.Context.fatalError("json2object: Abstract of private are not supported on this target", json2object.reader.DataBuilder.callPosition);
																		} else {
																			cast {expr : haxe.macro.ExprDef.ECast({expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.ENew(cls, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26637, 26643)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26645, 26651)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("NONE")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26653, 26657)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26628, 26658)}, "loadJson"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26628, 26667)}, [{expr : haxe.macro.ExprDef.EObjectDecl([{field : "value", expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("JObject")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26687, 26694)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("o")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26695, 26696)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26687, 26697)}, quotes : haxe.macro.QuoteStatus.Unquoted}, {field : "pos", expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26703, 26709)}, "revert"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26703, 26716)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26717, 26720)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26703, 26721)}, quotes : haxe.macro.QuoteStatus.Unquoted}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26680, 26722)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26735, 26743)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26628, 26744)}, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26623, 26744)};
																		};
																	};
																	json2object.reader.DataBuilder.changeFunction("loadJsonObject", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26826, 26831)}, casting), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26826, 26842)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26814, 26854)});
																	json2object.reader.DataBuilder.changeFunction("loadJsonNull", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26912, 26917)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26920, 26924)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26912, 26924)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 26911, 26926)});
																	hasOneFrom = true;
																};
															};
														};
													};
												};
											};
										};
										case 5: {
											var `3 = `[0];
											{
												var _hx_tmp;
												{
													var st = (_hx_tmp = `3.get());
													{
														if (i == 0) {
															var cls = {name : baseParser.name, pack : baseParser.pack, params : [haxe.macro.TypeParam.TPType({
																var type = fromType.t;
																{
																	{};
																	@:ast(switch (type) {
	case null:
		null;	
	case TEnum(_.get().isPrivate => true, _):
		direct();	
	case TInst(_.get().isPrivate => true, _):
		direct();	
	case TType(_.get().isPrivate => true, _):
		direct();	
	case TAbstract(_.get().isPrivate => true, _):
		direct();	
	case TMono(_):
		direct();	
	case TEnum(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TInst(_.get() => classType, params):
		switch (classType.kind) {
			case KTypeParameter(_):
				var ct = asComplexType(classType.name);
				switch toType(ct) {
					case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
						ct;					
					default:
						direct();					
				};			
			default:
				TPath(toTypePath(classType, params));			
		};	
	case TType(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TFun(args, ret):
		TFunction([for (a  in  args) a.opt ? nullable(toComplexType(a.t)) : toComplexType(a.t)], toComplexType(ret));	
	case TAnonymous(_.get() => { fields : fields }):
		TAnonymous([for (cf  in  fields) toField(cf)]);	
	case TDynamic(t):
		if (t == null) {
			(TPath({ pack : [], name : "Dynamic", params : [] }) : haxe.macro.Expr.ComplexType);
		} else {
			var ct = toComplexType(t);
			(TPath({ pack : [], name : "Dynamic", params : [TPType(ct)] }) : haxe.macro.Expr.ComplexType);
		};	
	case TLazy(f):
		toComplexType(f());	
	case TAbstract(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	default:
		throw "Invalid type";	
}) if (type == null) {
																		null;
																	} else switch (@:exhaustive enumIndex type) {
																		case 0: {
																			var `9 = type[0];
																			{
																				haxe.macro.TypeTools.toComplexType(type);
																			};
																		};
																		case 1: {
																			var `4 = type[0];
																			var `5 = type[1];
																			{
																				var _hx_tmp;
																				var _hx_tmp;
																				if ((_hx_tmp = `4.get().isPrivate) == true) {
																					{
																						haxe.macro.TypeTools.toComplexType(type);
																					};
																				} else {
																					var baseType = (_hx_tmp = `4.get());
																					var params = `5;
																					{
																						haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																					};
																				};
																			};
																		};
																		case 2: {
																			var `14 = type[0];
																			var `15 = type[1];
																			{
																				var _hx_tmp;
																				var _hx_tmp;
																				if ((_hx_tmp = `14.get().isPrivate) == true) {
																					{
																						haxe.macro.TypeTools.toComplexType(type);
																					};
																				} else {
																					var classType = (_hx_tmp = `14.get());
																					var params = `15;
																					{
																						@:ast(switch (classType.kind) {
	case KTypeParameter(_):
		var ct = asComplexType(classType.name);
		switch toType(ct) {
			case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
				ct;			
			default:
				direct();			
		};	
	default:
		TPath(toTypePath(classType, params));	
}) {
																							var ` = classType.kind;
																							if (enumIndex ` == 1) {
																								var `1 = `[0];
																								{
																									var ct = {
																										var s = classType.name;
																										var params = null;
																										haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.asTypePath(s, params));
																									};
																									@:ast(switch toType(ct) {
	case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
		ct;	
	default:
		direct();	
}) {
																										var ` = json2object.utils.TypeTools.toType(ct, null);
																										if (enumIndex ` == 0) {
																											var `1 = `[0];
																											if (enumIndex `1 == 2) {
																												var `2 = `1[0];
																												var `3 = `1[1];
																												{
																													var _hx_tmp;
																													{
																														var cl = (_hx_tmp = `2.get());
																														if ({
																															var ` = cl.kind;
																															if (enumIndex ` == 1) {
																																var `1 = `[0];
																																true;
																															} else false;
																														} && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")) {
																															ct;
																														} else {
																															haxe.macro.TypeTools.toComplexType(type);
																														};
																													};
																												};
																											} else {
																												haxe.macro.TypeTools.toComplexType(type);
																											};
																										} else {
																											haxe.macro.TypeTools.toComplexType(type);
																										};
																									};
																								};
																							} else {
																								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(classType, params));
																							};
																						};
																					};
																				};
																			};
																		};
																		case 3: {
																			var `12 = type[0];
																			var `13 = type[1];
																			{
																				var _hx_tmp;
																				var _hx_tmp;
																				if ((_hx_tmp = `12.get().isPrivate) == true) {
																					{
																						haxe.macro.TypeTools.toComplexType(type);
																					};
																				} else {
																					var baseType = (_hx_tmp = `12.get());
																					var params = `13;
																					{
																						haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																					};
																				};
																			};
																		};
																		case 4: {
																			var `10 = type[0];
																			var `11 = type[1];
																			{
																				var args = `10;
																				var ret = `11;
																				{
																					haxe.macro.ComplexType.TFunction({
																						var ` = [];
																						{
																							var `1 = 0;
																							while (`1 < args.length) {
																								var a = args[`1];
																								++ `1;
																								`.push(if (a.opt) {
																									json2object.utils.TypeTools.nullable(json2object.utils.TypeTools.toComplexType(a.t));
																								} else {
																									json2object.utils.TypeTools.toComplexType(a.t);
																								});
																							};
																						};
																						`;
																					}, json2object.utils.TypeTools.toComplexType(ret));
																				};
																			};
																		};
																		case 5: {
																			var `6 = type[0];
																			{
																				var _hx_tmp;
																				{
																					var `7 = (_hx_tmp = `6.get()).fields;
																					var `8 = _hx_tmp.status;
																					{
																						var fields = `7;
																						{
																							haxe.macro.ComplexType.TAnonymous({
																								var ` = [];
																								{
																									var `1 = 0;
																									while (`1 < fields.length) {
																										var cf = fields[`1];
																										++ `1;
																										`.push(json2object.utils.TypeTools.toField(cf));
																									};
																								};
																								`;
																							});
																						};
																					};
																				};
																			};
																		};
																		case 6: {
																			var `2 = type[0];
																			{
																				var t = `2;
																				{
																					if (t == null) {
																						cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : []});
																					} else {
																						var ct = json2object.utils.TypeTools.toComplexType(t);
																						cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(ct)]});
																					};
																				};
																			};
																		};
																		case 7: {
																			var `3 = type[0];
																			{
																				var f = `3;
																				{
																					json2object.utils.TypeTools.toComplexType(f());
																				};
																			};
																		};
																		case 8: {
																			var ` = type[0];
																			var `1 = type[1];
																			{
																				var _hx_tmp;
																				var _hx_tmp;
																				if ((_hx_tmp = `.get().isPrivate) == true) {
																					{
																						haxe.macro.TypeTools.toComplexType(type);
																					};
																				} else {
																					var baseType = (_hx_tmp = `.get());
																					var params = `1;
																					{
																						haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																					};
																				};
																			};
																		};
																	};
																};
															})]};
															json2object.reader.DataBuilder.changeFunction("loadJsonObject", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29188, 29193)}, {expr : haxe.macro.ExprDef.ECast({expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.ENew(cls, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29210, 29216)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29218, 29224)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("NONE")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29226, 29230)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29201, 29231)}, "loadJson"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29201, 29240)}, [{expr : haxe.macro.ExprDef.EObjectDecl([{field : "value", expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("JObject")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29260, 29267)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("o")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29268, 29269)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29260, 29270)}, quotes : haxe.macro.QuoteStatus.Unquoted}, {field : "pos", expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29276, 29282)}, "revert"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29276, 29289)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29290, 29293)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29276, 29294)}, quotes : haxe.macro.QuoteStatus.Unquoted}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29253, 29295)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29308, 29316)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29201, 29317)}, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29196, 29317)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29188, 29317)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29176, 29329)});
															json2object.reader.DataBuilder.changeFunction("loadJsonNull", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29387, 29392)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29395, 29399)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29387, 29399)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29386, 29401)});
															hasOneFrom = true;
														};
													};
												};
											};
										};
										case 8: {
											var `1 = `[0];
											var `2 = `[1];
											{
												var _hx_tmp;
												{
													var st = (_hx_tmp = `1.get());
													var sp = `2;
													{
														if (st.module == "StdTypes") {
															var cls = {name : baseParser.name, pack : baseParser.pack, params : [haxe.macro.TypeParam.TPType({
																var type = fromType.t;
																{
																	{};
																	@:ast(switch (type) {
	case null:
		null;	
	case TEnum(_.get().isPrivate => true, _):
		direct();	
	case TInst(_.get().isPrivate => true, _):
		direct();	
	case TType(_.get().isPrivate => true, _):
		direct();	
	case TAbstract(_.get().isPrivate => true, _):
		direct();	
	case TMono(_):
		direct();	
	case TEnum(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TInst(_.get() => classType, params):
		switch (classType.kind) {
			case KTypeParameter(_):
				var ct = asComplexType(classType.name);
				switch toType(ct) {
					case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
						ct;					
					default:
						direct();					
				};			
			default:
				TPath(toTypePath(classType, params));			
		};	
	case TType(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TFun(args, ret):
		TFunction([for (a  in  args) a.opt ? nullable(toComplexType(a.t)) : toComplexType(a.t)], toComplexType(ret));	
	case TAnonymous(_.get() => { fields : fields }):
		TAnonymous([for (cf  in  fields) toField(cf)]);	
	case TDynamic(t):
		if (t == null) {
			(TPath({ pack : [], name : "Dynamic", params : [] }) : haxe.macro.Expr.ComplexType);
		} else {
			var ct = toComplexType(t);
			(TPath({ pack : [], name : "Dynamic", params : [TPType(ct)] }) : haxe.macro.Expr.ComplexType);
		};	
	case TLazy(f):
		toComplexType(f());	
	case TAbstract(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	default:
		throw "Invalid type";	
}) if (type == null) {
																		null;
																	} else switch (@:exhaustive enumIndex type) {
																		case 0: {
																			var `9 = type[0];
																			{
																				haxe.macro.TypeTools.toComplexType(type);
																			};
																		};
																		case 1: {
																			var `4 = type[0];
																			var `5 = type[1];
																			{
																				var _hx_tmp;
																				var _hx_tmp;
																				if ((_hx_tmp = `4.get().isPrivate) == true) {
																					{
																						haxe.macro.TypeTools.toComplexType(type);
																					};
																				} else {
																					var baseType = (_hx_tmp = `4.get());
																					var params = `5;
																					{
																						haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																					};
																				};
																			};
																		};
																		case 2: {
																			var `14 = type[0];
																			var `15 = type[1];
																			{
																				var _hx_tmp;
																				var _hx_tmp;
																				if ((_hx_tmp = `14.get().isPrivate) == true) {
																					{
																						haxe.macro.TypeTools.toComplexType(type);
																					};
																				} else {
																					var classType = (_hx_tmp = `14.get());
																					var params = `15;
																					{
																						@:ast(switch (classType.kind) {
	case KTypeParameter(_):
		var ct = asComplexType(classType.name);
		switch toType(ct) {
			case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
				ct;			
			default:
				direct();			
		};	
	default:
		TPath(toTypePath(classType, params));	
}) {
																							var ` = classType.kind;
																							if (enumIndex ` == 1) {
																								var `1 = `[0];
																								{
																									var ct = {
																										var s = classType.name;
																										var params = null;
																										haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.asTypePath(s, params));
																									};
																									@:ast(switch toType(ct) {
	case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
		ct;	
	default:
		direct();	
}) {
																										var ` = json2object.utils.TypeTools.toType(ct, null);
																										if (enumIndex ` == 0) {
																											var `1 = `[0];
																											if (enumIndex `1 == 2) {
																												var `2 = `1[0];
																												var `3 = `1[1];
																												{
																													var _hx_tmp;
																													{
																														var cl = (_hx_tmp = `2.get());
																														if ({
																															var ` = cl.kind;
																															if (enumIndex ` == 1) {
																																var `1 = `[0];
																																true;
																															} else false;
																														} && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")) {
																															ct;
																														} else {
																															haxe.macro.TypeTools.toComplexType(type);
																														};
																													};
																												};
																											} else {
																												haxe.macro.TypeTools.toComplexType(type);
																											};
																										} else {
																											haxe.macro.TypeTools.toComplexType(type);
																										};
																									};
																								};
																							} else {
																								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(classType, params));
																							};
																						};
																					};
																				};
																			};
																		};
																		case 3: {
																			var `12 = type[0];
																			var `13 = type[1];
																			{
																				var _hx_tmp;
																				var _hx_tmp;
																				if ((_hx_tmp = `12.get().isPrivate) == true) {
																					{
																						haxe.macro.TypeTools.toComplexType(type);
																					};
																				} else {
																					var baseType = (_hx_tmp = `12.get());
																					var params = `13;
																					{
																						haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																					};
																				};
																			};
																		};
																		case 4: {
																			var `10 = type[0];
																			var `11 = type[1];
																			{
																				var args = `10;
																				var ret = `11;
																				{
																					haxe.macro.ComplexType.TFunction({
																						var ` = [];
																						{
																							var `1 = 0;
																							while (`1 < args.length) {
																								var a = args[`1];
																								++ `1;
																								`.push(if (a.opt) {
																									json2object.utils.TypeTools.nullable(json2object.utils.TypeTools.toComplexType(a.t));
																								} else {
																									json2object.utils.TypeTools.toComplexType(a.t);
																								});
																							};
																						};
																						`;
																					}, json2object.utils.TypeTools.toComplexType(ret));
																				};
																			};
																		};
																		case 5: {
																			var `6 = type[0];
																			{
																				var _hx_tmp;
																				{
																					var `7 = (_hx_tmp = `6.get()).fields;
																					var `8 = _hx_tmp.status;
																					{
																						var fields = `7;
																						{
																							haxe.macro.ComplexType.TAnonymous({
																								var ` = [];
																								{
																									var `1 = 0;
																									while (`1 < fields.length) {
																										var cf = fields[`1];
																										++ `1;
																										`.push(json2object.utils.TypeTools.toField(cf));
																									};
																								};
																								`;
																							});
																						};
																					};
																				};
																			};
																		};
																		case 6: {
																			var `2 = type[0];
																			{
																				var t = `2;
																				{
																					if (t == null) {
																						cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : []});
																					} else {
																						var ct = json2object.utils.TypeTools.toComplexType(t);
																						cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(ct)]});
																					};
																				};
																			};
																		};
																		case 7: {
																			var `3 = type[0];
																			{
																				var f = `3;
																				{
																					json2object.utils.TypeTools.toComplexType(f());
																				};
																			};
																		};
																		case 8: {
																			var ` = type[0];
																			var `1 = type[1];
																			{
																				var _hx_tmp;
																				var _hx_tmp;
																				if ((_hx_tmp = `.get().isPrivate) == true) {
																					{
																						haxe.macro.TypeTools.toComplexType(type);
																					};
																				} else {
																					var baseType = (_hx_tmp = `.get());
																					var params = `1;
																					{
																						haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
																					};
																				};
																			};
																		};
																	};
																};
															})]};
															@:ast(switch (st.name) {
	case "Int":
		if (!hasFromFloat) {
			if (i == 0) {
				makeIntParser(parser, fromType.t);
			} else {
				changeFunction("loadJsonNumber", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27445, 27450) }, { expr : ECall({ expr : EField({ expr : ENew(cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27462, 27468) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27470, 27476) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27478, 27482) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27453, 27483) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27453, 27492) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : ECall({ expr : EConst(CIdent("JNumber")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27515, 27522) }, [{ expr : EConst(CIdent("f")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27523, 27524) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27515, 27525) }, quotes : Unquoted }, { field : "pos", expr : { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27531, 27537) }, "revert"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27531, 27544) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27545, 27548) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27531, 27549) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27508, 27550) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27567, 27575) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27453, 27576) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27445, 27576) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27429, 27593) } : haxe.macro.Expr));
			};
			hasOneFrom = true;
		};	
	case "Float":
		if (i == 0) {
			makeFloatParser(parser, fromType.t);
		} else {
			changeFunction("loadJsonNumber", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27873, 27878) }, { expr : ECall({ expr : EField({ expr : ENew(cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27890, 27896) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27898, 27904) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27906, 27910) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27881, 27911) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27881, 27920) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : ECall({ expr : EConst(CIdent("JNumber")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27942, 27949) }, [{ expr : EConst(CIdent("f")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27950, 27951) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27942, 27952) }, quotes : Unquoted }, { field : "pos", expr : { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27958, 27964) }, "revert"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27958, 27971) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27972, 27975) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27958, 27976) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27935, 27977) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27993, 28001) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27881, 28002) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27873, 28002) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27858, 28018) } : haxe.macro.Expr));
		};
		hasFromFloat = true;
		hasOneFrom = true;	
	case "Bool":
		if (i == 0) {
			makeBoolParser(parser, fromType.t);
		} else {
			changeFunction("loadJsonBool", parser, ({ expr : EBlock([{ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28310, 28315) }, { expr : ECall({ expr : EField({ expr : ENew(cls, [{ expr : EConst(CIdent("errors")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28327, 28333) }, { expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28335, 28341) }, { expr : EConst(CIdent("NONE")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28343, 28347) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28318, 28348) }, "loadJson"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28318, 28357) }, [{ expr : EObjectDecl([{ field : "value", expr : { expr : ECall({ expr : EConst(CIdent("JBool")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28379, 28384) }, [{ expr : EConst(CIdent("b")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28385, 28386) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28379, 28387) }, quotes : Unquoted }, { field : "pos", expr : { expr : ECall({ expr : EField({ expr : EConst(CIdent("putils")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28393, 28399) }, "revert"), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28393, 28406) }, [{ expr : EConst(CIdent("pos")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28407, 28410) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28393, 28411) }, quotes : Unquoted }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28372, 28412) }, { expr : EConst(CIdent("variable")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28428, 28436) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28318, 28437) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28310, 28437) }]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28295, 28453) } : haxe.macro.Expr));
		};
		hasOneFrom = true;	
}) {
																var ` = st.name;
																switch (`) {
																	case "Bool": {
																		{
																			if (i == 0) {
																				json2object.reader.DataBuilder.makeBoolParser(parser, fromType.t);
																			} else {
																				json2object.reader.DataBuilder.changeFunction("loadJsonBool", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28310, 28315)}, {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.ENew(cls, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28327, 28333)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28335, 28341)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("NONE")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28343, 28347)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28318, 28348)}, "loadJson"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28318, 28357)}, [{expr : haxe.macro.ExprDef.EObjectDecl([{field : "value", expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("JBool")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28379, 28384)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("b")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28385, 28386)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28379, 28387)}, quotes : haxe.macro.QuoteStatus.Unquoted}, {field : "pos", expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28393, 28399)}, "revert"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28393, 28406)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28407, 28410)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28393, 28411)}, quotes : haxe.macro.QuoteStatus.Unquoted}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28372, 28412)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28428, 28436)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28318, 28437)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28310, 28437)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 28295, 28453)});
																			};
																			hasOneFrom = true;
																		};
																	};
																	case "Float": {
																		{
																			if (i == 0) {
																				json2object.reader.DataBuilder.makeFloatParser(parser, fromType.t);
																			} else {
																				json2object.reader.DataBuilder.changeFunction("loadJsonNumber", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27873, 27878)}, {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.ENew(cls, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27890, 27896)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27898, 27904)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("NONE")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27906, 27910)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27881, 27911)}, "loadJson"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27881, 27920)}, [{expr : haxe.macro.ExprDef.EObjectDecl([{field : "value", expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("JNumber")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27942, 27949)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("f")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27950, 27951)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27942, 27952)}, quotes : haxe.macro.QuoteStatus.Unquoted}, {field : "pos", expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27958, 27964)}, "revert"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27958, 27971)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27972, 27975)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27958, 27976)}, quotes : haxe.macro.QuoteStatus.Unquoted}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27935, 27977)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27993, 28001)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27881, 28002)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27873, 28002)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27858, 28018)});
																			};
																			hasFromFloat = true;
																			hasOneFrom = true;
																		};
																	};
																	case "Int": {
																		{
																			if (! hasFromFloat) {
																				if (i == 0) {
																					json2object.reader.DataBuilder.makeIntParser(parser, fromType.t);
																				} else {
																					json2object.reader.DataBuilder.changeFunction("loadJsonNumber", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27445, 27450)}, {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.ENew(cls, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27462, 27468)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27470, 27476)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("NONE")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27478, 27482)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27453, 27483)}, "loadJson"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27453, 27492)}, [{expr : haxe.macro.ExprDef.EObjectDecl([{field : "value", expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("JNumber")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27515, 27522)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("f")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27523, 27524)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27515, 27525)}, quotes : haxe.macro.QuoteStatus.Unquoted}, {field : "pos", expr : {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27531, 27537)}, "revert"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27531, 27544)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27545, 27548)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27531, 27549)}, quotes : haxe.macro.QuoteStatus.Unquoted}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27508, 27550)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27567, 27575)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27453, 27576)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27445, 27576)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 27429, 27593)});
																				};
																				hasOneFrom = true;
																			};
																		};
																	};
																};
															};
														} else {
															if (i == 0 && t.module == "haxe.ds.Map") {
																var key = sp[0];
																var value = sp[1];
																{
																	var ` = 0;
																	var `1 = t.params.length;
																	while (` < `1) {
																		var i = ` ++;
																		if ({
																			var t2 = t.params[i].t;
																			haxe.macro.Context.unify(key, t2);
																		}) {
																			key = p[i];
																		};
																		if ({
																			var t2 = t.params[i].t;
																			haxe.macro.Context.unify(value, t2);
																		}) {
																			value = p[i];
																		};
																	};
																};
																json2object.reader.DataBuilder.makeMapParser(parser, key, value, baseParser);
																hasOneFrom = true;
															};
														};
													};
												};
											};
										};
										default: {}
									};
								};
								i ++;
							};
						};
						if (json2object.reader.DataBuilder.isNullable(t.type)) {
							json2object.reader.DataBuilder.changeFunction("loadJsonNull", parser, cast {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29560, 29565)}, {expr : haxe.macro.ExprDef.ECast({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29573, 29577)}, null), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29568, 29577)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29560, 29577)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 29559, 29579)});
						};
					};
				};
			};
		} else {};
		if (! hasOneFrom) {
			haxe.macro.Context.fatalError("json2object: No parser can be generated for " + haxe.macro.TypeTools.toString(type) + " as it has no supported @:from", json2object.reader.DataBuilder.callPosition);
		};
	}

	@:has_untyped @:value({ base : null })
	public static function makeParser(c:haxe.macro.BaseType, type:haxe.macro.Type, base:Null<haxe.macro.Type> = null) {
		if (base == null) {
			base = type;
		};
		var parserMapName = haxe.macro.TypeTools.toString(base);
		if ({
			var this = json2object.reader.DataBuilder.parsers;
			cast this.exists(parserMapName);
		}) {
			return {
				var this = json2object.reader.DataBuilder.parsers;
				cast this.get(parserMapName);
			};
		};
		var defaultValueExpr = @:ast(switch (type) {
	case TAbstract(_.get() => t, _):
		switch (t.name) {
			case "Int", "Float", "Single" if (!isNullable(base) && t.module == "StdTypes"):
				({ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30203, 30208) }, { expr : EConst(CInt("0")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30211, 30212) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30203, 30212) } : haxe.macro.Expr);			
			case "UInt" if (!isNullable(base) && t.module == "UInt"):
				({ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30289, 30294) }, { expr : EConst(CInt("0")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30297, 30298) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30289, 30298) } : haxe.macro.Expr);			
			case "Bool" if (!isNullable(base) && t.module == "StdTypes"):
				({ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30379, 30384) }, { expr : EConst(CIdent("false")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30387, 30392) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30379, 30392) } : haxe.macro.Expr);			
			default:
				({ expr : EBlock([]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30414, 30416) } : haxe.macro.Expr);			
		};	
	default:
		({ expr : EBlock([]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30442, 30444) } : haxe.macro.Expr);	
}) if (enumIndex type == 8) {
			var ` = type[0];
			var `1 = type[1];
			{
				var _hx_tmp;
				{
					var t = (_hx_tmp = `.get());
					{
						@:ast(switch (t.name) {
	case "Int", "Float", "Single" if (!isNullable(base) && t.module == "StdTypes"):
		({ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30203, 30208) }, { expr : EConst(CInt("0")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30211, 30212) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30203, 30212) } : haxe.macro.Expr);	
	case "UInt" if (!isNullable(base) && t.module == "UInt"):
		({ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30289, 30294) }, { expr : EConst(CInt("0")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30297, 30298) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30289, 30298) } : haxe.macro.Expr);	
	case "Bool" if (!isNullable(base) && t.module == "StdTypes"):
		({ expr : EBinop(OpAssign, { expr : EConst(CIdent("value")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30379, 30384) }, { expr : EConst(CIdent("false")), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30387, 30392) }), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30379, 30392) } : haxe.macro.Expr);	
	default:
		({ expr : EBlock([]), pos : untyped $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30414, 30416) } : haxe.macro.Expr);	
}) {
							var ` = t.name;
							switch (`) {
								case "Bool": {
									if (! json2object.reader.DataBuilder.isNullable(base) && t.module == "StdTypes") {
										cast {expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30379, 30384)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("false")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30387, 30392)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30379, 30392)};
									} else {
										cast {expr : haxe.macro.ExprDef.EBlock([]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30414, 30416)};
									};
								};
								case "Float", "Int", "Single": {
									if (! json2object.reader.DataBuilder.isNullable(base) && t.module == "StdTypes") {
										cast {expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30203, 30208)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CInt("0")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30211, 30212)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30203, 30212)};
									} else {
										cast {expr : haxe.macro.ExprDef.EBlock([]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30414, 30416)};
									};
								};
								case "UInt": {
									if (! json2object.reader.DataBuilder.isNullable(base) && t.module == "UInt") {
										cast {expr : haxe.macro.ExprDef.EBinop(haxe.macro.Binop.OpAssign, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("value")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30289, 30294)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CInt("0")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30297, 30298)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30289, 30298)};
									} else {
										cast {expr : haxe.macro.ExprDef.EBlock([]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30414, 30416)};
									};
								};
								default: {
									cast {expr : haxe.macro.ExprDef.EBlock([]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30414, 30416)};
								}
							};
						};
					};
				};
			};
		} else {
			cast {expr : haxe.macro.ExprDef.EBlock([]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30442, 30444)};
		};
		var parserName = c.name + "_" + (json2object.reader.DataBuilder.counter ++);
		var parent = {name : "BaseParser", pack : ["json2object", "reader"], params : [haxe.macro.TypeParam.TPType({
			{};
			@:ast(switch (type) {
	case null:
		null;	
	case TEnum(_.get().isPrivate => true, _):
		direct();	
	case TInst(_.get().isPrivate => true, _):
		direct();	
	case TType(_.get().isPrivate => true, _):
		direct();	
	case TAbstract(_.get().isPrivate => true, _):
		direct();	
	case TMono(_):
		direct();	
	case TEnum(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TInst(_.get() => classType, params):
		switch (classType.kind) {
			case KTypeParameter(_):
				var ct = asComplexType(classType.name);
				switch toType(ct) {
					case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
						ct;					
					default:
						direct();					
				};			
			default:
				TPath(toTypePath(classType, params));			
		};	
	case TType(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TFun(args, ret):
		TFunction([for (a  in  args) a.opt ? nullable(toComplexType(a.t)) : toComplexType(a.t)], toComplexType(ret));	
	case TAnonymous(_.get() => { fields : fields }):
		TAnonymous([for (cf  in  fields) toField(cf)]);	
	case TDynamic(t):
		if (t == null) {
			(TPath({ pack : [], name : "Dynamic", params : [] }) : haxe.macro.Expr.ComplexType);
		} else {
			var ct = toComplexType(t);
			(TPath({ pack : [], name : "Dynamic", params : [TPType(ct)] }) : haxe.macro.Expr.ComplexType);
		};	
	case TLazy(f):
		toComplexType(f());	
	case TAbstract(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	default:
		throw "Invalid type";	
}) if (base == null) {
				null;
			} else switch (@:exhaustive enumIndex base) {
				case 0: {
					var `9 = base[0];
					{
						haxe.macro.TypeTools.toComplexType(base);
					};
				};
				case 1: {
					var `4 = base[0];
					var `5 = base[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `4.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(base);
							};
						} else {
							var baseType = (_hx_tmp = `4.get());
							var params = `5;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
				case 2: {
					var `14 = base[0];
					var `15 = base[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `14.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(base);
							};
						} else {
							var classType = (_hx_tmp = `14.get());
							var params = `15;
							{
								@:ast(switch (classType.kind) {
	case KTypeParameter(_):
		var ct = asComplexType(classType.name);
		switch toType(ct) {
			case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
				ct;			
			default:
				direct();			
		};	
	default:
		TPath(toTypePath(classType, params));	
}) {
									var ` = classType.kind;
									if (enumIndex ` == 1) {
										var `1 = `[0];
										{
											var ct = {
												var s = classType.name;
												var params = null;
												haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.asTypePath(s, params));
											};
											@:ast(switch toType(ct) {
	case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
		ct;	
	default:
		direct();	
}) {
												var ` = json2object.utils.TypeTools.toType(ct, null);
												if (enumIndex ` == 0) {
													var `1 = `[0];
													if (enumIndex `1 == 2) {
														var `2 = `1[0];
														var `3 = `1[1];
														{
															var _hx_tmp;
															{
																var cl = (_hx_tmp = `2.get());
																if ({
																	var ` = cl.kind;
																	if (enumIndex ` == 1) {
																		var `1 = `[0];
																		true;
																	} else false;
																} && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")) {
																	ct;
																} else {
																	haxe.macro.TypeTools.toComplexType(base);
																};
															};
														};
													} else {
														haxe.macro.TypeTools.toComplexType(base);
													};
												} else {
													haxe.macro.TypeTools.toComplexType(base);
												};
											};
										};
									} else {
										haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(classType, params));
									};
								};
							};
						};
					};
				};
				case 3: {
					var `12 = base[0];
					var `13 = base[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `12.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(base);
							};
						} else {
							var baseType = (_hx_tmp = `12.get());
							var params = `13;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
				case 4: {
					var `10 = base[0];
					var `11 = base[1];
					{
						var args = `10;
						var ret = `11;
						{
							haxe.macro.ComplexType.TFunction({
								var ` = [];
								{
									var `1 = 0;
									while (`1 < args.length) {
										var a = args[`1];
										++ `1;
										`.push(if (a.opt) {
											json2object.utils.TypeTools.nullable(json2object.utils.TypeTools.toComplexType(a.t));
										} else {
											json2object.utils.TypeTools.toComplexType(a.t);
										});
									};
								};
								`;
							}, json2object.utils.TypeTools.toComplexType(ret));
						};
					};
				};
				case 5: {
					var `6 = base[0];
					{
						var _hx_tmp;
						{
							var `7 = (_hx_tmp = `6.get()).fields;
							var `8 = _hx_tmp.status;
							{
								var fields = `7;
								{
									haxe.macro.ComplexType.TAnonymous({
										var ` = [];
										{
											var `1 = 0;
											while (`1 < fields.length) {
												var cf = fields[`1];
												++ `1;
												`.push(json2object.utils.TypeTools.toField(cf));
											};
										};
										`;
									});
								};
							};
						};
					};
				};
				case 6: {
					var `2 = base[0];
					{
						var t = `2;
						{
							if (t == null) {
								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : []});
							} else {
								var ct = json2object.utils.TypeTools.toComplexType(t);
								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(ct)]});
							};
						};
					};
				};
				case 7: {
					var `3 = base[0];
					{
						var f = `3;
						{
							json2object.utils.TypeTools.toComplexType(f());
						};
					};
				};
				case 8: {
					var ` = base[0];
					var `1 = base[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(base);
							};
						} else {
							var baseType = (_hx_tmp = `.get());
							var params = `1;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
			};
		})]};
		var parser = cast {pack : [], name : parserName, pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30626, 31766), meta : [], params : [], isExtern : cast false, kind : haxe.macro.TypeDefKind.TDClass(parent, [], false, false, false), fields : [{name : "new", access : [haxe.macro.Access.APublic], kind : haxe.macro.FieldType.FFun({args : [{name : "errors", opt : cast true, type : haxe.macro.ComplexType.TPath({pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({pack : ["json2object"], name : "Error", params : []}))]}), value : {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30718, 30722)}}, {name : "putils", opt : cast true, type : haxe.macro.ComplexType.TPath({pack : ["json2object"], name : "PositionUtils", params : []}), value : {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("null")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30758, 30762)}}, {name : "errorType", opt : cast true, type : haxe.macro.ComplexType.TPath({pack : ["json2object"], name : "Error", params : [], sub : "ErrorType"}), value : {expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("json2object")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30803, 30814)}, "Error"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30803, 30820)}, "ErrorType"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30803, 30830)}, "NONE"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30803, 30835)}}], ret : null, expr : {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("super")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30843, 30848)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30849, 30855)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30857, 30863)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errorType")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30865, 30874)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30843, 30875)}, defaultValueExpr]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30837, 30905)}, params : []}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30665, 30905)}, {name : "onIncorrectType", access : [haxe.macro.Access.AOverride, haxe.macro.Access.APrivate], kind : haxe.macro.FieldType.FFun({args : [{name : "pos", opt : cast false, type : haxe.macro.ComplexType.TPath({pack : ["json2object"], name : "Position", params : []})}, {name : "variable", opt : cast false, type : haxe.macro.ComplexType.TPath({pack : [], name : "String", params : []})}], ret : null, expr : {expr : haxe.macro.ExprDef.EBlock([{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("errors")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31001, 31007)}, "push"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31001, 31012)}, [{expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("IncorrectType")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31013, 31026)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31027, 31035)}, haxe.macro.Context.makeExpr(haxe.macro.TypeTools.toString(type), $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31039, 31056)), {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31058, 31061)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31013, 31062)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31001, 31063)}, {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("super")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31069, 31074)}, "onIncorrectType"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31069, 31090)}, [{expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("pos")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31091, 31094)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("variable")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31096, 31104)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31069, 31105)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30995, 31111)}, params : []}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 30910, 31111)}, {name : "loadJsonNull", access : [haxe.macro.Access.AOverride, haxe.macro.Access.APrivate], kind : haxe.macro.FieldType.FFun({args : [{name : "pos", opt : cast false, type : haxe.macro.ComplexType.TPath({pack : ["json2object"], name : "Position", params : []})}, {name : "variable", opt : cast false, type : haxe.macro.ComplexType.TPath({pack : [], name : "String", params : []})}], ret : null, expr : {expr : haxe.macro.ExprDef.EBlock([]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31198, 31204)}, params : []}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31116, 31204)}, {name : "loadJsonString", access : [haxe.macro.Access.AOverride, haxe.macro.Access.APrivate], kind : haxe.macro.FieldType.FFun({args : [{name : "s", opt : cast false, type : haxe.macro.ComplexType.TPath({pack : [], name : "String", params : []})}, {name : "pos", opt : cast false, type : haxe.macro.ComplexType.TPath({pack : ["json2object"], name : "Position", params : []})}, {name : "variable", opt : cast false, type : haxe.macro.ComplexType.TPath({pack : [], name : "String", params : []})}], ret : null, expr : {expr : haxe.macro.ExprDef.EBlock([]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31302, 31308)}, params : []}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31208, 31308)}, {name : "loadJsonNumber", access : [haxe.macro.Access.AOverride, haxe.macro.Access.APrivate], kind : haxe.macro.FieldType.FFun({args : [{name : "f", opt : cast false, type : haxe.macro.ComplexType.TPath({pack : [], name : "String", params : []})}, {name : "pos", opt : cast false, type : haxe.macro.ComplexType.TPath({pack : ["json2object"], name : "Position", params : []})}, {name : "variable", opt : cast false, type : haxe.macro.ComplexType.TPath({pack : [], name : "String", params : []})}], ret : null, expr : {expr : haxe.macro.ExprDef.EBlock([]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31406, 31412)}, params : []}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31312, 31412)}, {name : "loadJsonBool", access : [haxe.macro.Access.AOverride, haxe.macro.Access.APrivate], kind : haxe.macro.FieldType.FFun({args : [{name : "b", opt : cast false, type : haxe.macro.ComplexType.TPath({pack : [], name : "Bool", params : []})}, {name : "pos", opt : cast false, type : haxe.macro.ComplexType.TPath({pack : ["json2object"], name : "Position", params : []})}, {name : "variable", opt : cast false, type : haxe.macro.ComplexType.TPath({pack : [], name : "String", params : []})}], ret : null, expr : {expr : haxe.macro.ExprDef.EBlock([]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31506, 31512)}, params : []}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31416, 31512)}, {name : "loadJsonArray", access : [haxe.macro.Access.AOverride, haxe.macro.Access.APrivate], kind : haxe.macro.FieldType.FFun({args : [{name : "a", opt : cast false, type : haxe.macro.ComplexType.TPath({pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({pack : ["hxjsonast"], name : "Json", params : []}))]})}, {name : "pos", opt : cast false, type : haxe.macro.ComplexType.TPath({pack : ["json2object"], name : "Position", params : []})}, {name : "variable", opt : cast false, type : haxe.macro.ComplexType.TPath({pack : [], name : "String", params : []})}], ret : null, expr : {expr : haxe.macro.ExprDef.EBlock([]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31624, 31630)}, params : []}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31516, 31630)}, {name : "loadJsonObject", access : [haxe.macro.Access.AOverride, haxe.macro.Access.APrivate], kind : haxe.macro.FieldType.FFun({args : [{name : "o", opt : cast false, type : haxe.macro.ComplexType.TPath({pack : [], name : "Array", params : [haxe.macro.TypeParam.TPType(haxe.macro.ComplexType.TPath({pack : ["hxjsonast"], name : "Json", params : [], sub : "JObjectField"}))]})}, {name : "pos", opt : cast false, type : haxe.macro.ComplexType.TPath({pack : ["json2object"], name : "Position", params : []})}, {name : "variable", opt : cast false, type : haxe.macro.ComplexType.TPath({pack : [], name : "String", params : []})}], ret : null, expr : {expr : haxe.macro.ExprDef.EBlock([]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31756, 31762)}, params : []}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 31634, 31762)}]};
		if (haxe.macro.Context.defined("cs")) {
			parser.meta.push({name : ":nativeGen", params : null, pos : haxe.macro.Context.currentPos()});
		};
		var parser_cls = {name : parserName, pack : [], params : null, sub : null};
		var getAutoExpr = cast {expr : haxe.macro.ExprDef.EReturn({expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.ENew(parser_cls, [{expr : haxe.macro.ExprDef.EArrayDecl([]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 32075, 32077)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("putils")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 32079, 32085)}, {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("NONE")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 32087, 32091)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 32059, 32092)}, "loadJson"), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 32059, 32101)}, [{expr : haxe.macro.ExprDef.EObjectDecl([{field : "value", expr : {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("JNull")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 32109, 32114)}, quotes : haxe.macro.QuoteStatus.Unquoted}, {field : "pos", expr : {expr : haxe.macro.ExprDef.EObjectDecl([{field : "file", expr : {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CString("", haxe.macro.StringLiteralKind.DoubleQuotes)), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 32126, 32128)}, quotes : haxe.macro.QuoteStatus.Unquoted}, {field : "min", expr : {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CInt("0")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 32133, 32134)}, quotes : haxe.macro.QuoteStatus.Unquoted}, {field : "max", expr : {expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CInt("1")), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 32140, 32141)}, quotes : haxe.macro.QuoteStatus.Unquoted}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 32120, 32142)}, quotes : haxe.macro.QuoteStatus.Unquoted}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 32102, 32143)}]), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 32059, 32144)}), pos : $__mk_pos__("/home/ryn/haxelib/json2object/3,11,0/src/json2object/reader/DataBuilder.hx", 32052, 32144)};
		var getAuto = {doc : null, kind : haxe.macro.FieldType.FFun({args : [], expr : getAutoExpr, params : null, ret : {
			{};
			@:ast(switch (type) {
	case null:
		null;	
	case TEnum(_.get().isPrivate => true, _):
		direct();	
	case TInst(_.get().isPrivate => true, _):
		direct();	
	case TType(_.get().isPrivate => true, _):
		direct();	
	case TAbstract(_.get().isPrivate => true, _):
		direct();	
	case TMono(_):
		direct();	
	case TEnum(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TInst(_.get() => classType, params):
		switch (classType.kind) {
			case KTypeParameter(_):
				var ct = asComplexType(classType.name);
				switch toType(ct) {
					case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
						ct;					
					default:
						direct();					
				};			
			default:
				TPath(toTypePath(classType, params));			
		};	
	case TType(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	case TFun(args, ret):
		TFunction([for (a  in  args) a.opt ? nullable(toComplexType(a.t)) : toComplexType(a.t)], toComplexType(ret));	
	case TAnonymous(_.get() => { fields : fields }):
		TAnonymous([for (cf  in  fields) toField(cf)]);	
	case TDynamic(t):
		if (t == null) {
			(TPath({ pack : [], name : "Dynamic", params : [] }) : haxe.macro.Expr.ComplexType);
		} else {
			var ct = toComplexType(t);
			(TPath({ pack : [], name : "Dynamic", params : [TPType(ct)] }) : haxe.macro.Expr.ComplexType);
		};	
	case TLazy(f):
		toComplexType(f());	
	case TAbstract(_.get() => baseType, params):
		TPath(toTypePath(baseType, params));	
	default:
		throw "Invalid type";	
}) if (base == null) {
				null;
			} else switch (@:exhaustive enumIndex base) {
				case 0: {
					var `9 = base[0];
					{
						haxe.macro.TypeTools.toComplexType(base);
					};
				};
				case 1: {
					var `4 = base[0];
					var `5 = base[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `4.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(base);
							};
						} else {
							var baseType = (_hx_tmp = `4.get());
							var params = `5;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
				case 2: {
					var `14 = base[0];
					var `15 = base[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `14.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(base);
							};
						} else {
							var classType = (_hx_tmp = `14.get());
							var params = `15;
							{
								@:ast(switch (classType.kind) {
	case KTypeParameter(_):
		var ct = asComplexType(classType.name);
		switch toType(ct) {
			case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
				ct;			
			default:
				direct();			
		};	
	default:
		TPath(toTypePath(classType, params));	
}) {
									var ` = classType.kind;
									if (enumIndex ` == 1) {
										var `1 = `[0];
										{
											var ct = {
												var s = classType.name;
												var params = null;
												haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.asTypePath(s, params));
											};
											@:ast(switch toType(ct) {
	case Some(TInst(_.get() => cl, _)) if (cl.kind.match(KTypeParameter(_)) && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")):
		ct;	
	default:
		direct();	
}) {
												var ` = json2object.utils.TypeTools.toType(ct, null);
												if (enumIndex ` == 0) {
													var `1 = `[0];
													if (enumIndex `1 == 2) {
														var `2 = `1[0];
														var `3 = `1[1];
														{
															var _hx_tmp;
															{
																var cl = (_hx_tmp = `2.get());
																if ({
																	var ` = cl.kind;
																	if (enumIndex ` == 1) {
																		var `1 = `[0];
																		true;
																	} else false;
																} && cl.module == classType.module && cl.pack.join(".") == classType.pack.join(".")) {
																	ct;
																} else {
																	haxe.macro.TypeTools.toComplexType(base);
																};
															};
														};
													} else {
														haxe.macro.TypeTools.toComplexType(base);
													};
												} else {
													haxe.macro.TypeTools.toComplexType(base);
												};
											};
										};
									} else {
										haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(classType, params));
									};
								};
							};
						};
					};
				};
				case 3: {
					var `12 = base[0];
					var `13 = base[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `12.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(base);
							};
						} else {
							var baseType = (_hx_tmp = `12.get());
							var params = `13;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
				case 4: {
					var `10 = base[0];
					var `11 = base[1];
					{
						var args = `10;
						var ret = `11;
						{
							haxe.macro.ComplexType.TFunction({
								var ` = [];
								{
									var `1 = 0;
									while (`1 < args.length) {
										var a = args[`1];
										++ `1;
										`.push(if (a.opt) {
											json2object.utils.TypeTools.nullable(json2object.utils.TypeTools.toComplexType(a.t));
										} else {
											json2object.utils.TypeTools.toComplexType(a.t);
										});
									};
								};
								`;
							}, json2object.utils.TypeTools.toComplexType(ret));
						};
					};
				};
				case 5: {
					var `6 = base[0];
					{
						var _hx_tmp;
						{
							var `7 = (_hx_tmp = `6.get()).fields;
							var `8 = _hx_tmp.status;
							{
								var fields = `7;
								{
									haxe.macro.ComplexType.TAnonymous({
										var ` = [];
										{
											var `1 = 0;
											while (`1 < fields.length) {
												var cf = fields[`1];
												++ `1;
												`.push(json2object.utils.TypeTools.toField(cf));
											};
										};
										`;
									});
								};
							};
						};
					};
				};
				case 6: {
					var `2 = base[0];
					{
						var t = `2;
						{
							if (t == null) {
								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : []});
							} else {
								var ct = json2object.utils.TypeTools.toComplexType(t);
								cast haxe.macro.ComplexType.TPath({pack : [], name : "Dynamic", params : [haxe.macro.TypeParam.TPType(ct)]});
							};
						};
					};
				};
				case 7: {
					var `3 = base[0];
					{
						var f = `3;
						{
							json2object.utils.TypeTools.toComplexType(f());
						};
					};
				};
				case 8: {
					var ` = base[0];
					var `1 = base[1];
					{
						var _hx_tmp;
						var _hx_tmp;
						if ((_hx_tmp = `.get().isPrivate) == true) {
							{
								haxe.macro.TypeTools.toComplexType(base);
							};
						} else {
							var baseType = (_hx_tmp = `.get());
							var params = `1;
							{
								haxe.macro.ComplexType.TPath(json2object.utils.TypeTools.toTypePath(baseType, params));
							};
						};
					};
				};
			};
		}}), access : [haxe.macro.Access.APublic], name : "getAuto", pos : haxe.macro.Context.currentPos(), meta : null};
		parser.fields.push(getAuto);
		@:ast(switch (type) {
	case TInst(_.get() => t, p):
		switch (t.module) {
			case "String":
				makeStringParser(parser);			
			case "Array" if (p.length == 1 && p[0] != null):
				makeArrayParser(parser, p[0], c);			
			case "List" | "haxe.ds.List" if (p.length == 1 && p[0] != null):
				makeListParser(parser, p[0], c);			
			case _:
				switch (t.kind) {
					case KTypeParameter(_):
						Context.fatalError("json2object: Type parameters are not parsable: " + t.name, callPosition);					
					default:
				};
				if (t.meta.has(jcustom)) {
					makeCustomParser(parser, type, t);
				} else {
					makeObjectOrAnonParser(parser, type, null, c);
				};			
		};	
	case TAnonymous(_):
		makeObjectOrAnonParser(parser, type, null, c);	
	case TAbstract(_.get() => t, p):
		if (t.name == "Null") {
			return makeParser(c, p[0], type);
		} else if (t.name == "Any") {
			Context.fatalError("json2object: Parser of " + t.name + " are not generated", callPosition);
		} else if (t.module == "UInt" && t.name == "UInt") {
			makeUIntParser(parser, base);
		} else if (t.module == "StdTypes") {
			switch (t.name) {
				case "Int":
					makeIntParser(parser, base);				
				case "Float", "Single":
					makeFloatParser(parser, base);				
				case "Bool":
					makeBoolParser(parser, base);				
				default:
					Context.fatalError("json2object: Parser of " + t.name + " are not generated", callPosition);				
			};
		} else if (t.module == "haxe.ds.Map") {
			makeMapParser(parser, p[0], p[1], c);
		} else {
			if (t.meta.has(":enum")) {
				makeAbstractEnumParser(parser, type.applyTypeParameters(t.params, p), c);
			} else if (t.meta.has(":coreType")) {
				Context.fatalError("json2object: Parser of coreType (" + t.name + ") are not generated", Context.currentPos());
			} else {
				makeAbstractParser(parser, type.applyTypeParameters(t.params, p), c);
			};
		};	
	case TEnum(_.get() => t, p):
		makeEnumParser(parser, type.applyTypeParameters(t.params, p), c);	
	case TType(_.get() => t, p):
		return makeParser(c, t.type.applyTypeParameters(t.params, p), type);	
	case TLazy(f):
		return makeParser(c, f());	
	default:
		Context.fatalError("json2object: Parser of " + type.toString() + " are not generated", callPosition);	
}) switch (enumIndex type) {
			case 1: {
				var `5 = type[0];
				var `6 = type[1];
				{
					var _hx_tmp;
					{
						var t = (_hx_tmp = `5.get());
						var p = `6;
						{
							json2object.reader.DataBuilder.makeEnumParser(parser, {
								var typeParameters = t.params;
								haxe.macro.TypeTools.applyTypeParameters(type, typeParameters, p);
							}, c);
						};
					};
				};
			};
			case 2: {
				var `10 = type[0];
				var `11 = type[1];
				{
					var _hx_tmp;
					{
						var t = (_hx_tmp = `10.get());
						var p = `11;
						{
							@:ast(switch (t.module) {
	case "String":
		makeStringParser(parser);	
	case "Array" if (p.length == 1 && p[0] != null):
		makeArrayParser(parser, p[0], c);	
	case "List" | "haxe.ds.List" if (p.length == 1 && p[0] != null):
		makeListParser(parser, p[0], c);	
	case _:
		switch (t.kind) {
			case KTypeParameter(_):
				Context.fatalError("json2object: Type parameters are not parsable: " + t.name, callPosition);			
			default:
		};
		if (t.meta.has(jcustom)) {
			makeCustomParser(parser, type, t);
		} else {
			makeObjectOrAnonParser(parser, type, null, c);
		};	
}) {
								var `2 = t.module;
								switch (`2) {
									case "Array": {
										if (p.length == 1 && p[0] != null) {
											json2object.reader.DataBuilder.makeArrayParser(parser, p[0], c);
										} else {
											@:ast(switch (t.kind) {
	case KTypeParameter(_):
		Context.fatalError("json2object: Type parameters are not parsable: " + t.name, callPosition);	
	default:
}) {
												var `2 = t.kind;
												if (enumIndex `2 == 1) {
													var `3 = `2[0];
													{
														haxe.macro.Context.fatalError("json2object: Type parameters are not parsable: " + t.name, json2object.reader.DataBuilder.callPosition);
													};
												} else {};
											};
											if (t.meta.has(json2object.reader.DataBuilder.jcustom)) {
												json2object.reader.DataBuilder.makeCustomParser(parser, type, t);
											} else {
												json2object.reader.DataBuilder.makeObjectOrAnonParser(parser, type, null, c);
											};
										};
									};
									case "String": {
										{
											json2object.reader.DataBuilder.makeStringParser(parser);
										};
									};
									case "List", "haxe.ds.List": {
										if (p.length == 1 && p[0] != null) {
											json2object.reader.DataBuilder.makeListParser(parser, p[0], c);
										} else {
											@:ast(switch (t.kind) {
	case KTypeParameter(_):
		Context.fatalError("json2object: Type parameters are not parsable: " + t.name, callPosition);	
	default:
}) {
												var `2 = t.kind;
												if (enumIndex `2 == 1) {
													var `3 = `2[0];
													{
														haxe.macro.Context.fatalError("json2object: Type parameters are not parsable: " + t.name, json2object.reader.DataBuilder.callPosition);
													};
												} else {};
											};
											if (t.meta.has(json2object.reader.DataBuilder.jcustom)) {
												json2object.reader.DataBuilder.makeCustomParser(parser, type, t);
											} else {
												json2object.reader.DataBuilder.makeObjectOrAnonParser(parser, type, null, c);
											};
										};
									};
									default: {
										@:ast(switch (t.kind) {
	case KTypeParameter(_):
		Context.fatalError("json2object: Type parameters are not parsable: " + t.name, callPosition);	
	default:
}) {
											var `2 = t.kind;
											if (enumIndex `2 == 1) {
												var `3 = `2[0];
												{
													haxe.macro.Context.fatalError("json2object: Type parameters are not parsable: " + t.name, json2object.reader.DataBuilder.callPosition);
												};
											} else {};
										};
										if (t.meta.has(json2object.reader.DataBuilder.jcustom)) {
											json2object.reader.DataBuilder.makeCustomParser(parser, type, t);
										} else {
											json2object.reader.DataBuilder.makeObjectOrAnonParser(parser, type, null, c);
										};
									}
								};
							};
						};
					};
				};
			};
			case 3: {
				var `8 = type[0];
				var `9 = type[1];
				{
					var _hx_tmp;
					{
						var t = (_hx_tmp = `8.get());
						var p = `9;
						{
							return json2object.reader.DataBuilder.makeParser(c, {
								var type = t.type;
								var typeParameters = t.params;
								haxe.macro.TypeTools.applyTypeParameters(type, typeParameters, p);
							}, type);
						};
					};
				};
			};
			case 5: {
				var `7 = type[0];
				{
					json2object.reader.DataBuilder.makeObjectOrAnonParser(parser, type, null, c);
				};
			};
			case 7: {
				var `4 = type[0];
				{
					var f = `4;
					{
						return json2object.reader.DataBuilder.makeParser(c, f(), null);
					};
				};
			};
			case 8: {
				var `2 = type[0];
				var `3 = type[1];
				{
					var _hx_tmp;
					{
						var t = (_hx_tmp = `2.get());
						var p = `3;
						{
							if (t.name == "Null") {
								return json2object.reader.DataBuilder.makeParser(c, p[0], type);
							} else {
								if (t.name == "Any") {
									haxe.macro.Context.fatalError("json2object: Parser of " + t.name + " are not generated", json2object.reader.DataBuilder.callPosition);
								} else {
									if (t.module == "UInt" && t.name == "UInt") {
										json2object.reader.DataBuilder.makeUIntParser(parser, base);
									} else {
										if (t.module == "StdTypes") {
											@:ast(switch (t.name) {
	case "Int":
		makeIntParser(parser, base);	
	case "Float", "Single":
		makeFloatParser(parser, base);	
	case "Bool":
		makeBoolParser(parser, base);	
	default:
		Context.fatalError("json2object: Parser of " + t.name + " are not generated", callPosition);	
}) {
												var `2 = t.name;
												switch (`2) {
													case "Bool": {
														{
															json2object.reader.DataBuilder.makeBoolParser(parser, base);
														};
													};
													case "Float", "Single": {
														{
															json2object.reader.DataBuilder.makeFloatParser(parser, base);
														};
													};
													case "Int": {
														{
															json2object.reader.DataBuilder.makeIntParser(parser, base);
														};
													};
													default: {
														haxe.macro.Context.fatalError("json2object: Parser of " + t.name + " are not generated", json2object.reader.DataBuilder.callPosition);
													}
												};
											};
										} else {
											if (t.module == "haxe.ds.Map") {
												json2object.reader.DataBuilder.makeMapParser(parser, p[0], p[1], c);
											} else {
												if (t.meta.has(":enum")) {
													json2object.reader.DataBuilder.makeAbstractEnumParser(parser, {
														var typeParameters = t.params;
														haxe.macro.TypeTools.applyTypeParameters(type, typeParameters, p);
													}, c);
												} else {
													if (t.meta.has(":coreType")) {
														haxe.macro.Context.fatalError("json2object: Parser of coreType (" + t.name + ") are not generated", haxe.macro.Context.currentPos());
													} else {
														json2object.reader.DataBuilder.makeAbstractParser(parser, {
															var typeParameters = t.params;
															haxe.macro.TypeTools.applyTypeParameters(type, typeParameters, p);
														}, c);
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
			default: {
				haxe.macro.Context.fatalError("json2object: Parser of " + haxe.macro.TypeTools.toString(type) + " are not generated", json2object.reader.DataBuilder.callPosition);
			}
		};
		parser.fields = {
			var _this = parser.fields;
			{
				var ` = [];
				{
					var `1 = 0;
					var `2 = _this;
					while (`1 < `2.length) {
						var v = `2[`1];
						++ `1;
						if (function(field:haxe.macro.Field) {
							return @:ast(switch (field.kind) {
	case FFun({ expr : { expr : EBlock([]) } }):
		false;	
	default:
		true;	
}) {
								var `12 = field.kind;
								if ((enumIndex `12 == 1)) {
									var `13 = `12[0];
									{
										var `14 = `13.args;
										var `15 = `13.expr;
										var `16 = `13.params;
										var `17 = `13.ret;
										if ((`15 == null)) true else {
											var `18 = `15.expr;
											var `19 = `15.pos;
											if ((enumIndex `18 == 12)) {
												var `20 = `18[0];
												if ((`20.length == 0)) false else true;
											} else true;
										};
									};
								} else true;
							};
						}(v)) {
							`.push(v);
						};
					};
				};
				`;
			};
		};
		haxe.macro.Context.defineType(parser, null);
		var constructedType = haxe.macro.Context.getType(parserName);
		{
			var this = json2object.reader.DataBuilder.parsers;
			cast this.set(parserMapName, constructedType);
		};
		return constructedType;
	}

	public static function build() {
		@:ast(switch (Context.getLocalType()) {
	case TInst(c, [type]):
		var pos = Context.getPosInfos(Context.currentPos());
		if (pos.min != -1 && pos.max != -1) {
			callPosition = Context.makePosition(pos);
		};
		return makeParser(c.get(), type);	
	case _:
		Context.fatalError("json2object: Parsing tools must be a class", Context.currentPos());
		return null;	
}) {
			var ` = haxe.macro.Context.getLocalType();
			if (` == null) {
				haxe.macro.Context.fatalError("json2object: Parsing tools must be a class", haxe.macro.Context.currentPos());
				return null;
			} else if (enumIndex ` == 2) {
				var `1 = `[0];
				var `2 = `[1];
				if (`2.length == 1) {
					var `3 = `2[0];
					{
						var type = `3;
						var c = `1;
						{
							var pos = haxe.macro.Context.getPosInfos(haxe.macro.Context.currentPos());
							if (pos.min != -1 && pos.max != -1) {
								json2object.reader.DataBuilder.callPosition = haxe.macro.Context.makePosition(pos);
							};
							return json2object.reader.DataBuilder.makeParser(c.get(), type, null);
						};
					};
				} else {
					haxe.macro.Context.fatalError("json2object: Parsing tools must be a class", haxe.macro.Context.currentPos());
					return null;
				};
			} else {
				haxe.macro.Context.fatalError("json2object: Parsing tools must be a class", haxe.macro.Context.currentPos());
				return null;
			};
		};
	}
}